{"ast":null,"code":"import { createScreenWidthMediaQuery, getColorsFromCardVariant, getHexFromPaletteColor, withCustomVerticalScrollbar } from '../../../../utils/styles/styles_utils';\n\nconst getContentBackgroundColor = (theme, cardVariant) => {\n  const {\n    backBackgroundColor,\n    backgroundColor: frontBackgroundColor\n  } = getColorsFromCardVariant(theme, cardVariant);\n\n  if (frontBackgroundColor === backBackgroundColor) {\n    return 'transparent';\n  }\n\n  return getHexFromPaletteColor(theme, backBackgroundColor);\n};\n\nexport const styles = theme => {\n  const {\n    miscellaneous: {\n      spacing\n    },\n    screenSizes\n  } = theme;\n  const QUERY_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.small);\n  const QUERY_EXTRA_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.xs);\n  return {\n    container: ({\n      variant\n    }) => {\n      const backHexColor = getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor);\n      return {\n        padding: [spacing * 4, spacing * 8],\n        backgroundColor: getContentBackgroundColor(theme, variant),\n        color: backHexColor,\n        flex: 1,\n        overflow: 'auto',\n        ...withCustomVerticalScrollbar(getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor))\n      };\n    },\n    [QUERY_SMALL]: {\n      container: () => ({\n        padding: [[spacing * 4, spacing * 5], '!important']\n      })\n    },\n    [QUERY_EXTRA_SMALL]: {\n      container: () => ({\n        padding: [[spacing * 4, spacing * 3], '!important']\n      })\n    }\n  };\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/profile_card/profile_card_content/profile_card_content_styles.js"],"names":["createScreenWidthMediaQuery","getColorsFromCardVariant","getHexFromPaletteColor","withCustomVerticalScrollbar","getContentBackgroundColor","theme","cardVariant","backBackgroundColor","backgroundColor","frontBackgroundColor","styles","miscellaneous","spacing","screenSizes","QUERY_SMALL","small","QUERY_EXTRA_SMALL","xs","container","variant","backHexColor","backColor","padding","color","flex","overflow"],"mappings":"AAAA,SACIA,2BADJ,EAEIC,wBAFJ,EAGIC,sBAHJ,EAIIC,2BAJJ,QAKO,uCALP;;AAOA,MAAMC,yBAAyB,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AACtD,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA,eAAe,EAAEC;AAAxC,MAAiER,wBAAwB,CAACI,KAAD,EAAQC,WAAR,CAA/F;;AACA,MAAIG,oBAAoB,KAAKF,mBAA7B,EAAkD;AAC9C,WAAO,aAAP;AACH;;AACD,SAAOL,sBAAsB,CAACG,KAAD,EAAQE,mBAAR,CAA7B;AACH,CAND;;AAQA,OAAO,MAAMG,MAAM,GAAGL,KAAK,IAAI;AAC3B,QAAM;AACFM,IAAAA,aAAa,EAAE;AAAEC,MAAAA;AAAF,KADb;AAEFC,IAAAA;AAFE,MAGFR,KAHJ;AAKA,QAAMS,WAAW,GAAGd,2BAA2B,CAAC,WAAD,EAAca,WAAW,CAACE,KAA1B,CAA/C;AACA,QAAMC,iBAAiB,GAAGhB,2BAA2B,CAAC,WAAD,EAAca,WAAW,CAACI,EAA1B,CAArD;AAEA,SAAO;AACHC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB;AACxB,YAAMC,YAAY,GAAGlB,sBAAsB,CAACG,KAAD,EAAQJ,wBAAwB,CAACI,KAAD,EAAQc,OAAR,CAAxB,CAAyCE,SAAjD,CAA3C;AACA,aAAO;AACHC,QAAAA,OAAO,EAAE,CAACV,OAAO,GAAG,CAAX,EAAcA,OAAO,GAAG,CAAxB,CADN;AAEHJ,QAAAA,eAAe,EAAEJ,yBAAyB,CAACC,KAAD,EAAQc,OAAR,CAFvC;AAGHI,QAAAA,KAAK,EAAEH,YAHJ;AAIHI,QAAAA,IAAI,EAAE,CAJH;AAKHC,QAAAA,QAAQ,EAAE,MALP;AAMH,WAAGtB,2BAA2B,CAC1BD,sBAAsB,CAACG,KAAD,EAAQJ,wBAAwB,CAACI,KAAD,EAAQc,OAAR,CAAxB,CAAyCE,SAAjD,CADI;AAN3B,OAAP;AAUH,KAbE;AAcH,KAACP,WAAD,GAAe;AACXI,MAAAA,SAAS,EAAE,OAAO;AACdI,QAAAA,OAAO,EAAE,CAAC,CAACV,OAAO,GAAG,CAAX,EAAcA,OAAO,GAAG,CAAxB,CAAD,EAA6B,YAA7B;AADK,OAAP;AADA,KAdZ;AAmBH,KAACI,iBAAD,GAAqB;AACjBE,MAAAA,SAAS,EAAE,OAAO;AACdI,QAAAA,OAAO,EAAE,CAAC,CAACV,OAAO,GAAG,CAAX,EAAcA,OAAO,GAAG,CAAxB,CAAD,EAA6B,YAA7B;AADK,OAAP;AADM;AAnBlB,GAAP;AAyBH,CAlCM","sourcesContent":["import {\n    createScreenWidthMediaQuery,\n    getColorsFromCardVariant,\n    getHexFromPaletteColor,\n    withCustomVerticalScrollbar\n} from '../../../../utils/styles/styles_utils';\n\nconst getContentBackgroundColor = (theme, cardVariant) => {\n    const { backBackgroundColor, backgroundColor: frontBackgroundColor } = getColorsFromCardVariant(theme, cardVariant);\n    if (frontBackgroundColor === backBackgroundColor) {\n        return 'transparent';\n    }\n    return getHexFromPaletteColor(theme, backBackgroundColor);\n};\n\nexport const styles = theme => {\n    const {\n        miscellaneous: { spacing },\n        screenSizes\n    } = theme;\n\n    const QUERY_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.small);\n    const QUERY_EXTRA_SMALL = createScreenWidthMediaQuery('max-width', screenSizes.xs);\n\n    return {\n        container: ({ variant }) => {\n            const backHexColor = getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor);\n            return {\n                padding: [spacing * 4, spacing * 8],\n                backgroundColor: getContentBackgroundColor(theme, variant),\n                color: backHexColor,\n                flex: 1,\n                overflow: 'auto',\n                ...withCustomVerticalScrollbar(\n                    getHexFromPaletteColor(theme, getColorsFromCardVariant(theme, variant).backColor)\n                )\n            };\n        },\n        [QUERY_SMALL]: {\n            container: () => ({\n                padding: [[spacing * 4, spacing * 5], '!important']\n            })\n        },\n        [QUERY_EXTRA_SMALL]: {\n            container: () => ({\n                padding: [[spacing * 4, spacing * 3], '!important']\n            })\n        }\n    };\n};\n"]},"metadata":{},"sourceType":"module"}