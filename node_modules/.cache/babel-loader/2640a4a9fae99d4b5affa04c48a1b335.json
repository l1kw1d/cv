{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog.jsx\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { useFormikContext } from 'formik';\nimport { ProjectDialogContentTitle } from './project_dialog_content_title/project_dialog_content_title';\nimport { ProjectDialogContentImages } from './project_dialog_content_images/project_dialog_content_images';\nimport { ProjectDialogContentDescription } from './project_dialog_content_description/project_dialog_content_description';\nimport { ProjectDialogContentDate } from './project_dialog_content_date/project_dialog_content_date';\nimport { styles } from './project_dialog_styles';\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { ProjectValidator } from '../data/validator';\nimport { mapProjectToJsonResume, updateProjectsArray } from '../data/mapping';\nimport { ProjectDialogContentLink } from './project_dialog_content_link/project_dialog_content_link';\nimport { DeveloperProfileContext } from '../../../../../utils/context/contexts';\nconst useStyles = createUseStyles(styles);\nconst DEFAULT_OBJECT = {};\n\nconst ProjectDialogComponent = ({\n  open,\n  onClose,\n  data: project,\n  isEditing\n}) => {\n  const classes = useStyles();\n  const {\n    formatMessage\n  } = useIntl();\n  const {\n    onEdit,\n    data: resume\n  } = useContext(DeveloperProfileContext);\n  const onDialogEdited = useCallback(editedData => {\n    const updateProjectsArray1 = updateProjectsArray(mapProjectToJsonResume(editedData), resume);\n    onEdit(updateProjectsArray1);\n    onClose();\n  }, [onEdit, resume]);\n  const validator = useMemo(() => ProjectValidator(formatMessage), []);\n  return /*#__PURE__*/React.createElement(EditDialog, {\n    classes: {\n      content: classes.container,\n      paper: classes.paper\n    },\n    open: open,\n    onClose: onClose,\n    data: project || DEFAULT_OBJECT,\n    onEdit: onDialogEdited,\n    validationSchema: validator,\n    isEditing: isEditing,\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Project.editDialog.title\",\n      defaultMessage: \"Project's details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, () => /*#__PURE__*/React.createElement(ProjectDialogContent, {\n    isEditing: isEditing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }\n  }));\n};\n\nconst ProjectDialogContent = ({\n  isEditing\n}) => {\n  const classes = useStyles();\n  const {\n    values: project\n  } = useFormikContext();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProjectDialogContentTitle, {\n    isEditing: isEditing,\n    title: project.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ProjectDialogContentDate, {\n    isEditing: isEditing,\n    date: project.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ProjectDialogContentDescription, {\n    isEditing: isEditing,\n    description: project.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProjectDialogContentLink, {\n    isEditing: isEditing,\n    link: project.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProjectDialogContentImages, {\n    isEditing: isEditing,\n    images: project.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const ProjectDialog = ProjectDialogComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog.jsx"],"names":["React","useCallback","useContext","useMemo","FormattedMessage","useIntl","createUseStyles","useFormikContext","ProjectDialogContentTitle","ProjectDialogContentImages","ProjectDialogContentDescription","ProjectDialogContentDate","styles","EditDialog","ProjectValidator","mapProjectToJsonResume","updateProjectsArray","ProjectDialogContentLink","DeveloperProfileContext","useStyles","DEFAULT_OBJECT","ProjectDialogComponent","open","onClose","data","project","isEditing","classes","formatMessage","onEdit","resume","onDialogEdited","editedData","updateProjectsArray1","validator","content","container","paper","ProjectDialogContent","values","headrow","title","description","link","images","ProjectDialog"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { useFormikContext } from 'formik';\n\nimport { ProjectDialogContentTitle } from './project_dialog_content_title/project_dialog_content_title';\nimport { ProjectDialogContentImages } from './project_dialog_content_images/project_dialog_content_images';\nimport { ProjectDialogContentDescription } from './project_dialog_content_description/project_dialog_content_description';\nimport { ProjectDialogContentDate } from './project_dialog_content_date/project_dialog_content_date';\n\nimport { styles } from './project_dialog_styles';\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { ProjectValidator } from '../data/validator';\nimport { mapProjectToJsonResume, updateProjectsArray } from '../data/mapping';\nimport { ProjectDialogContentLink } from './project_dialog_content_link/project_dialog_content_link';\nimport { DeveloperProfileContext } from '../../../../../utils/context/contexts';\n\nconst useStyles = createUseStyles(styles);\n\nconst DEFAULT_OBJECT = {};\nconst ProjectDialogComponent = ({ open, onClose, data: project, isEditing }) => {\n    const classes = useStyles();\n\n    const { formatMessage } = useIntl();\n    const { onEdit, data: resume } = useContext(DeveloperProfileContext);\n\n    const onDialogEdited = useCallback(\n        editedData => {\n            const updateProjectsArray1 = updateProjectsArray(mapProjectToJsonResume(editedData), resume);\n            onEdit(updateProjectsArray1);\n            onClose();\n        },\n        [onEdit, resume]\n    );\n\n    const validator = useMemo(() => ProjectValidator(formatMessage), []);\n\n    return (\n        <EditDialog\n            classes={{ content: classes.container, paper: classes.paper }}\n            open={open}\n            onClose={onClose}\n            data={project || DEFAULT_OBJECT}\n            onEdit={onDialogEdited}\n            validationSchema={validator}\n            isEditing={isEditing}\n            title={<FormattedMessage id=\"Project.editDialog.title\" defaultMessage=\"Project's details\" />}\n        >\n            {() => <ProjectDialogContent isEditing={isEditing} />}\n        </EditDialog>\n    );\n};\n\nconst ProjectDialogContent = ({ isEditing }) => {\n    const classes = useStyles();\n\n    const { values: project } = useFormikContext();\n    return (\n        <>\n            <div className={classes.headrow}>\n                <ProjectDialogContentTitle isEditing={isEditing} title={project.title} />\n                <ProjectDialogContentDate isEditing={isEditing} date={project.data} />\n            </div>\n            <ProjectDialogContentDescription isEditing={isEditing} description={project.description} />\n            <ProjectDialogContentLink isEditing={isEditing} link={project.link} />\n            <ProjectDialogContentImages isEditing={isEditing} images={project.images} />\n        </>\n    );\n};\n\nexport const ProjectDialog = ProjectDialogComponent;\n"]},"metadata":{},"sourceType":"module"}