{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/edit_dialog/studies_card_edit_dialog.jsx\";\nimport React, { memo, useCallback, useMemo, useState } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { animated, useSpring, useTransition, config } from 'react-spring';\nimport { Twemoji } from 'react-emoji-render';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport { useFormikContext } from 'formik';\nimport keyBy from 'lodash/keyBy';\nimport range from 'lodash/range';\nimport moment from 'moment';\nimport uuid from 'uuid/v4';\nimport { List, ListItem, TextField, Tooltip, Typography } from '@wld/ui';\nimport { MenuItem, useMediaQuery } from '@material-ui/core';\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { Select } from '../../../../commons/select/select';\nimport { ReactComponent as MoveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/move_list.svg\";\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/trash.svg\";\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/keyboard_arrow_down.svg\";\nimport { AddButton } from '../../../../commons/add_button/add_button';\nimport { translations } from './studies_translations';\nimport { styles } from './studies_styles';\nimport { STUDIES_CONTENT_TRANSITION_SPRING_PROPS } from './studies_edit_dialog_spring_props';\nconst DragHandle = SortableHandle(({\n  classes\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.dragHandleButton,\n  type: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(MoveIcon, {\n  className: classes.dragHandle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }\n})));\nconst useStyles = createUseStyles(styles);\n\nconst StudiesCardEditDialogComponent = ({\n  open,\n  onClose,\n  data,\n  onEdit,\n  validationSchema,\n  isEditing\n}) => {\n  const classes = useStyles();\n  const {\n    formatMessage\n  } = useIntl();\n  const validationSchemaToPass = useMemo(() => validationSchema(formatMessage), [validationSchema]);\n  return /*#__PURE__*/React.createElement(EditDialog, {\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    onClose: onClose,\n    data: data,\n    isEditing: isEditing,\n    onEdit: onEdit,\n    validationSchema: validationSchemaToPass,\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Studies.editDialog.title\",\n      defaultMessage: \"Your studies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, helpers => /*#__PURE__*/React.createElement(FormationsEditFormWrapper, {\n    helpers: helpers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }));\n};\n\nconst FormationsEditFormWrapper = ({\n  helpers: {\n    handleValueChange\n  }\n}) => {\n  const {\n    values: {\n      education\n    },\n    errors: validationErrors\n  } = useFormikContext();\n  const errors = validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors.education;\n  const formationChanged = useCallback((educationsIndex, field, value) => {\n    handleValueChange(`education[${educationsIndex}].${field}`)(value);\n  }, []);\n  const formationDeleted = useCallback(deletedId => () => {\n    handleValueChange('education')(education.filter(({\n      id\n    }) => deletedId !== id));\n  }, [JSON.stringify(education)]);\n  const formationAdded = useCallback(() => {\n    const id = uuid();\n    return handleValueChange('education')([...education, {\n      position: education.length,\n      id\n    }]);\n  }, [JSON.stringify(education)]);\n  const move = useCallback(({\n    oldIndex,\n    newIndex\n  }) => {\n    handleValueChange('education')(arrayMove(education, oldIndex, newIndex));\n  }, [JSON.stringify(education)]);\n  return /*#__PURE__*/React.createElement(FormationsEditForm, {\n    data: education,\n    onMove: move,\n    onAdd: formationAdded,\n    onFieldChange: formationChanged,\n    onDelete: formationDeleted,\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  });\n};\n\nconst SelectComponent = memo(({\n  value,\n  onChange,\n  classes,\n  id\n}) => {\n  const selectYearItems = useMemo(() => range(1980, moment().year() + 8).sort((a, b) => b - a).map(year => /*#__PURE__*/React.createElement(MenuItem, {\n    key: `formation_year_${id}_${year}`,\n    value: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, year)), []);\n  return /*#__PURE__*/React.createElement(Select, {\n    textFieldProps: {\n      fullWidth: true,\n      variant: 'flat'\n    },\n    value: moment.isMoment(value) ? value.year() : null,\n    onChange: onChange,\n    textFieldIconProps: {\n      className: classes.selectIcon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, selectYearItems);\n});\nconst FormationItem = SortableElement(({\n  id,\n  formation,\n  onChange,\n  onRemove,\n  error: fieldErrors,\n  folded,\n  toggleFold,\n  classes,\n  formationIndex: index\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n  const {\n    formatMessage\n  } = useIntl();\n  const handleInstitutionChange = useCallback(event => onChange(index, 'institution', event.target.value), [index]);\n  const handleStudyType = useCallback(event => onChange(index, 'studyType', event.target.value), [index]);\n  const handleAreaChange = useCallback(event => onChange(index, 'area', event.target.value), [index]);\n  const handleEndDate = useCallback(value => onChange(index, 'endDate', moment({\n    year: value\n  })), [index]);\n  const {\n    rotate\n  } = useSpring({\n    rotate: folded ? -90 : 0\n  });\n  const contentTransitions = useTransition(!folded ? formation : null, item => `${item ? 'visible' : 'invisible'}_study_${item === null || item === void 0 ? void 0 : item.id}_content`, { ...STUDIES_CONTENT_TRANSITION_SPRING_PROPS,\n    unique: true,\n    ...config.stiff\n  });\n  const hasError = Boolean(fieldErrors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.study,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DragHandle, {\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Main.lang.delete\",\n      defaultMessage: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.removeButton,\n    type: \"button\",\n    onClick: onRemove(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: classes.removeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }))), !isMobile && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    className: cn(classes.listItem, hasError && classes.listItemError),\n    onClick: () => toggleFold(!folded),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: classes.arrowContainer,\n    style: {\n      transform: rotate.to(value => `rotate(${value}deg)`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ArrowIcon, {\n    className: cn('refinement-arrow'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  })), hasError && /*#__PURE__*/React.createElement(Twemoji, {\n    className: classes.warningIcon,\n    svg: true,\n    text: \"\\u26A0\\uFE0F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.smallTitle,\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, formation.institution))), contentTransitions.map(({\n    item,\n    key,\n    props\n  }) => item && /*#__PURE__*/React.createElement(animated.div, {\n    key: key,\n    style: props,\n    className: cn(classes.listItem, fieldErrors && classes.listItemError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fieldGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"flat\",\n    value: formation.institution,\n    onChange: handleInstitutionChange,\n    id: `formation_institution_${id}`,\n    placeholder: formatMessage(translations.schoolNamePlaceholder),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }), fieldErrors && fieldErrors.institution && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 49\n    }\n  }, fieldErrors.institution)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(SelectComponent, {\n    onChange: handleEndDate,\n    id: formation.id,\n    value: formation.endDate,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 45\n    }\n  }), fieldErrors && fieldErrors.endDate && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 49\n    }\n  }, fieldErrors.endDate))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fieldGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: `formation_diploma_${id}`,\n    fullWidth: true,\n    variant: \"flat\",\n    label: formatMessage(translations.diplomaTitle),\n    placeholder: formatMessage(translations.diplomaPlaceholder),\n    value: formation.studyType,\n    onChange: handleStudyType,\n    margin: \"normal\",\n    error: fieldErrors && fieldErrors.studyType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 45\n    }\n  }), fieldErrors && fieldErrors.studyType && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 49\n    }\n  }, fieldErrors.studyType)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: `formation_area_${id}`,\n    fullWidth: true,\n    variant: \"flat\",\n    label: formatMessage(translations.mainCourse),\n    placeholder: formatMessage(translations.mainCoursePlaceholder),\n    value: formation.area,\n    onChange: handleAreaChange,\n    margin: \"normal\",\n    error: fieldErrors && fieldErrors.area,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 45\n    }\n  }), fieldErrors && fieldErrors.area && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 49\n    }\n  }, fieldErrors.area)))))));\n});\nconst SortableFormationsItems = SortableContainer(({\n  items,\n  formationChanged,\n  formationDeleted,\n  errors,\n  name,\n  schools,\n  classes\n}) => {\n  const keyedValues = useMemo(() => keyBy(items, ({\n    id\n  }) => id), [items]);\n  const [foldedState, setFoldState] = useState(Object.keys(keyedValues || {}).reduce((state, id) => {\n    // eslint-disable-next-line no-param-reassign\n    state[id] = true;\n    return state;\n  }, {}));\n  const toggleFold = useCallback(id => value => {\n    const newFoldState = { ...foldedState\n    };\n    newFoldState[id] = value;\n    setFoldState(newFoldState);\n  }, [foldedState]);\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, items.map((formation, index) => /*#__PURE__*/React.createElement(FormationItem, Object.assign({\n    key: `${name}_${formation.id}_${index}`,\n    onChange: formationChanged,\n    onRemove: formationDeleted,\n    id: formation.id,\n    formationIndex: index,\n    error: errors && errors[index],\n    toggleFold: toggleFold(formation.id),\n    folded: foldedState[formation.id]\n  }, {\n    index,\n    formation,\n    schools,\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }))));\n});\nexport const FormationsEditForm = ({\n  data,\n  onMove,\n  onAdd,\n  onFieldChange,\n  onDelete,\n  errors\n}) => {\n  const classes = useStyles();\n  const globalError = typeof errors === 'string' && errors;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SortableFormationsItems, Object.assign({\n    lockToContainerEdges: true,\n    helperClass: classes.sortableHelper,\n    items: data,\n    onSortEnd: onMove,\n    distance: 20,\n    useDragHandle: true,\n    lockAxis: \"y\",\n    name: \"education\",\n    formationChanged: onFieldChange,\n    formationDeleted: onDelete,\n    errors: errors\n  }, {\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AddButton, {\n    onClick: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }\n  }), globalError && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }, errors));\n};\nexport const StudiesCardEditDialog = StudiesCardEditDialogComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/edit_dialog/studies_card_edit_dialog.jsx"],"names":["React","memo","useCallback","useMemo","useState","cn","createUseStyles","useTheme","FormattedMessage","useIntl","animated","useSpring","useTransition","config","Twemoji","arrayMove","SortableContainer","SortableElement","SortableHandle","useFormikContext","keyBy","range","moment","uuid","List","ListItem","TextField","Tooltip","Typography","MenuItem","useMediaQuery","EditDialog","Select","AddButton","translations","styles","STUDIES_CONTENT_TRANSITION_SPRING_PROPS","DragHandle","classes","dragHandleButton","dragHandle","useStyles","StudiesCardEditDialogComponent","open","onClose","data","onEdit","validationSchema","isEditing","formatMessage","validationSchemaToPass","paper","helpers","FormationsEditFormWrapper","handleValueChange","values","education","errors","validationErrors","formationChanged","educationsIndex","field","value","formationDeleted","deletedId","filter","id","JSON","stringify","formationAdded","position","length","move","oldIndex","newIndex","SelectComponent","onChange","selectYearItems","year","sort","a","b","map","fullWidth","variant","isMoment","className","selectIcon","FormationItem","formation","onRemove","error","fieldErrors","folded","toggleFold","formationIndex","index","theme","isMobile","screenSizes","small","handleInstitutionChange","event","target","handleStudyType","handleAreaChange","handleEndDate","rotate","contentTransitions","item","unique","stiff","hasError","Boolean","study","itemContainer","header","divider","removeButton","removeIcon","listItem","listItemError","arrowContainer","transform","to","warningIcon","smallTitle","institution","key","props","fieldGroup","schoolNamePlaceholder","endDate","diplomaTitle","diplomaPlaceholder","studyType","mainCourse","mainCoursePlaceholder","area","SortableFormationsItems","items","name","schools","keyedValues","foldedState","setFoldState","Object","keys","reduce","state","newFoldState","FormationsEditForm","onMove","onAdd","onFieldChange","onDelete","globalError","sortableHelper","StudiesCardEditDialog"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { animated, useSpring, useTransition, config } from 'react-spring';\n\nimport { Twemoji } from 'react-emoji-render';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport { useFormikContext } from 'formik';\nimport keyBy from 'lodash/keyBy';\nimport range from 'lodash/range';\nimport moment from 'moment';\nimport uuid from 'uuid/v4';\n\nimport { List, ListItem, TextField, Tooltip, Typography } from '@wld/ui';\n\nimport { MenuItem, useMediaQuery } from '@material-ui/core';\n\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\n\nimport { Select } from '../../../../commons/select/select';\n\nimport { ReactComponent as MoveIcon } from '../../../../../assets/icons/move_list.svg';\nimport { ReactComponent as DeleteIcon } from '../../../../../assets/icons/trash.svg';\nimport { ReactComponent as ArrowIcon } from '../../../../../assets/icons/keyboard_arrow_down.svg';\n\nimport { AddButton } from '../../../../commons/add_button/add_button';\n\nimport { translations } from './studies_translations';\nimport { styles } from './studies_styles';\nimport { STUDIES_CONTENT_TRANSITION_SPRING_PROPS } from './studies_edit_dialog_spring_props';\n\nconst DragHandle = SortableHandle(({ classes }) => (\n    <button className={classes.dragHandleButton} type=\"button\">\n        <MoveIcon className={classes.dragHandle} />\n    </button>\n));\nconst useStyles = createUseStyles(styles);\n\nconst StudiesCardEditDialogComponent = ({ open, onClose, data, onEdit, validationSchema, isEditing }) => {\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n    const validationSchemaToPass = useMemo(() => validationSchema(formatMessage), [validationSchema]);\n\n    return (\n        <EditDialog\n            classes={{\n                paper: classes.paper\n            }}\n            open={open}\n            onClose={onClose}\n            data={data}\n            isEditing={isEditing}\n            onEdit={onEdit}\n            validationSchema={validationSchemaToPass}\n            title={<FormattedMessage id=\"Studies.editDialog.title\" defaultMessage=\"Your studies\" />}\n        >\n            {helpers => <FormationsEditFormWrapper helpers={helpers} />}\n        </EditDialog>\n    );\n};\n\nconst FormationsEditFormWrapper = ({ helpers: { handleValueChange } }) => {\n    const {\n        values: { education },\n        errors: validationErrors\n    } = useFormikContext();\n\n    const errors = validationErrors?.education;\n\n    const formationChanged = useCallback((educationsIndex, field, value) => {\n        handleValueChange(`education[${educationsIndex}].${field}`)(value);\n    }, []);\n    const formationDeleted = useCallback(\n        deletedId => () => {\n            handleValueChange('education')(education.filter(({ id }) => deletedId !== id));\n        },\n        [JSON.stringify(education)]\n    );\n\n    const formationAdded = useCallback(() => {\n        const id = uuid();\n        return handleValueChange('education')([\n            ...education,\n            {\n                position: education.length,\n                id\n            }\n        ]);\n    }, [JSON.stringify(education)]);\n    const move = useCallback(\n        ({ oldIndex, newIndex }) => {\n            handleValueChange('education')(arrayMove(education, oldIndex, newIndex));\n        },\n        [JSON.stringify(education)]\n    );\n\n    return (\n        <FormationsEditForm\n            data={education}\n            onMove={move}\n            onAdd={formationAdded}\n            onFieldChange={formationChanged}\n            onDelete={formationDeleted}\n            errors={errors}\n        />\n    );\n};\n\nconst SelectComponent = memo(({ value, onChange, classes, id }) => {\n    const selectYearItems = useMemo(\n        () =>\n            range(1980, moment().year() + 8)\n                .sort((a, b) => b - a)\n                .map(year => (\n                    <MenuItem key={`formation_year_${id}_${year}`} value={year}>\n                        {year}\n                    </MenuItem>\n                )),\n        []\n    );\n\n    return (\n        <Select\n            textFieldProps={{\n                fullWidth: true,\n                variant: 'flat'\n            }}\n            value={moment.isMoment(value) ? value.year() : null}\n            onChange={onChange}\n            textFieldIconProps={{ className: classes.selectIcon }}\n        >\n            {selectYearItems}\n        </Select>\n    );\n});\n\nconst FormationItem = SortableElement(\n    ({ id, formation, onChange, onRemove, error: fieldErrors, folded, toggleFold, classes, formationIndex: index }) => {\n        const theme = useTheme();\n        const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n\n        const { formatMessage } = useIntl();\n\n        const handleInstitutionChange = useCallback(event => onChange(index, 'institution', event.target.value), [\n            index\n        ]);\n        const handleStudyType = useCallback(event => onChange(index, 'studyType', event.target.value), [index]);\n        const handleAreaChange = useCallback(event => onChange(index, 'area', event.target.value), [index]);\n        const handleEndDate = useCallback(value => onChange(index, 'endDate', moment({ year: value })), [index]);\n\n        const { rotate } = useSpring({\n            rotate: folded ? -90 : 0\n        });\n\n        const contentTransitions = useTransition(\n            !folded ? formation : null,\n            item => `${item ? 'visible' : 'invisible'}_study_${item?.id}_content`,\n            {\n                ...STUDIES_CONTENT_TRANSITION_SPRING_PROPS,\n                unique: true,\n                ...config.stiff\n            }\n        );\n\n        const hasError = Boolean(fieldErrors);\n\n        return (\n            <div className={classes.study}>\n                <div className={classes.itemContainer}>\n                    <div className={classes.header}>\n                        <DragHandle classes={classes} />\n                        <div className={classes.divider} />\n                        <Tooltip title={<FormattedMessage id=\"Main.lang.delete\" defaultMessage=\"Delete\" />}>\n                            <button className={classes.removeButton} type=\"button\" onClick={onRemove(id)}>\n                                <DeleteIcon className={classes.removeIcon} />\n                            </button>\n                        </Tooltip>\n                        {!isMobile && <div className={classes.divider} />}\n                        <ListItem\n                            button\n                            className={cn(classes.listItem, hasError && classes.listItemError)}\n                            onClick={() => toggleFold(!folded)}\n                        >\n                            <animated.div\n                                className={classes.arrowContainer}\n                                style={{\n                                    transform: rotate.to(value => `rotate(${value}deg)`)\n                                }}\n                            >\n                                <ArrowIcon className={cn('refinement-arrow')} />\n                            </animated.div>\n                            {hasError && <Twemoji className={classes.warningIcon} svg text=\"⚠️\" />}\n                            <Typography className={classes.smallTitle} color=\"dark\">\n                                {formation.institution}\n                            </Typography>\n                        </ListItem>\n                    </div>\n                    {contentTransitions.map(\n                        ({ item, key, props }) =>\n                            item && (\n                                <animated.div\n                                    key={key}\n                                    style={props}\n                                    className={cn(classes.listItem, fieldErrors && classes.listItemError)}\n                                >\n                                    <div className={classes.fieldGroup}>\n                                        <div className={classes.field}>\n                                            <TextField\n                                                fullWidth\n                                                variant=\"flat\"\n                                                value={formation.institution}\n                                                onChange={handleInstitutionChange}\n                                                id={`formation_institution_${id}`}\n                                                placeholder={formatMessage(translations.schoolNamePlaceholder)}\n                                            />\n                                            {fieldErrors && fieldErrors.institution && (\n                                                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                                    {fieldErrors.institution}\n                                                </Typography>\n                                            )}\n                                        </div>\n                                        <div className={classes.field}>\n                                            <SelectComponent\n                                                onChange={handleEndDate}\n                                                id={formation.id}\n                                                value={formation.endDate}\n                                                classes={classes}\n                                            />\n                                            {fieldErrors && fieldErrors.endDate && (\n                                                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                                    {fieldErrors.endDate}\n                                                </Typography>\n                                            )}\n                                        </div>\n                                    </div>\n                                    <div className={classes.fieldGroup}>\n                                        <div className={classes.field}>\n                                            <TextField\n                                                id={`formation_diploma_${id}`}\n                                                fullWidth\n                                                variant=\"flat\"\n                                                label={formatMessage(translations.diplomaTitle)}\n                                                placeholder={formatMessage(translations.diplomaPlaceholder)}\n                                                value={formation.studyType}\n                                                onChange={handleStudyType}\n                                                margin=\"normal\"\n                                                error={fieldErrors && fieldErrors.studyType}\n                                            />\n\n                                            {fieldErrors && fieldErrors.studyType && (\n                                                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                                    {fieldErrors.studyType}\n                                                </Typography>\n                                            )}\n                                        </div>\n                                        <div className={classes.field}>\n                                            <TextField\n                                                id={`formation_area_${id}`}\n                                                fullWidth\n                                                variant=\"flat\"\n                                                label={formatMessage(translations.mainCourse)}\n                                                placeholder={formatMessage(translations.mainCoursePlaceholder)}\n                                                value={formation.area}\n                                                onChange={handleAreaChange}\n                                                margin=\"normal\"\n                                                error={fieldErrors && fieldErrors.area}\n                                            />\n\n                                            {fieldErrors && fieldErrors.area && (\n                                                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                                    {fieldErrors.area}\n                                                </Typography>\n                                            )}\n                                        </div>\n                                    </div>\n                                </animated.div>\n                            )\n                    )}\n                </div>\n            </div>\n        );\n    }\n);\n\nconst SortableFormationsItems = SortableContainer(\n    ({ items, formationChanged, formationDeleted, errors, name, schools, classes }) => {\n        const keyedValues = useMemo(() => keyBy(items, ({ id }) => id), [items]);\n\n        const [foldedState, setFoldState] = useState(\n            Object.keys(keyedValues || {}).reduce((state, id) => {\n                // eslint-disable-next-line no-param-reassign\n                state[id] = true;\n                return state;\n            }, {})\n        );\n\n        const toggleFold = useCallback(\n            id => value => {\n                const newFoldState = { ...foldedState };\n                newFoldState[id] = value;\n                setFoldState(newFoldState);\n            },\n            [foldedState]\n        );\n        return (\n            <List>\n                {items.map((formation, index) => (\n                    <FormationItem\n                        key={`${name}_${formation.id}_${index}`}\n                        onChange={formationChanged}\n                        onRemove={formationDeleted}\n                        id={formation.id}\n                        formationIndex={index}\n                        error={errors && errors[index]}\n                        toggleFold={toggleFold(formation.id)}\n                        folded={foldedState[formation.id]}\n                        {...{\n                            index,\n                            formation,\n                            schools,\n                            classes\n                        }}\n                    />\n                ))}\n            </List>\n        );\n    }\n);\n\nexport const FormationsEditForm = ({ data, onMove, onAdd, onFieldChange, onDelete, errors }) => {\n    const classes = useStyles();\n    const globalError = typeof errors === 'string' && errors;\n\n    return (\n        <>\n            <SortableFormationsItems\n                lockToContainerEdges\n                helperClass={classes.sortableHelper}\n                items={data}\n                onSortEnd={onMove}\n                distance={20}\n                useDragHandle\n                lockAxis=\"y\"\n                name=\"education\"\n                formationChanged={onFieldChange}\n                formationDeleted={onDelete}\n                errors={errors}\n                {...{ classes }}\n            />\n            <AddButton onClick={onAdd} />\n            {globalError && (\n                <Typography color=\"danger\" component=\"p\">\n                    {errors}\n                </Typography>\n            )}\n        </>\n    );\n};\n\nexport const StudiesCardEditDialog = StudiesCardEditDialogComponent;\n"]},"metadata":{},"sourceType":"module"}