{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/banner/user_actions_row/customize_button/customize_button.jsx\";\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@wld/ui';\nimport { useMediaQuery } from '@material-ui/core';\nimport { createUseStyles } from 'react-jss';\nimport { Twemoji } from 'react-emoji-render';\nimport { useCallbackOpen } from '../../../hooks/use_callback_open';\nimport { CustomizeDialog } from '../customize_dialog/customize_dialog';\nimport { translations } from './customize_button_translations';\nimport { styles } from './customize_button_styles';\nconst useStyles = createUseStyles(styles);\nexport const CustomizeButton = ({\n  customizationOptions\n}) => {\n  const {\n    formatMessage\n  } = useIntl();\n  const [dialogOpen, open, close] = useCallbackOpen();\n  const classes = useStyles();\n  const isMobile = useMediaQuery('(max-width:500px)', {\n    defaultMatches: true\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomizeDialog, {\n    open: dialogOpen,\n    onClose: close,\n    customizationOptions: customizationOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"light\",\n    onClick: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Twemoji, {\n    svg: true,\n    text: \"\\uD83C\\uDFA8\",\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), !isMobile && formatMessage(translations.customize)));\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/banner/user_actions_row/customize_button/customize_button.jsx"],"names":["React","useIntl","Button","useMediaQuery","createUseStyles","Twemoji","useCallbackOpen","CustomizeDialog","translations","styles","useStyles","CustomizeButton","customizationOptions","formatMessage","dialogOpen","open","close","classes","isMobile","defaultMatches","icon","customize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,MAAT,QAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,eAAT,QAAgC,sCAAhC;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,MAAMC,SAAS,GAAGN,eAAe,CAACK,MAAD,CAAjC;AACA,OAAO,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAoBZ,OAAO,EAAjC;AACA,QAAM,CAACa,UAAD,EAAaC,IAAb,EAAmBC,KAAnB,IAA4BV,eAAe,EAAjD;AACA,QAAMW,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,QAAQ,GAAGf,aAAa,CAAC,mBAAD,EAAsB;AAAEgB,IAAAA,cAAc,EAAE;AAAlB,GAAtB,CAA9B;AAEA,sBACI,uDACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,UAAvB;AAAmC,IAAA,OAAO,EAAEE,KAA5C;AAAmD,IAAA,oBAAoB,EAAEJ,oBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,OAAjC;AAAyC,IAAA,OAAO,EAAEG,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,IAAI,EAAC,cAAlB;AAAuB,IAAA,SAAS,EAAEE,OAAO,CAACG,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEK,CAACF,QAAD,IAAaL,aAAa,CAACL,YAAY,CAACa,SAAd,CAF/B,CAFJ,CADJ;AASH,CAfM","sourcesContent":["import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@wld/ui';\nimport { useMediaQuery } from '@material-ui/core';\nimport { createUseStyles } from 'react-jss';\nimport { Twemoji } from 'react-emoji-render';\nimport { useCallbackOpen } from '../../../hooks/use_callback_open';\nimport { CustomizeDialog } from '../customize_dialog/customize_dialog';\nimport { translations } from './customize_button_translations';\nimport { styles } from './customize_button_styles';\n\nconst useStyles = createUseStyles(styles);\nexport const CustomizeButton = ({ customizationOptions }) => {\n    const { formatMessage } = useIntl();\n    const [dialogOpen, open, close] = useCallbackOpen();\n    const classes = useStyles();\n    const isMobile = useMediaQuery('(max-width:500px)', { defaultMatches: true });\n\n    return (\n        <>\n            <CustomizeDialog open={dialogOpen} onClose={close} customizationOptions={customizationOptions} />\n            <Button variant=\"outlined\" color=\"light\" onClick={open}>\n                <Twemoji svg text=\"ðŸŽ¨\" className={classes.icon} />\n                {!isMobile && formatMessage(translations.customize)}\n            </Button>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}