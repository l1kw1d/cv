{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_description/project_dialog_content_description.jsx\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { TextField, Typography } from '@wld/ui';\nimport { useFormikContext } from 'formik';\nimport { styles } from './project_dialog_content_description_styles';\nconst useStyles = createUseStyles(styles);\n\nconst ProjectDialogContentDescriptionComponent = ({\n  description,\n  isEditing\n}) => {\n  const classes = useStyles({\n    isEditing\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    description: description,\n    isEditing: isEditing,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Content = ({\n  description,\n  isEditing,\n  classes\n}) => {\n  if (isEditing) {\n    return /*#__PURE__*/React.createElement(EditingContent, {\n      description: description,\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultContent, {\n    description: description,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  });\n};\n\nconst DefaultContent = ({\n  description,\n  classes\n}) => /*#__PURE__*/React.createElement(Typography, {\n  customClasses: {\n    container: classes.typography\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, description);\n\nconst EditingContent = ({\n  classes\n}) => {\n  const {\n    handleChange,\n    values,\n    errors\n  } = useFormikContext();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"label\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Project.details.dialog.title\",\n    defaultMessage: \"Project details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    rows: 8,\n    variant: \"flat\",\n    onChange: handleChange,\n    name: \"description\",\n    value: values.description,\n    customClasses: {\n      container: classes.textField\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), (errors === null || errors === void 0 ? void 0 : errors.description) && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, errors.description));\n};\n\nexport const ProjectDialogContentDescription = ProjectDialogContentDescriptionComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_description/project_dialog_content_description.jsx"],"names":["React","FormattedMessage","createUseStyles","TextField","Typography","useFormikContext","styles","useStyles","ProjectDialogContentDescriptionComponent","description","isEditing","classes","container","Content","DefaultContent","typography","EditingContent","handleChange","values","errors","textField","ProjectDialogContentDescription"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { TextField, Typography } from '@wld/ui';\nimport { useFormikContext } from 'formik';\n\nimport { styles } from './project_dialog_content_description_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProjectDialogContentDescriptionComponent = ({ description, isEditing }) => {\n    const classes = useStyles({ isEditing });\n    return (\n        <div className={classes.container}>\n            <Content description={description} isEditing={isEditing} classes={classes} />\n        </div>\n    );\n};\n\nconst Content = ({ description, isEditing, classes }) => {\n    if (isEditing) {\n        return <EditingContent description={description} classes={classes} />;\n    }\n    return <DefaultContent description={description} classes={classes} />;\n};\n\nconst DefaultContent = ({ description, classes }) => (\n    <Typography customClasses={{ container: classes.typography }}>{description}</Typography>\n);\n\nconst EditingContent = ({ classes }) => {\n    const { handleChange, values, errors } = useFormikContext();\n\n    return (\n        <>\n            <Typography variant=\"label\" component=\"div\">\n                <FormattedMessage id=\"Project.details.dialog.title\" defaultMessage=\"Project details\" />\n            </Typography>\n            <TextField\n                fullWidth\n                multiline\n                rows={8}\n                variant=\"flat\"\n                onChange={handleChange}\n                name=\"description\"\n                value={values.description}\n                customClasses={{\n                    container: classes.textField\n                }}\n            />\n            {errors?.description && (\n                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                    {errors.description}\n                </Typography>\n            )}\n        </>\n    );\n};\n\nexport const ProjectDialogContentDescription = ProjectDialogContentDescriptionComponent;\n"]},"metadata":{},"sourceType":"module"}