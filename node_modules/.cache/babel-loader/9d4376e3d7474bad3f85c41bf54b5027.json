{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/banner/user_actions_row/customize_dialog/card_orderer/cards_orderer.jsx\";\nimport React, { createContext, memo, useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { List } from '@wld/ui';\nimport { CardStub } from '../card_stub/card_stub';\nimport { DEFAULT_CARD_ORDER } from '../../../../cards/utils/cards_order';\nimport { styles } from './cards_orderer_styles';\nconst useStyles = createUseStyles(styles);\nconst SortableCard = SortableElement(memo(CardStub));\nexport const Context = createContext({});\n\nconst CardsOrdererComponent = ({\n  onChange,\n  value: cardsOrder = DEFAULT_CARD_ORDER\n}) => {\n  const classes = useStyles();\n  const [isSorting, setIsSorting] = useState(false);\n  const onMove = useCallback(({\n    oldIndex,\n    newIndex\n  }) => {\n    setIsSorting(false);\n    onChange(arrayMove(cloneDeep(cardsOrder), oldIndex, newIndex));\n  }, [cardsOrder, onChange]);\n  const onItemChanged = useCallback((index, value) => {\n    const newValue = cloneDeep(cardsOrder);\n    newValue[index] = value;\n    onChange(newValue);\n  }, [cardsOrder, onChange]);\n  const handleSortStart = useCallback(() => setIsSorting(true), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      isSorting\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SortableCards, {\n    lockToContainerEdges: true,\n    axis: \"xy\",\n    helperClass: classes.sortableHelper,\n    items: cardsOrder,\n    onItemChanged: onItemChanged,\n    distance: 15,\n    onSortStart: handleSortStart,\n    onSortEnd: onMove,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst SortableCards = SortableContainer(({\n  items = [],\n  onItemChanged\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(List, {\n    className: classes.cardsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(SortableCard, {\n    onItemChanged: onItemChanged,\n    index: index,\n    cardIndex: index,\n    className: classes.sortableCard,\n    key: `card_orderer_${index}_${item.type}`,\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })));\n});\nexport const CardsOrderer = CardsOrdererComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/banner/user_actions_row/customize_dialog/card_orderer/cards_orderer.jsx"],"names":["React","createContext","memo","useCallback","useState","createUseStyles","SortableContainer","SortableElement","arrayMove","cloneDeep","List","CardStub","DEFAULT_CARD_ORDER","styles","useStyles","SortableCard","Context","CardsOrdererComponent","onChange","value","cardsOrder","classes","isSorting","setIsSorting","onMove","oldIndex","newIndex","onItemChanged","index","newValue","handleSortStart","container","sortableHelper","SortableCards","items","cardsContainer","map","item","sortableCard","type","CardsOrderer"],"mappings":"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","sourcesContent":["import React, { createContext, memo, useCallback, useState } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { SortableContainer, SortableElement, arrayMove } from 'react-sortable-hoc';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { List } from '@wld/ui';\n\nimport { CardStub } from '../card_stub/card_stub';\nimport { DEFAULT_CARD_ORDER } from '../../../../cards/utils/cards_order';\n\nimport { styles } from './cards_orderer_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst SortableCard = SortableElement(memo(CardStub));\n\nexport const Context = createContext({});\n\nconst CardsOrdererComponent = ({ onChange, value: cardsOrder = DEFAULT_CARD_ORDER }) => {\n    const classes = useStyles();\n    const [isSorting, setIsSorting] = useState(false);\n    const onMove = useCallback(\n        ({ oldIndex, newIndex }) => {\n            setIsSorting(false);\n            onChange(arrayMove(cloneDeep(cardsOrder), oldIndex, newIndex));\n        },\n        [cardsOrder, onChange]\n    );\n    const onItemChanged = useCallback(\n        (index, value) => {\n            const newValue = cloneDeep(cardsOrder);\n            newValue[index] = value;\n            onChange(newValue);\n        },\n        [cardsOrder, onChange]\n    );\n\n    const handleSortStart = useCallback(() => setIsSorting(true), []);\n\n    return (\n        <div className={classes.container}>\n            <Context.Provider value={{ isSorting }}>\n                <SortableCards\n                    lockToContainerEdges\n                    axis=\"xy\"\n                    helperClass={classes.sortableHelper}\n                    items={cardsOrder}\n                    onItemChanged={onItemChanged}\n                    distance={15}\n                    onSortStart={handleSortStart}\n                    onSortEnd={onMove}\n                    classes={classes}\n                />\n            </Context.Provider>\n        </div>\n    );\n};\n\nconst SortableCards = SortableContainer(({ items = [], onItemChanged }) => {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.cardsContainer}>\n            {items.map((item, index) => (\n                <SortableCard\n                    onItemChanged={onItemChanged}\n                    index={index}\n                    cardIndex={index}\n                    className={classes.sortableCard}\n                    key={`card_orderer_${index}_${item.type}`}\n                    data={item}\n                />\n            ))}\n        </List>\n    );\n});\n\nexport const CardsOrderer = CardsOrdererComponent;\n"]},"metadata":{},"sourceType":"module"}