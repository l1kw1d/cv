{"ast":null,"code":"export const flex = Object.freeze({\n  center: Object.freeze({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  })\n});\nexport const withCustomHorizontalScrollbar = (color = '#c1c1c1') => ({\n  '&::-webkit-scrollbar-track': {\n    border: 0\n  },\n  '&::-webkit-scrollbar': {\n    height: 5\n  },\n  '&::-webkit-scrollbar-thumb': {\n    backgroundColor: color\n  },\n  scrollbarWidth: 'thin',\n  scrollbarColor: `${color} transparent`\n});\nexport const withCustomVerticalScrollbar = (color = '#c1c1c1') => ({\n  '&::-webkit-scrollbar-track': {\n    border: 0\n  },\n  '&::-webkit-scrollbar': {\n    width: 6\n  },\n  '&::-webkit-scrollbar-thumb': {\n    backgroundColor: color\n  },\n  scrollbarWidth: 'thin',\n  scrollbarColor: `${color} transparent`\n});\nexport const getColorsFromCardVariant = (theme, cardVariant) => theme.components.cards.variants[cardVariant] || theme.components.cards.default;\nexport const getHexFromPaletteColor = (theme, paletteColor, shade = 500) => {\n  var _theme$palette$palett;\n\n  return ((_theme$palette$palett = theme.palette[paletteColor]) !== null && _theme$palette$palett !== void 0 ? _theme$palette$palett : theme.primary)[shade];\n};\nexport const getContrastDefaultColorFromPaletteColor = (theme, paletteColor) => theme.palette[paletteColor].contrastDefaultColor;\nexport const createScreenWidthMediaQuery = (key = 'max-width', value) => `@media screen and (${key}: ${value}px)`;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/utils/styles/styles_utils.js"],"names":["flex","Object","freeze","center","display","alignItems","justifyContent","withCustomHorizontalScrollbar","color","border","height","backgroundColor","scrollbarWidth","scrollbarColor","withCustomVerticalScrollbar","width","getColorsFromCardVariant","theme","cardVariant","components","cards","variants","default","getHexFromPaletteColor","paletteColor","shade","palette","primary","getContrastDefaultColorFromPaletteColor","contrastDefaultColor","createScreenWidthMediaQuery","key","value"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC9BC,EAAAA,MAAM,EAAEF,MAAM,CAACC,MAAP,CAAc;AAClBE,IAAAA,OAAO,EAAE,MADS;AAElBC,IAAAA,UAAU,EAAE,QAFM;AAGlBC,IAAAA,cAAc,EAAE;AAHE,GAAd;AADsB,CAAd,CAAb;AAQP,OAAO,MAAMC,6BAA6B,GAAG,CAACC,KAAK,GAAG,SAAT,MAAwB;AACjE,gCAA8B;AAC1BC,IAAAA,MAAM,EAAE;AADkB,GADmC;AAIjE,0BAAwB;AACpBC,IAAAA,MAAM,EAAE;AADY,GAJyC;AAOjE,gCAA8B;AAC1BC,IAAAA,eAAe,EAAEH;AADS,GAPmC;AAUjEI,EAAAA,cAAc,EAAE,MAViD;AAWjEC,EAAAA,cAAc,EAAG,GAAEL,KAAM;AAXwC,CAAxB,CAAtC;AAcP,OAAO,MAAMM,2BAA2B,GAAG,CAACN,KAAK,GAAG,SAAT,MAAwB;AAC/D,gCAA8B;AAC1BC,IAAAA,MAAM,EAAE;AADkB,GADiC;AAI/D,0BAAwB;AACpBM,IAAAA,KAAK,EAAE;AADa,GAJuC;AAO/D,gCAA8B;AAC1BJ,IAAAA,eAAe,EAAEH;AADS,GAPiC;AAU/DI,EAAAA,cAAc,EAAE,MAV+C;AAW/DC,EAAAA,cAAc,EAAG,GAAEL,KAAM;AAXsC,CAAxB,CAApC;AAcP,OAAO,MAAMQ,wBAAwB,GAAG,CAACC,KAAD,EAAQC,WAAR,KACpCD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBC,QAAvB,CAAgCH,WAAhC,KAAgDD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBE,OADpE;AAGP,OAAO,MAAMC,sBAAsB,GAAG,CAACN,KAAD,EAAQO,YAAR,EAAsBC,KAAK,GAAG,GAA9B;AAAA;;AAAA,SAClC,0BAACR,KAAK,CAACS,OAAN,CAAcF,YAAd,CAAD,yEAAgCP,KAAK,CAACU,OAAtC,EAA+CF,KAA/C,CADkC;AAAA,CAA/B;AAGP,OAAO,MAAMG,uCAAuC,GAAG,CAACX,KAAD,EAAQO,YAAR,KACnDP,KAAK,CAACS,OAAN,CAAcF,YAAd,EAA4BK,oBADzB;AAGP,OAAO,MAAMC,2BAA2B,GAAG,CAACC,GAAG,GAAG,WAAP,EAAoBC,KAApB,KAA+B,sBAAqBD,GAAI,KAAIC,KAAM,KAAtG","sourcesContent":["export const flex = Object.freeze({\n    center: Object.freeze({\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    })\n});\n\nexport const withCustomHorizontalScrollbar = (color = '#c1c1c1') => ({\n    '&::-webkit-scrollbar-track': {\n        border: 0\n    },\n    '&::-webkit-scrollbar': {\n        height: 5\n    },\n    '&::-webkit-scrollbar-thumb': {\n        backgroundColor: color\n    },\n    scrollbarWidth: 'thin',\n    scrollbarColor: `${color} transparent`\n});\n\nexport const withCustomVerticalScrollbar = (color = '#c1c1c1') => ({\n    '&::-webkit-scrollbar-track': {\n        border: 0\n    },\n    '&::-webkit-scrollbar': {\n        width: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n        backgroundColor: color\n    },\n    scrollbarWidth: 'thin',\n    scrollbarColor: `${color} transparent`\n});\n\nexport const getColorsFromCardVariant = (theme, cardVariant) =>\n    theme.components.cards.variants[cardVariant] || theme.components.cards.default;\n\nexport const getHexFromPaletteColor = (theme, paletteColor, shade = 500) =>\n    (theme.palette[paletteColor] ?? theme.primary)[shade];\n\nexport const getContrastDefaultColorFromPaletteColor = (theme, paletteColor) =>\n    theme.palette[paletteColor].contrastDefaultColor;\n\nexport const createScreenWidthMediaQuery = (key = 'max-width', value) => `@media screen and (${key}: ${value}px)`;\n"]},"metadata":{},"sourceType":"module"}