{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_card.jsx\";\nimport React, { useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { ProjectsFront } from './projects_front/projects_front';\nimport { ProjectsBack } from './projects_back/projects_back';\nimport { AddButton } from './add_button_rounded/add_button_rounded';\nimport { ProjectDialog } from './project_dialog/project_dialog';\nimport { mapProjectsFromJsonResume } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { validateProjectsComplete } from './data/validator';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst ProjectsCardComponent = ({\n  variant,\n  side\n}) => {\n  const [mode] = useMode();\n  const {\n    data,\n    isEditing\n  } = useContext(DeveloperProfileContext);\n  const mappedData = useMemo(() => mapProjectsFromJsonResume(data), [data]);\n  const isComplete = useMemo(() => validateProjectsComplete(mappedData), [mappedData]);\n  const currentSide = useMemo(() => {\n    if (!isComplete && !isEditing) {\n      return SIDES.FRONT;\n    }\n\n    return side;\n  }, [side, isComplete, isEditing]);\n\n  if (!isComplete && mode !== 'edit') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ProfileCard, {\n    kind: \"projects\",\n    data: mappedData,\n    isComplete: isComplete,\n    isEditingProfile: isEditing,\n    sides: {\n      front: props => /*#__PURE__*/React.createElement(ProjectsFront, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      })),\n      back: props => /*#__PURE__*/React.createElement(ProjectsBack, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 32\n        }\n      }))\n    },\n    variant: variant,\n    side: currentSide,\n    customEditAction: props => /*#__PURE__*/React.createElement(AddButton, Object.assign({\n      title: \"Ajouter un projet\"\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 40\n      }\n    })),\n    editDialog: {\n      component: ProjectDialog,\n      data: {}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  });\n};\n\nexport const ProjectsCard = ProjectsCardComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_card.jsx"],"names":["React","useContext","useMemo","ProfileCard","ProjectsFront","ProjectsBack","AddButton","ProjectDialog","mapProjectsFromJsonResume","DeveloperProfileContext","validateProjectsComplete","SIDES","useMode","ProjectsCardComponent","variant","side","mode","data","isEditing","mappedData","isComplete","currentSide","FRONT","front","props","back","component","ProjectsCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,4CAA5B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,SAAT,QAA0B,yCAA1B;AACA,SAASC,aAAT,QAA8B,iCAA9B;AAEA,SAASC,yBAAT,QAA0C,gBAA1C;AACA,SAASC,uBAAT,QAAwC,oCAAxC;AACA,SAASC,wBAAT,QAAyC,kBAAzC;AACA,SAASC,KAAT,QAAsB,sDAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACjD,QAAM,CAACC,IAAD,IAASJ,OAAO,EAAtB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBjB,UAAU,CAACQ,uBAAD,CAAtC;AACA,QAAMU,UAAU,GAAGjB,OAAO,CAAC,MAAMM,yBAAyB,CAACS,IAAD,CAAhC,EAAwC,CAACA,IAAD,CAAxC,CAA1B;AAEA,QAAMG,UAAU,GAAGlB,OAAO,CAAC,MAAMQ,wBAAwB,CAACS,UAAD,CAA/B,EAA6C,CAACA,UAAD,CAA7C,CAA1B;AAEA,QAAME,WAAW,GAAGnB,OAAO,CAAC,MAAM;AAC9B,QAAI,CAACkB,UAAD,IAAe,CAACF,SAApB,EAA+B;AAC3B,aAAOP,KAAK,CAACW,KAAb;AACH;;AACD,WAAOP,IAAP;AACH,GAL0B,EAKxB,CAACA,IAAD,EAAOK,UAAP,EAAmBF,SAAnB,CALwB,CAA3B;;AAOA,MAAI,CAACE,UAAD,IAAeJ,IAAI,KAAK,MAA5B,EAAoC;AAChC,WAAO,IAAP;AACH;;AACD,sBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAEG,UAFV;AAGI,IAAA,UAAU,EAAEC,UAHhB;AAII,IAAA,gBAAgB,EAAEF,SAJtB;AAKI,IAAA,KAAK,EAAE;AACHK,MAAAA,KAAK,EAAEC,KAAK,iBAAI,oBAAC,aAAD,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADb;AAEHC,MAAAA,IAAI,EAAED,KAAK,iBAAI,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFZ,KALX;AASI,IAAA,OAAO,EAAEV,OATb;AAUI,IAAA,IAAI,EAAEO,WAVV;AAWI,IAAA,gBAAgB,EAAEG,KAAK,iBAAI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,OAAyCA,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAX/B;AAYI,IAAA,UAAU,EAAE;AACRE,MAAAA,SAAS,EAAEnB,aADH;AAERU,MAAAA,IAAI,EAAE;AAFE,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAmBH,CApCD;;AAsCA,OAAO,MAAMU,YAAY,GAAGd,qBAArB","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { ProjectsFront } from './projects_front/projects_front';\nimport { ProjectsBack } from './projects_back/projects_back';\nimport { AddButton } from './add_button_rounded/add_button_rounded';\nimport { ProjectDialog } from './project_dialog/project_dialog';\n\nimport { mapProjectsFromJsonResume } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { validateProjectsComplete } from './data/validator';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst ProjectsCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, isEditing } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => mapProjectsFromJsonResume(data), [data]);\n\n    const isComplete = useMemo(() => validateProjectsComplete(mappedData), [mappedData]);\n\n    const currentSide = useMemo(() => {\n        if (!isComplete && !isEditing) {\n            return SIDES.FRONT;\n        }\n        return side;\n    }, [side, isComplete, isEditing]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n    return (\n        <ProfileCard\n            kind=\"projects\"\n            data={mappedData}\n            isComplete={isComplete}\n            isEditingProfile={isEditing}\n            sides={{\n                front: props => <ProjectsFront {...props} />,\n                back: props => <ProjectsBack {...props} />\n            }}\n            variant={variant}\n            side={currentSide}\n            customEditAction={props => <AddButton title=\"Ajouter un projet\" {...props} />}\n            editDialog={{\n                component: ProjectDialog,\n                data: {}\n            }}\n        />\n    );\n};\n\nexport const ProjectsCard = ProjectsCardComponent;\n"]},"metadata":{},"sourceType":"module"}