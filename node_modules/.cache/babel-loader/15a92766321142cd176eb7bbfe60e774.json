{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/profile_card/profile_card_button/profile_card_button.jsx\";\nimport React, { useCallback } from 'react';\nimport injectSheet from 'react-jss';\nimport { animated, useSpring } from 'react-spring';\nimport { Button } from '@wld/ui';\nimport { ReactComponent as ArrowRight } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../assets/icons/arrow-right.svg\";\nimport { styles } from './profile_card_button_styles';\nimport { useCardVariant } from '../../../hooks/profile_card_hooks/use_card_variant';\nconst DEFAULT_SPRING_PROPS = {\n  translation: 0\n};\nconst ACTIVE_SPRING_PROPS = {\n  translation: 6\n};\nconst ProfileCardButtonComponent = injectSheet(styles)(({\n  overrideColor,\n  classes,\n  children,\n  ...other\n}) => {\n  const [springProps, setSpringProps] = useSpring(() => DEFAULT_SPRING_PROPS);\n  const setDefaultSpringProps = useCallback(() => setSpringProps(() => DEFAULT_SPRING_PROPS), []);\n  const setActiveSpringProps = useCallback(() => setSpringProps(() => ACTIVE_SPRING_PROPS), []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    customClasses: {\n      container: classes.button,\n      typography: classes.typography\n    },\n    size: \"small\",\n    variant: \"text\",\n    onMouseEnter: setActiveSpringProps,\n    onMouseLeave: setDefaultSpringProps,\n    onFocus: setActiveSpringProps,\n    onBlur: setDefaultSpringProps\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), children), /*#__PURE__*/React.createElement(animated.span, {\n    className: classes.arrowContainer,\n    style: {\n      transform: springProps.translation.to(value => `translate3d(${value}px, 0, 0)`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowRight, {\n    className: classes.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n});\n\nconst InjectVariantProfileCardButton = props => {\n  const [variant] = useCardVariant();\n  return /*#__PURE__*/React.createElement(ProfileCardButtonComponent, Object.assign({}, props, {\n    variant: variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport const ProfileCardButton = InjectVariantProfileCardButton;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/profile_card/profile_card_button/profile_card_button.jsx"],"names":["React","useCallback","injectSheet","animated","useSpring","Button","styles","useCardVariant","DEFAULT_SPRING_PROPS","translation","ACTIVE_SPRING_PROPS","ProfileCardButtonComponent","overrideColor","classes","children","other","springProps","setSpringProps","setDefaultSpringProps","setActiveSpringProps","container","button","typography","arrowContainer","transform","to","value","arrow","InjectVariantProfileCardButton","props","variant","ProfileCardButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,OAAOC,WAAP,MAAwB,WAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AAEA,SAASC,MAAT,QAAuB,SAAvB;;AAIA,SAASC,MAAT,QAAuB,8BAAvB;AACA,SAASC,cAAT,QAA+B,oDAA/B;AAEA,MAAMC,oBAAoB,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAA7B;AACA,MAAMC,mBAAmB,GAAG;AAAED,EAAAA,WAAW,EAAE;AAAf,CAA5B;AAEA,MAAME,0BAA0B,GAAGT,WAAW,CAACI,MAAD,CAAX,CAAoB,CAAC;AAAEM,EAAAA,aAAF;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA,QAA1B;AAAoC,KAAGC;AAAvC,CAAD,KAAoD;AACvG,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,SAAS,CAAC,MAAMI,oBAAP,CAA/C;AACA,QAAMU,qBAAqB,GAAGjB,WAAW,CAAC,MAAMgB,cAAc,CAAC,MAAMT,oBAAP,CAArB,EAAmD,EAAnD,CAAzC;AACA,QAAMW,oBAAoB,GAAGlB,WAAW,CAAC,MAAMgB,cAAc,CAAC,MAAMP,mBAAP,CAArB,EAAkD,EAAlD,CAAxC;AACA,sBACI;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACO,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEA,MAAAA,SAAS,EAAEP,OAAO,CAACQ,MAArB;AAA6BC,MAAAA,UAAU,EAAET,OAAO,CAACS;AAAjD,KADnB;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,OAAO,EAAC,MAHZ;AAII,IAAA,YAAY,EAAEH,oBAJlB;AAKI,IAAA,YAAY,EAAED,qBALlB;AAMI,IAAA,OAAO,EAAEC,oBANb;AAOI,IAAA,MAAM,EAAED;AAPZ,KAQQH,KARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUKD,QAVL,CADJ,eAaI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,SAAS,EAAED,OAAO,CAACU,cADvB;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAER,WAAW,CAACP,WAAZ,CAAwBgB,EAAxB,CAA2BC,KAAK,IAAK,eAAcA,KAAM,WAAzD;AADR,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEb,OAAO,CAACc,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CAbJ,CADJ;AAwBH,CA5BkC,CAAnC;;AA8BA,MAAMC,8BAA8B,GAAGC,KAAK,IAAI;AAC5C,QAAM,CAACC,OAAD,IAAYvB,cAAc,EAAhC;AACA,sBAAO,oBAAC,0BAAD,oBAAgCsB,KAAhC;AAAuC,IAAA,OAAO,EAAEC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAHD;;AAKA,OAAO,MAAMC,iBAAiB,GAAGH,8BAA1B","sourcesContent":["import React, { useCallback } from 'react';\n\nimport injectSheet from 'react-jss';\nimport { animated, useSpring } from 'react-spring';\n\nimport { Button } from '@wld/ui';\n\nimport { ReactComponent as ArrowRight } from '../../../../assets/icons/arrow-right.svg';\n\nimport { styles } from './profile_card_button_styles';\nimport { useCardVariant } from '../../../hooks/profile_card_hooks/use_card_variant';\n\nconst DEFAULT_SPRING_PROPS = { translation: 0 };\nconst ACTIVE_SPRING_PROPS = { translation: 6 };\n\nconst ProfileCardButtonComponent = injectSheet(styles)(({ overrideColor, classes, children, ...other }) => {\n    const [springProps, setSpringProps] = useSpring(() => DEFAULT_SPRING_PROPS);\n    const setDefaultSpringProps = useCallback(() => setSpringProps(() => DEFAULT_SPRING_PROPS), []);\n    const setActiveSpringProps = useCallback(() => setSpringProps(() => ACTIVE_SPRING_PROPS), []);\n    return (\n        <div className={classes.container}>\n            <Button\n                customClasses={{ container: classes.button, typography: classes.typography }}\n                size=\"small\"\n                variant=\"text\"\n                onMouseEnter={setActiveSpringProps}\n                onMouseLeave={setDefaultSpringProps}\n                onFocus={setActiveSpringProps}\n                onBlur={setDefaultSpringProps}\n                {...other}\n            >\n                {children}\n            </Button>\n            <animated.span\n                className={classes.arrowContainer}\n                style={{\n                    transform: springProps.translation.to(value => `translate3d(${value}px, 0, 0)`)\n                }}\n            >\n                <ArrowRight className={classes.arrow} />\n            </animated.span>\n        </div>\n    );\n});\n\nconst InjectVariantProfileCardButton = props => {\n    const [variant] = useCardVariant();\n    return <ProfileCardButtonComponent {...props} variant={variant} />;\n};\n\nexport const ProfileCardButton = InjectVariantProfileCardButton;\n"]},"metadata":{},"sourceType":"module"}