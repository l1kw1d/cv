{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/profile_card/profile_card_incomplete_popper/profile_card_incomplete_popper.jsx\";\nimport React, { memo, useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport { PopperCard, Typography } from '@wld/ui';\nimport { ReactComponent as WarnIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../assets/icons/warn.svg\";\nimport { styles } from './profile_card_incomplete_popper_styles';\nimport { useMode } from '../../../hooks/use_mode';\nconst useStyles = createUseStyles(styles);\n\nconst ProfileCardIncompletePopperComponent = ({\n  open,\n  onClose,\n  anchorElement\n}) => {\n  const classes = useStyles();\n  const [hasBeenMounted, setHasBeenMouneted] = useState(false);\n  const [mode] = useMode();\n  useEffect(() => setHasBeenMouneted(true), []);\n\n  if (mode !== 'edit' || !open || !hasBeenMounted) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(PopperCard, {\n    customClasses: {\n      container: classes.container,\n      arrowContainer: classes.arrowContainer\n    },\n    open: open,\n    onClose: onClose,\n    anchorElement: anchorElement,\n    popperProps: {\n      placement: 'top-start',\n      disablePortal: true,\n      modifiers: {\n        preventOverflow: {\n          enabled: false\n        },\n        hide: {\n          enabled: false\n        },\n        flip: {\n          behavior: ['top-start']\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WarnIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"ProfileCardIncompletePopper.label.value\",\n    defaultMessage: \"This card is missing data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const ProfileCardIncompletePopper = memo(ProfileCardIncompletePopperComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/profile_card/profile_card_incomplete_popper/profile_card_incomplete_popper.jsx"],"names":["React","memo","useEffect","useState","createUseStyles","FormattedMessage","PopperCard","Typography","styles","useMode","useStyles","ProfileCardIncompletePopperComponent","open","onClose","anchorElement","classes","hasBeenMounted","setHasBeenMouneted","mode","container","arrowContainer","placement","disablePortal","modifiers","preventOverflow","enabled","hide","flip","behavior","icon","ProfileCardIncompletePopper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,SAAvC;;AAIA,SAASC,MAAT,QAAuB,yCAAvB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,MAAMC,SAAS,GAAGN,eAAe,CAACI,MAAD,CAAjC;;AAEA,MAAMG,oCAAoC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAsC;AAC/E,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,cAAD,EAAiBC,kBAAjB,IAAuCd,QAAQ,CAAC,KAAD,CAArD;AACA,QAAM,CAACe,IAAD,IAAST,OAAO,EAAtB;AAEAP,EAAAA,SAAS,CAAC,MAAMe,kBAAkB,CAAC,IAAD,CAAzB,EAAiC,EAAjC,CAAT;;AAEA,MAAIC,IAAI,KAAK,MAAT,IAAmB,CAACN,IAApB,IAA4B,CAACI,cAAjC,EAAiD;AAC7C,WAAO,IAAP;AACH;;AACD,sBACI,oBAAC,UAAD;AACI,IAAA,aAAa,EAAE;AACXG,MAAAA,SAAS,EAAEJ,OAAO,CAACI,SADR;AAEXC,MAAAA,cAAc,EAAEL,OAAO,CAACK;AAFb,KADnB;AAKI,IAAA,IAAI,EAAER,IALV;AAMI,IAAA,OAAO,EAAEC,OANb;AAOI,IAAA,aAAa,EAAEC,aAPnB;AAQI,IAAA,WAAW,EAAE;AACTO,MAAAA,SAAS,EAAE,WADF;AAETC,MAAAA,aAAa,EAAE,IAFN;AAGTC,MAAAA,SAAS,EAAE;AACPC,QAAAA,eAAe,EAAE;AACbC,UAAAA,OAAO,EAAE;AADI,SADV;AAIPC,QAAAA,IAAI,EAAE;AACFD,UAAAA,OAAO,EAAE;AADP,SAJC;AAOPE,QAAAA,IAAI,EAAE;AACFC,UAAAA,QAAQ,EAAE,CAAC,WAAD;AADR;AAPC;AAHF,KARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAwBI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEb,OAAO,CAACc,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,eAyBI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,EAAE,EAAC,yCADP;AAEI,IAAA,cAAc,EAAC,2BAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAzBJ,CADJ;AAkCH,CA5CD;;AA8CA,OAAO,MAAMC,2BAA2B,GAAG7B,IAAI,CAACU,oCAAD,CAAxC","sourcesContent":["import React, { memo, useEffect, useState } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\n\nimport { PopperCard, Typography } from '@wld/ui';\n\nimport { ReactComponent as WarnIcon } from '../../../../assets/icons/warn.svg';\n\nimport { styles } from './profile_card_incomplete_popper_styles';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProfileCardIncompletePopperComponent = ({ open, onClose, anchorElement }) => {\n    const classes = useStyles();\n    const [hasBeenMounted, setHasBeenMouneted] = useState(false);\n    const [mode] = useMode();\n\n    useEffect(() => setHasBeenMouneted(true), []);\n\n    if (mode !== 'edit' || !open || !hasBeenMounted) {\n        return null;\n    }\n    return (\n        <PopperCard\n            customClasses={{\n                container: classes.container,\n                arrowContainer: classes.arrowContainer\n            }}\n            open={open}\n            onClose={onClose}\n            anchorElement={anchorElement}\n            popperProps={{\n                placement: 'top-start',\n                disablePortal: true,\n                modifiers: {\n                    preventOverflow: {\n                        enabled: false\n                    },\n                    hide: {\n                        enabled: false\n                    },\n                    flip: {\n                        behavior: ['top-start']\n                    }\n                }\n            }}\n        >\n            <WarnIcon className={classes.icon} />\n            <Typography color=\"light\">\n                <FormattedMessage\n                    id=\"ProfileCardIncompletePopper.label.value\"\n                    defaultMessage=\"This card is missing data\"\n                />\n            </Typography>\n        </PopperCard>\n    );\n};\n\nexport const ProfileCardIncompletePopper = memo(ProfileCardIncompletePopperComponent);\n"]},"metadata":{},"sourceType":"module"}