{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/banner/edit_banner_image_dialog/edit_banner_image_dialog.jsx\";\nimport React, { useCallback, useContext } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport { Button, Typography } from '@wld/ui';\nimport { Dialog, DialogContent, DialogActions } from '@material-ui/core';\nimport { DialogTitle } from '../../commons/dialog/dialog_title/dialog_title';\nimport { DeveloperProfileContext } from '../../../utils/context/contexts';\nimport { FileDropZone } from '../../commons/file_drop_zone/file_drop_zone';\nimport { SearchUnsplashDialog } from '../../commons/search_unsplash_dialog/search_unsplash_result';\nimport { useCallbackOpen } from '../../hooks/use_callback_open';\nimport { styles } from './edit_banner_image_dialog_styles';\nconst useStyles = createUseStyles(styles);\n\nconst EditBannerImageDialogComponent = ({\n  open,\n  onClose,\n  onChange\n}) => {\n  const classes = useStyles();\n  const {\n    onFilesUpload\n  } = useContext(DeveloperProfileContext);\n  const [openSearchUnsplashDialog, setSearchUnsplashDialogOpened, setSearchUnsplashDialogClosed] = useCallbackOpen();\n  const onImageSelected = useCallback(payload => {\n    onChange(payload);\n    onClose();\n    setSearchUnsplashDialogClosed();\n  }, [onChange, onClose]);\n  const onDrop = useCallback(files => onFilesUpload(files).then(url => {\n    onImageSelected({\n      url\n    });\n    return url;\n  }), [onImageSelected]);\n  const onClear = useCallback(() => onImageSelected(null), [onImageSelected]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchUnsplashDialog, {\n    open: openSearchUnsplashDialog,\n    onClose: setSearchUnsplashDialogClosed,\n    onSelect: onImageSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Banner.EditImageDialog.Title\",\n    defaultMessage: \"Pick an image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DialogContent, {\n    classes: {\n      root: classes.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    onClick: setSearchUnsplashDialogOpened,\n    customClasses: {\n      container: classes.button\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Banner.EditImageDialog.unsplashButton\",\n    defaultMessage: \"Search on unsplash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.dividerOr,\n    variant: \"h4\",\n    component: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Main.Lang.Or\",\n    defaultMessage: \"or\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(FileDropZone, {\n    onDrop: onDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"danger\",\n    onClick: onClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Main.lang.clear\",\n    defaultMessage: \"Clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Main.lang.close\",\n    defaultMessage: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport const EditBannerImageDialog = EditBannerImageDialogComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/banner/edit_banner_image_dialog/edit_banner_image_dialog.jsx"],"names":["React","useCallback","useContext","createUseStyles","FormattedMessage","Button","Typography","Dialog","DialogContent","DialogActions","DialogTitle","DeveloperProfileContext","FileDropZone","SearchUnsplashDialog","useCallbackOpen","styles","useStyles","EditBannerImageDialogComponent","open","onClose","onChange","classes","onFilesUpload","openSearchUnsplashDialog","setSearchUnsplashDialogOpened","setSearchUnsplashDialogClosed","onImageSelected","payload","onDrop","files","then","url","onClear","root","content","buttonContainer","container","button","divider","dividerOr","EditBannerImageDialog"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Button, Typography } from '@wld/ui';\n\nimport { Dialog, DialogContent, DialogActions } from '@material-ui/core';\n\nimport { DialogTitle } from '../../commons/dialog/dialog_title/dialog_title';\nimport { DeveloperProfileContext } from '../../../utils/context/contexts';\n\nimport { FileDropZone } from '../../commons/file_drop_zone/file_drop_zone';\nimport { SearchUnsplashDialog } from '../../commons/search_unsplash_dialog/search_unsplash_result';\n\nimport { useCallbackOpen } from '../../hooks/use_callback_open';\n\nimport { styles } from './edit_banner_image_dialog_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst EditBannerImageDialogComponent = ({ open, onClose, onChange }) => {\n    const classes = useStyles();\n    const { onFilesUpload } = useContext(DeveloperProfileContext);\n\n    const [openSearchUnsplashDialog, setSearchUnsplashDialogOpened, setSearchUnsplashDialogClosed] = useCallbackOpen();\n\n    const onImageSelected = useCallback(\n        payload => {\n            onChange(payload);\n            onClose();\n            setSearchUnsplashDialogClosed();\n        },\n        [onChange, onClose]\n    );\n\n    const onDrop = useCallback(\n        files =>\n            onFilesUpload(files).then(url => {\n                onImageSelected({ url });\n                return url;\n            }),\n        [onImageSelected]\n    );\n    const onClear = useCallback(() => onImageSelected(null), [onImageSelected]);\n\n    return (\n        <>\n            <SearchUnsplashDialog\n                open={openSearchUnsplashDialog}\n                onClose={setSearchUnsplashDialogClosed}\n                onSelect={onImageSelected}\n            />\n            <Dialog open={open} onClose={onClose}>\n                <DialogTitle>\n                    <FormattedMessage id=\"Banner.EditImageDialog.Title\" defaultMessage=\"Pick an image\" />\n                </DialogTitle>\n                <DialogContent classes={{ root: classes.content }}>\n                    <div className={classes.buttonContainer}>\n                        <Button\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            onClick={setSearchUnsplashDialogOpened}\n                            customClasses={{\n                                container: classes.button\n                            }}\n                        >\n                            <FormattedMessage\n                                id=\"Banner.EditImageDialog.unsplashButton\"\n                                defaultMessage=\"Search on unsplash\"\n                            />\n                        </Button>\n                    </div>\n                    <div className={classes.divider}>\n                        <Typography className={classes.dividerOr} variant=\"h4\" component=\"h4\">\n                            <FormattedMessage id=\"Main.Lang.Or\" defaultMessage=\"or\" />\n                        </Typography>\n                    </div>\n                    <FileDropZone onDrop={onDrop} />\n                </DialogContent>\n                <DialogActions>\n                    <Button size=\"small\" color=\"danger\" onClick={onClear}>\n                        <FormattedMessage id=\"Main.lang.clear\" defaultMessage=\"Clear\" />\n                    </Button>\n                    <Button size=\"small\" onClick={onClose}>\n                        <FormattedMessage id=\"Main.lang.close\" defaultMessage=\"Close\" />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n};\n\nexport const EditBannerImageDialog = EditBannerImageDialogComponent;\n"]},"metadata":{},"sourceType":"module"}