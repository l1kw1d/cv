{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_front/projects_front.jsx\";\nimport React, { memo, useCallback, useMemo } from 'react';\nimport { Twemoji } from 'react-emoji-render';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { Typography } from '@wld/ui';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\nimport { DEFAULT_PROJECT_IMAGE } from '../utils/images';\nimport { styles } from './projects_front_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nconst useStyles = createUseStyles(styles);\n\nconst ProjectsFrontComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  var _data$projects2, _data$projects2$, _data$projects3, _data$projects3$, _data$projects8, _data$projects9;\n\n  const [side, setSide] = useCardSide();\n  const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [side, setSide]);\n  const [variant] = useCardVariant();\n  const imageSrc = useMemo(() => {\n    var _data$projects$0$imag, _data$projects, _data$projects$, _data$projects$$image;\n\n    return (_data$projects$0$imag = (_data$projects = data.projects) === null || _data$projects === void 0 ? void 0 : (_data$projects$ = _data$projects[0]) === null || _data$projects$ === void 0 ? void 0 : (_data$projects$$image = _data$projects$.images) === null || _data$projects$$image === void 0 ? void 0 : _data$projects$$image.url) !== null && _data$projects$0$imag !== void 0 ? _data$projects$0$imag : DEFAULT_PROJECT_IMAGE;\n  }, [(_data$projects2 = data.projects) === null || _data$projects2 === void 0 ? void 0 : (_data$projects2$ = _data$projects2[0]) === null || _data$projects2$ === void 0 ? void 0 : _data$projects2$.images]);\n  const alt = (_data$projects3 = data.projects) === null || _data$projects3 === void 0 ? void 0 : (_data$projects3$ = _data$projects3[0]) === null || _data$projects3$ === void 0 ? void 0 : _data$projects3$.title;\n  const projectTitle = useMemo(() => {\n    var _data$projects4, _data$projects5, _data$projects$0$desc, _data$projects7, _data$projects7$0$des;\n\n    if (!((_data$projects4 = data.projects) === null || _data$projects4 === void 0 ? void 0 : _data$projects4[0])) {\n      return '';\n    }\n\n    if ((_data$projects5 = data.projects) === null || _data$projects5 === void 0 ? void 0 : _data$projects5[0].name) {\n      var _data$projects6;\n\n      return (_data$projects6 = data.projects) === null || _data$projects6 === void 0 ? void 0 : _data$projects6[0].name;\n    }\n\n    return (_data$projects$0$desc = (_data$projects7 = data.projects) === null || _data$projects7 === void 0 ? void 0 : (_data$projects7$0$des = _data$projects7[0].description) === null || _data$projects7$0$des === void 0 ? void 0 : _data$projects7$0$des.slice(0, 20)) !== null && _data$projects$0$desc !== void 0 ? _data$projects$0$desc : '';\n  }, [(_data$projects8 = data.projects) === null || _data$projects8 === void 0 ? void 0 : _data$projects8[0]]);\n  const classes = useStyles({\n    variant,\n    hasImage: !!imageSrc\n  });\n  const hasProject = useMemo(() => existsAndNotEmpty(data === null || data === void 0 ? void 0 : data.projects), [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, imageSrc && /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.backgroundImage,\n    src: imageSrc,\n    alt: alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    hasProject: hasProject,\n    projectTitle: projectTitle,\n    handleAddButtonClick: handleAddButtonClick,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), hasProject && /*#__PURE__*/React.createElement(ProfileCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardButton, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Projects.front.action\",\n    defaultMessage: \"See {count} project{count, plural, one {} other {s}}\",\n    values: {\n      count: (_data$projects9 = data.projects) === null || _data$projects9 === void 0 ? void 0 : _data$projects9.length\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }))));\n};\n\nconst Content = ({\n  hasProject,\n  projectTitle,\n  handleAddButtonClick,\n  classes\n}) => {\n  if (hasProject) {\n    return /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h2\",\n      component: \"h2\",\n      customClasses: {\n        container: classes.text\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Projects.front.title\",\n      defaultMessage: \"My <emoji>\\u2665\\uFE0F</emoji> project : \",\n      values: {\n        emoji: value => /*#__PURE__*/React.createElement(Twemoji, {\n          svg: true,\n          text: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 41\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), projectTitle);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h3\",\n    customClasses: {\n      container: classes.noProjectTypography\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Projects.front.noProject\",\n    defaultMessage: \"You didn't add any projects.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), projectTitle), /*#__PURE__*/React.createElement(NoDataButton, {\n    classes: {\n      container: classes.addButton\n    },\n    handleAddButtonClick: handleAddButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Projects.noProject.buttonLabel\",\n    defaultMessage: \"Ajouter un projet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const ProjectsFront = memo(ProjectsFrontComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_front/projects_front.jsx"],"names":["React","memo","useCallback","useMemo","Twemoji","FormattedMessage","createUseStyles","Typography","ProfileCardActions","ProfileCardButton","useCardSide","useCardVariant","SIDES","DEFAULT_PROJECT_IMAGE","styles","existsAndNotEmpty","NoDataButton","useStyles","ProjectsFrontComponent","data","handleAddButtonClick","side","setSide","handleButtonClick","FRONT","BACK","variant","imageSrc","projects","images","url","alt","title","projectTitle","name","description","slice","classes","hasImage","hasProject","background","backgroundImage","content","count","length","Content","container","text","emoji","value","noProject","noProjectTypography","addButton","ProjectsFront"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo } from 'react';\n\nimport { Twemoji } from 'react-emoji-render';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { Typography } from '@wld/ui';\n\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\n\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\n\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\nimport { DEFAULT_PROJECT_IMAGE } from '../utils/images';\nimport { styles } from './projects_front_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProjectsFrontComponent = ({ data, handleAddButtonClick }) => {\n    const [side, setSide] = useCardSide();\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    const [variant] = useCardVariant();\n    const imageSrc = useMemo(() => data.projects?.[0]?.images?.url ?? DEFAULT_PROJECT_IMAGE, [\n        data.projects?.[0]?.images\n    ]);\n    const alt = data.projects?.[0]?.title;\n\n    const projectTitle = useMemo(() => {\n        if (!data.projects?.[0]) {\n            return '';\n        }\n        if (data.projects?.[0].name) {\n            return data.projects?.[0].name;\n        }\n        return data.projects?.[0].description?.slice(0, 20) ?? '';\n    }, [data.projects?.[0]]);\n\n    const classes = useStyles({ variant, hasImage: !!imageSrc });\n\n    const hasProject = useMemo(() => existsAndNotEmpty(data?.projects), [data]);\n\n    return (\n        <>\n            <div className={classes.background}>\n                {imageSrc && <img className={classes.backgroundImage} src={imageSrc} alt={alt} />}\n            </div>\n            <div className={classes.content}>\n                <Content\n                    hasProject={hasProject}\n                    projectTitle={projectTitle}\n                    handleAddButtonClick={handleAddButtonClick}\n                    classes={classes}\n                />\n            </div>\n            {hasProject && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage\n                            id=\"Projects.front.action\"\n                            defaultMessage=\"See {count} project{count, plural, one {} other {s}}\"\n                            values={{\n                                count: data.projects?.length\n                            }}\n                        />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({ hasProject, projectTitle, handleAddButtonClick, classes }) => {\n    if (hasProject) {\n        return (\n            <Typography variant=\"h2\" component=\"h2\" customClasses={{ container: classes.text }}>\n                <FormattedMessage\n                    id=\"Projects.front.title\"\n                    defaultMessage=\"My <emoji>♥️</emoji> project : \"\n                    values={{\n                        emoji: value => <Twemoji svg text={value} />\n                    }}\n                />\n                {projectTitle}\n            </Typography>\n        );\n    }\n    return (\n        <div className={classes.noProject}>\n            <Typography variant=\"h3\" component=\"h3\" customClasses={{ container: classes.noProjectTypography }}>\n                <FormattedMessage id=\"Projects.front.noProject\" defaultMessage=\"You didn't add any projects.\" />\n                {projectTitle}\n            </Typography>\n            <NoDataButton\n                classes={{\n                    container: classes.addButton\n                }}\n                handleAddButtonClick={handleAddButtonClick}\n            >\n                <FormattedMessage id=\"Projects.noProject.buttonLabel\" defaultMessage=\"Ajouter un projet\" />\n            </NoDataButton>\n        </div>\n    );\n};\n\nexport const ProjectsFront = memo(ProjectsFrontComponent);\n"]},"metadata":{},"sourceType":"module"}