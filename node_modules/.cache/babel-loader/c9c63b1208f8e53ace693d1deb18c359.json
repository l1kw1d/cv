{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/languages/languages_edit_dialog/languages_card_edit_dialog.jsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport cn from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport uuid from 'uuid/v4';\nimport { List, TextField, Tooltip, Typography } from '@wld/ui';\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\nimport { useFormikContext } from 'formik';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { SliderWithPopper } from '../../../../commons/slider_with_popper/slider_with_popper';\nimport { AddButton } from '../../../../commons/add_button/add_button';\nimport { ReactComponent as MoveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/move_list.svg\";\nimport { ReactComponent as TrashIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/trash.svg\";\nimport translations from './languages_edit_dialog_translations';\nimport { styles } from './languages_edit_dialog_styles';\nconst useStyles = createUseStyles(styles);\n\nconst LanguagesCardEditDialogComponent = ({\n  open,\n  onClose,\n  data,\n  onEdit,\n  validationSchema,\n  isEditing\n}) => {\n  const {\n    formatMessage\n  } = useIntl();\n  const validationSchemaToPass = useMemo(() => validationSchema(formatMessage), [validationSchema]);\n  return /*#__PURE__*/React.createElement(EditDialog, {\n    open: open,\n    onClose: onClose,\n    data: data,\n    isEditing: isEditing,\n    onEdit: onEdit,\n    validationSchema: validationSchemaToPass,\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Languages.editDialog.title\",\n      defaultMessage: \"Your languages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, helpers => /*#__PURE__*/React.createElement(LanguagesEditFormWrapper, {\n    helpers: helpers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }));\n};\n\nconst LanguageItem = SortableElement(({\n  id,\n  language,\n  onChange,\n  onRemove,\n  error: fieldErrors,\n  classes,\n  languageIndex: index\n}) => {\n  const {\n    formatMessage\n  } = useIntl();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n  const handleLanguageChange = useCallback(e => onChange(index, 'language', e.target.value), [index]);\n  const handleValueChange = useCallback(e => onChange(index, 'value', Number(e.target.value)), [index]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.itemContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DragHandle, Object.assign({\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Main.lang.delete\",\n      defaultMessage: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: classes.button,\n    onClick: onRemove(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TrashIcon, {\n    className: classes.removeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }))), !isMobile && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 35\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fieldGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"dark\",\n    variant: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, formatMessage(translations.language)), /*#__PURE__*/React.createElement(TextField, {\n    value: language.language,\n    onChange: handleLanguageChange,\n    id: `language_language_${id}`,\n    placeholder: formatMessage(translations.languagePlaceholder),\n    variant: \"flat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), fieldErrors && fieldErrors.language && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, fieldErrors.language)), /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(classes.field, classes.sliderValueContainer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.sliderValue\n    },\n    color: \"dark\",\n    variant: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, formatMessage(translations.level, {\n    valueNode: /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.bolden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 48\n      }\n    }, language.value)\n  })), /*#__PURE__*/React.createElement(SliderWithPopper, {\n    color: \"primary\",\n    name: \"value\",\n    value: language.value,\n    onChange: handleValueChange,\n    min: 0,\n    max: 100,\n    className: classes.slider,\n    popperCardProps: {\n      customClasses: {\n        container: classes.sliderPopperCard,\n        arrowContainer: classes.sliderPopperCardArrowContainer\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }), fieldErrors && fieldErrors.value && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, fieldErrors.value)))));\n});\nconst SortableLanguagesItems = SortableContainer(({\n  items,\n  onChange,\n  onDelete,\n  errors,\n  name,\n  schools,\n  classes\n}) => /*#__PURE__*/React.createElement(List, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }\n}, items === null || items === void 0 ? void 0 : items.map((language, index) => /*#__PURE__*/React.createElement(LanguageItem, Object.assign({\n  key: `${name}_${language.id}_${index}`,\n  onChange: onChange,\n  onRemove: onDelete,\n  id: language.id,\n  languageIndex: index,\n  error: errors && errors[index]\n}, {\n  index,\n  language,\n  schools,\n  classes\n}, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 13\n  }\n})))));\nconst DragHandle = SortableHandle(({\n  classes\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(MoveIcon, {\n  className: classes.dragHandle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }\n})));\nexport const LanguagesEditForm = ({\n  data,\n  onMove,\n  onValueChange,\n  onDelete,\n  onAdd,\n  errors: validationErrors\n}) => {\n  const classes = useStyles();\n  const globalError = typeof validationErrors === 'string' && validationErrors;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SortableLanguagesItems, Object.assign({\n    useDragHandle: true,\n    lockToContainerEdges: true,\n    helperClass: classes.sortableHelper,\n    items: data,\n    onSortEnd: onMove,\n    distance: 20,\n    lockAxis: \"y\",\n    name: \"education\",\n    onChange: onValueChange,\n    onDelete: onDelete,\n    errors: validationErrors\n  }, {\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AddButton, {\n    onClick: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), globalError && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, validationErrors));\n};\n\nconst LanguagesEditFormWrapper = ({\n  helpers: {\n    handleValueChange\n  }\n}) => {\n  const {\n    values: {\n      languages\n    },\n    errors: validationErrors\n  } = useFormikContext();\n  const languageChanged = useCallback((experienceIndex, field, value) => {\n    handleValueChange(`languages[${experienceIndex}].${field}`)(value);\n  }, []);\n  const languageDeleted = useCallback(deletingId => () => {\n    handleValueChange('languages')(languages.filter(({\n      id\n    }) => deletingId !== id));\n  }, [languages]);\n  const addLanguage = useCallback(() => {\n    var _languages$length;\n\n    const id = uuid();\n    handleValueChange('languages')([...(languages !== null && languages !== void 0 ? languages : []), {\n      index: (_languages$length = languages === null || languages === void 0 ? void 0 : languages.length) !== null && _languages$length !== void 0 ? _languages$length : 0,\n      id\n    }]);\n  }, [JSON.stringify(languages)]);\n  const move = useCallback(({\n    oldIndex,\n    newIndex\n  }) => {\n    handleValueChange('languages')(arrayMove(languages, oldIndex, newIndex).map((data, index) => ({ ...data,\n      index\n    })));\n  }, [languages]);\n  return /*#__PURE__*/React.createElement(LanguagesEditForm, {\n    data: languages,\n    onMove: move,\n    onValueChange: languageChanged,\n    onDelete: languageDeleted,\n    onAdd: addLanguage,\n    errors: validationErrors === null || validationErrors === void 0 ? void 0 : validationErrors.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  });\n};\n\nexport const LanguagesCardEditDialog = LanguagesCardEditDialogComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/languages/languages_edit_dialog/languages_card_edit_dialog.jsx"],"names":["React","useCallback","useMemo","cn","FormattedMessage","useIntl","arrayMove","SortableContainer","SortableElement","SortableHandle","uuid","List","TextField","Tooltip","Typography","useMediaQuery","useFormikContext","createUseStyles","useTheme","EditDialog","SliderWithPopper","AddButton","translations","styles","useStyles","LanguagesCardEditDialogComponent","open","onClose","data","onEdit","validationSchema","isEditing","formatMessage","validationSchemaToPass","helpers","LanguageItem","id","language","onChange","onRemove","error","fieldErrors","classes","languageIndex","index","theme","isMobile","screenSizes","small","handleLanguageChange","e","target","value","handleValueChange","Number","itemContainer","actions","divider","button","removeIcon","listItem","fieldGroup","field","languagePlaceholder","sliderValueContainer","container","sliderValue","level","valueNode","bolden","slider","customClasses","sliderPopperCard","arrowContainer","sliderPopperCardArrowContainer","SortableLanguagesItems","items","onDelete","errors","name","schools","map","DragHandle","dragHandle","LanguagesEditForm","onMove","onValueChange","onAdd","validationErrors","globalError","sortableHelper","LanguagesEditFormWrapper","values","languages","languageChanged","experienceIndex","languageDeleted","deletingId","filter","addLanguage","length","JSON","stringify","move","oldIndex","newIndex","LanguagesCardEditDialog"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,SAAT,EAAoBC,iBAApB,EAAuCC,eAAvC,EAAwDC,cAAxD,QAA8E,oBAA9E;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAqD,SAArD;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AAEA,SAASC,gBAAT,QAAiC,QAAjC;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,WAA1C;AACA,SAASC,UAAT,QAA2B,6CAA3B;AACA,SAASC,gBAAT,QAAiC,2DAAjC;AACA,SAASC,SAAT,QAA0B,2CAA1B;;;AAKA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,MAAT,QAAuB,gCAAvB;AAEA,MAAMC,SAAS,GAAGP,eAAe,CAACM,MAAD,CAAjC;;AAEA,MAAME,gCAAgC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,IAAjB;AAAuBC,EAAAA,MAAvB;AAA+BC,EAAAA,gBAA/B;AAAiDC,EAAAA;AAAjD,CAAD,KAAkE;AACvG,QAAM;AAAEC,IAAAA;AAAF,MAAoB3B,OAAO,EAAjC;AACA,QAAM4B,sBAAsB,GAAG/B,OAAO,CAAC,MAAM4B,gBAAgB,CAACE,aAAD,CAAvB,EAAwC,CAACF,gBAAD,CAAxC,CAAtC;AAEA,sBACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAEJ,IADV;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,IAAI,EAAEC,IAHV;AAII,IAAA,SAAS,EAAEG,SAJf;AAKI,IAAA,MAAM,EAAEF,MALZ;AAMI,IAAA,gBAAgB,EAAEI,sBANtB;AAOI,IAAA,KAAK,eAAE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,4BAArB;AAAkD,MAAA,cAAc,EAAC,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKC,OAAO,iBAAI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAThB,CADJ;AAaH,CAjBD;;AAmBA,MAAMC,YAAY,GAAG3B,eAAe,CAChC,CAAC;AAAE4B,EAAAA,EAAF;AAAMC,EAAAA,QAAN;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA,KAAK,EAAEC,WAA3C;AAAwDC,EAAAA,OAAxD;AAAiEC,EAAAA,aAAa,EAAEC;AAAhF,CAAD,KAA6F;AACzF,QAAM;AAAEZ,IAAAA;AAAF,MAAoB3B,OAAO,EAAjC;AACA,QAAMwC,KAAK,GAAG3B,QAAQ,EAAtB;AACA,QAAM4B,QAAQ,GAAG/B,aAAa,CAAE,eAAc8B,KAAK,CAACE,WAAN,CAAkBC,KAAM,KAAxC,CAA9B;AAEA,QAAMC,oBAAoB,GAAGhD,WAAW,CAACiD,CAAC,IAAIZ,QAAQ,CAACM,KAAD,EAAQ,UAAR,EAAoBM,CAAC,CAACC,MAAF,CAASC,KAA7B,CAAd,EAAmD,CAACR,KAAD,CAAnD,CAAxC;AACA,QAAMS,iBAAiB,GAAGpD,WAAW,CAACiD,CAAC,IAAIZ,QAAQ,CAACM,KAAD,EAAQ,OAAR,EAAiBU,MAAM,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,CAAd,EAAwD,CAACR,KAAD,CAAxD,CAArC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACa,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD,gBAAgB;AAAEd,IAAAA;AAAF,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI;AAAK,IAAA,SAAS,EAAEA,OAAO,CAACe,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,OAAD;AAAS,IAAA,KAAK,eAAE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,kBAArB;AAAwC,MAAA,cAAc,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEf,OAAO,CAACgB,MAAzC;AAAiD,IAAA,OAAO,EAAEnB,QAAQ,CAACH,EAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEM,OAAO,CAACiB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAHJ,EAQK,CAACb,QAAD,iBAAa;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACe,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlB,CADJ,eAWI;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACkB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACoB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,aAAa,CAACV,YAAY,CAACe,QAAd,CADlB,CADJ,eAII,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEA,QAAQ,CAACA,QADpB;AAEI,IAAA,QAAQ,EAAEY,oBAFd;AAGI,IAAA,EAAE,EAAG,qBAAoBb,EAAG,EAHhC;AAII,IAAA,WAAW,EAAEJ,aAAa,CAACV,YAAY,CAACyC,mBAAd,CAJ9B;AAKI,IAAA,OAAO,EAAC,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAWKtB,WAAW,IAAIA,WAAW,CAACJ,QAA3B,iBACG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,QAAnC;AAA4C,IAAA,SAAS,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,WAAW,CAACJ,QADjB,CAZR,CADJ,eAkBI;AAAK,IAAA,SAAS,EAAElC,EAAE,CAACuC,OAAO,CAACoB,KAAT,EAAgBpB,OAAO,CAACsB,oBAAxB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAEvB,OAAO,CAACwB;AADR,KADnB;AAII,IAAA,KAAK,EAAC,MAJV;AAKI,IAAA,OAAO,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKlC,aAAa,CAACV,YAAY,CAAC6C,KAAd,EAAqB;AAC/BC,IAAAA,SAAS,eAAE;AAAM,MAAA,SAAS,EAAE1B,OAAO,CAAC2B,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkChC,QAAQ,CAACe,KAA3C;AADoB,GAArB,CAPlB,CADJ,eAYI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,KAAK,EAAEf,QAAQ,CAACe,KAHpB;AAII,IAAA,QAAQ,EAAEC,iBAJd;AAKI,IAAA,GAAG,EAAE,CALT;AAMI,IAAA,GAAG,EAAE,GANT;AAOI,IAAA,SAAS,EAAEX,OAAO,CAAC4B,MAPvB;AAQI,IAAA,eAAe,EAAE;AACbC,MAAAA,aAAa,EAAE;AACXN,QAAAA,SAAS,EAAEvB,OAAO,CAAC8B,gBADR;AAEXC,QAAAA,cAAc,EAAE/B,OAAO,CAACgC;AAFb;AADF,KARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EA2BKjC,WAAW,IAAIA,WAAW,CAACW,KAA3B,iBACG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAC,QAAnC;AAA4C,IAAA,SAAS,EAAC,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,WAAW,CAACW,KADjB,CA5BR,CAlBJ,CADJ,CAXJ,CADJ;AAoEH,CA7E+B,CAApC;AAgFA,MAAMuB,sBAAsB,GAAGpE,iBAAiB,CAAC,CAAC;AAAEqE,EAAAA,KAAF;AAAStC,EAAAA,QAAT;AAAmBuC,EAAAA,QAAnB;AAA6BC,EAAAA,MAA7B;AAAqCC,EAAAA,IAArC;AAA2CC,EAAAA,OAA3C;AAAoDtC,EAAAA;AAApD,CAAD,kBAC7C,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKkC,KADL,aACKA,KADL,uBACKA,KAAK,CAAEK,GAAP,CAAW,CAAC5C,QAAD,EAAWO,KAAX,kBACR,oBAAC,YAAD;AACI,EAAA,GAAG,EAAG,GAAEmC,IAAK,IAAG1C,QAAQ,CAACD,EAAG,IAAGQ,KAAM,EADzC;AAEI,EAAA,QAAQ,EAAEN,QAFd;AAGI,EAAA,QAAQ,EAAEuC,QAHd;AAII,EAAA,EAAE,EAAExC,QAAQ,CAACD,EAJjB;AAKI,EAAA,aAAa,EAAEQ,KALnB;AAMI,EAAA,KAAK,EAAEkC,MAAM,IAAIA,MAAM,CAAClC,KAAD;AAN3B,GAOQ;AACAA,EAAAA,KADA;AAEAP,EAAAA,QAFA;AAGA2C,EAAAA,OAHA;AAIAtC,EAAAA;AAJA,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADH,CADL,CAD4C,CAAhD;AAqBA,MAAMwC,UAAU,GAAGzE,cAAc,CAAC,CAAC;AAAEiC,EAAAA;AAAF,CAAD,kBAC9B;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,QAAD;AAAU,EAAA,SAAS,EAAEA,OAAO,CAACyC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAD6B,CAAjC;AAMA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAExD,EAAAA,IAAF;AAAQyD,EAAAA,MAAR;AAAgBC,EAAAA,aAAhB;AAA+BT,EAAAA,QAA/B;AAAyCU,EAAAA,KAAzC;AAAgDT,EAAAA,MAAM,EAAEU;AAAxD,CAAD,KAAgF;AAC7G,QAAM9C,OAAO,GAAGlB,SAAS,EAAzB;AACA,QAAMiE,WAAW,GAAG,OAAOD,gBAAP,KAA4B,QAA5B,IAAwCA,gBAA5D;AAEA,sBACI,uDACI,oBAAC,sBAAD;AACI,IAAA,aAAa,MADjB;AAEI,IAAA,oBAAoB,MAFxB;AAGI,IAAA,WAAW,EAAE9C,OAAO,CAACgD,cAHzB;AAII,IAAA,KAAK,EAAE9D,IAJX;AAKI,IAAA,SAAS,EAAEyD,MALf;AAMI,IAAA,QAAQ,EAAE,EANd;AAOI,IAAA,QAAQ,EAAC,GAPb;AAQI,IAAA,IAAI,EAAC,WART;AASI,IAAA,QAAQ,EAAEC,aATd;AAUI,IAAA,QAAQ,EAAET,QAVd;AAWI,IAAA,MAAM,EAAEW;AAXZ,KAYQ;AAAE9C,IAAAA;AAAF,GAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAeI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE6C,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAgBKE,WAAW,iBACR,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,gBADL,CAjBR,CADJ;AAwBH,CA5BM;;AA8BP,MAAMG,wBAAwB,GAAG,CAAC;AAAEzD,EAAAA,OAAO,EAAE;AAAEmB,IAAAA;AAAF;AAAX,CAAD,KAAwC;AACrE,QAAM;AACFuC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF,KADN;AAEFf,IAAAA,MAAM,EAAEU;AAFN,MAGFxE,gBAAgB,EAHpB;AAKA,QAAM8E,eAAe,GAAG7F,WAAW,CAAC,CAAC8F,eAAD,EAAkBjC,KAAlB,EAAyBV,KAAzB,KAAmC;AACnEC,IAAAA,iBAAiB,CAAE,aAAY0C,eAAgB,KAAIjC,KAAM,EAAxC,CAAjB,CAA4DV,KAA5D;AACH,GAFkC,EAEhC,EAFgC,CAAnC;AAGA,QAAM4C,eAAe,GAAG/F,WAAW,CAC/BgG,UAAU,IAAI,MAAM;AAChB5C,IAAAA,iBAAiB,CAAC,WAAD,CAAjB,CAA+BwC,SAAS,CAACK,MAAV,CAAiB,CAAC;AAAE9D,MAAAA;AAAF,KAAD,KAAY6D,UAAU,KAAK7D,EAA5C,CAA/B;AACH,GAH8B,EAI/B,CAACyD,SAAD,CAJ+B,CAAnC;AAOA,QAAMM,WAAW,GAAGlG,WAAW,CAAC,MAAM;AAAA;;AAClC,UAAMmC,EAAE,GAAG1B,IAAI,EAAf;AACA2C,IAAAA,iBAAiB,CAAC,WAAD,CAAjB,CAA+B,CAC3B,IAAIwC,SAAJ,aAAIA,SAAJ,cAAIA,SAAJ,GAAiB,EAAjB,CAD2B,EAE3B;AACIjD,MAAAA,KAAK,uBAAEiD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEO,MAAb,iEAAuB,CADhC;AAEIhE,MAAAA;AAFJ,KAF2B,CAA/B;AAOH,GAT8B,EAS5B,CAACiE,IAAI,CAACC,SAAL,CAAeT,SAAf,CAAD,CAT4B,CAA/B;AAWA,QAAMU,IAAI,GAAGtG,WAAW,CACpB,CAAC;AAAEuG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,KAA4B;AACxBpD,IAAAA,iBAAiB,CAAC,WAAD,CAAjB,CACI/C,SAAS,CAACuF,SAAD,EAAYW,QAAZ,EAAsBC,QAAtB,CAAT,CAAyCxB,GAAzC,CAA6C,CAACrD,IAAD,EAAOgB,KAAP,MAAkB,EAAE,GAAGhB,IAAL;AAAWgB,MAAAA;AAAX,KAAlB,CAA7C,CADJ;AAGH,GALmB,EAMpB,CAACiD,SAAD,CANoB,CAAxB;AASA,sBACI,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAEA,SADV;AAEI,IAAA,MAAM,EAAEU,IAFZ;AAGI,IAAA,aAAa,EAAET,eAHnB;AAII,IAAA,QAAQ,EAAEE,eAJd;AAKI,IAAA,KAAK,EAAEG,WALX;AAMI,IAAA,MAAM,EAAEX,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEK,SAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH,CA9CD;;AAgDA,OAAO,MAAMa,uBAAuB,GAAGjF,gCAAhC","sourcesContent":["import React, { useCallback, useMemo } from 'react';\n\nimport cn from 'classnames';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\n\nimport uuid from 'uuid/v4';\n\nimport { List, TextField, Tooltip, Typography } from '@wld/ui';\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\n\nimport { useFormikContext } from 'formik';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { EditDialog } from '../../../../commons/edit_dialog/edit_dialog';\nimport { SliderWithPopper } from '../../../../commons/slider_with_popper/slider_with_popper';\nimport { AddButton } from '../../../../commons/add_button/add_button';\n\nimport { ReactComponent as MoveIcon } from '../../../../../assets/icons/move_list.svg';\nimport { ReactComponent as TrashIcon } from '../../../../../assets/icons/trash.svg';\n\nimport translations from './languages_edit_dialog_translations';\nimport { styles } from './languages_edit_dialog_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst LanguagesCardEditDialogComponent = ({ open, onClose, data, onEdit, validationSchema, isEditing }) => {\n    const { formatMessage } = useIntl();\n    const validationSchemaToPass = useMemo(() => validationSchema(formatMessage), [validationSchema]);\n\n    return (\n        <EditDialog\n            open={open}\n            onClose={onClose}\n            data={data}\n            isEditing={isEditing}\n            onEdit={onEdit}\n            validationSchema={validationSchemaToPass}\n            title={<FormattedMessage id=\"Languages.editDialog.title\" defaultMessage=\"Your languages\" />}\n        >\n            {helpers => <LanguagesEditFormWrapper helpers={helpers} />}\n        </EditDialog>\n    );\n};\n\nconst LanguageItem = SortableElement(\n    ({ id, language, onChange, onRemove, error: fieldErrors, classes, languageIndex: index }) => {\n        const { formatMessage } = useIntl();\n        const theme = useTheme();\n        const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n\n        const handleLanguageChange = useCallback(e => onChange(index, 'language', e.target.value), [index]);\n        const handleValueChange = useCallback(e => onChange(index, 'value', Number(e.target.value)), [index]);\n\n        return (\n            <div className={classes.itemContainer}>\n                <div className={classes.actions}>\n                    <DragHandle {...{ classes }} />\n                    <div className={classes.divider} />\n                    <Tooltip title={<FormattedMessage id=\"Main.lang.delete\" defaultMessage=\"Delete\" />}>\n                        <button type=\"button\" className={classes.button} onClick={onRemove(id)}>\n                            <TrashIcon className={classes.removeIcon} />\n                        </button>\n                    </Tooltip>\n                    {!isMobile && <div className={classes.divider} />}\n                </div>\n                <div className={classes.listItem}>\n                    <div className={classes.fieldGroup}>\n                        <div className={classes.field}>\n                            <Typography color=\"dark\" variant=\"label\">\n                                {formatMessage(translations.language)}\n                            </Typography>\n                            <TextField\n                                value={language.language}\n                                onChange={handleLanguageChange}\n                                id={`language_language_${id}`}\n                                placeholder={formatMessage(translations.languagePlaceholder)}\n                                variant=\"flat\"\n                            />\n                            {fieldErrors && fieldErrors.language && (\n                                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                    {fieldErrors.language}\n                                </Typography>\n                            )}\n                        </div>\n                        <div className={cn(classes.field, classes.sliderValueContainer)}>\n                            <Typography\n                                customClasses={{\n                                    container: classes.sliderValue\n                                }}\n                                color=\"dark\"\n                                variant=\"label\"\n                            >\n                                {formatMessage(translations.level, {\n                                    valueNode: <span className={classes.bolden}>{language.value}</span>\n                                })}\n                            </Typography>\n                            <SliderWithPopper\n                                color=\"primary\"\n                                name=\"value\"\n                                value={language.value}\n                                onChange={handleValueChange}\n                                min={0}\n                                max={100}\n                                className={classes.slider}\n                                popperCardProps={{\n                                    customClasses: {\n                                        container: classes.sliderPopperCard,\n                                        arrowContainer: classes.sliderPopperCardArrowContainer\n                                    }\n                                }}\n                            />\n                            {fieldErrors && fieldErrors.value && (\n                                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                                    {fieldErrors.value}\n                                </Typography>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n);\n\nconst SortableLanguagesItems = SortableContainer(({ items, onChange, onDelete, errors, name, schools, classes }) => (\n    <List>\n        {items?.map((language, index) => (\n            <LanguageItem\n                key={`${name}_${language.id}_${index}`}\n                onChange={onChange}\n                onRemove={onDelete}\n                id={language.id}\n                languageIndex={index}\n                error={errors && errors[index]}\n                {...{\n                    index,\n                    language,\n                    schools,\n                    classes\n                }}\n            />\n        ))}\n    </List>\n));\n\nconst DragHandle = SortableHandle(({ classes }) => (\n    <button type=\"button\">\n        <MoveIcon className={classes.dragHandle} />\n    </button>\n));\n\nexport const LanguagesEditForm = ({ data, onMove, onValueChange, onDelete, onAdd, errors: validationErrors }) => {\n    const classes = useStyles();\n    const globalError = typeof validationErrors === 'string' && validationErrors;\n\n    return (\n        <>\n            <SortableLanguagesItems\n                useDragHandle\n                lockToContainerEdges\n                helperClass={classes.sortableHelper}\n                items={data}\n                onSortEnd={onMove}\n                distance={20}\n                lockAxis=\"y\"\n                name=\"education\"\n                onChange={onValueChange}\n                onDelete={onDelete}\n                errors={validationErrors}\n                {...{ classes }}\n            />\n            <AddButton onClick={onAdd} />\n            {globalError && (\n                <Typography color=\"danger\" component=\"p\">\n                    {validationErrors}\n                </Typography>\n            )}\n        </>\n    );\n};\n\nconst LanguagesEditFormWrapper = ({ helpers: { handleValueChange } }) => {\n    const {\n        values: { languages },\n        errors: validationErrors\n    } = useFormikContext();\n\n    const languageChanged = useCallback((experienceIndex, field, value) => {\n        handleValueChange(`languages[${experienceIndex}].${field}`)(value);\n    }, []);\n    const languageDeleted = useCallback(\n        deletingId => () => {\n            handleValueChange('languages')(languages.filter(({ id }) => deletingId !== id));\n        },\n        [languages]\n    );\n\n    const addLanguage = useCallback(() => {\n        const id = uuid();\n        handleValueChange('languages')([\n            ...(languages ?? []),\n            {\n                index: languages?.length ?? 0,\n                id\n            }\n        ]);\n    }, [JSON.stringify(languages)]);\n\n    const move = useCallback(\n        ({ oldIndex, newIndex }) => {\n            handleValueChange('languages')(\n                arrayMove(languages, oldIndex, newIndex).map((data, index) => ({ ...data, index }))\n            );\n        },\n        [languages]\n    );\n\n    return (\n        <LanguagesEditForm\n            data={languages}\n            onMove={move}\n            onValueChange={languageChanged}\n            onDelete={languageDeleted}\n            onAdd={addLanguage}\n            errors={validationErrors?.languages}\n        />\n    );\n};\n\nexport const LanguagesCardEditDialog = LanguagesCardEditDialogComponent;\n"]},"metadata":{},"sourceType":"module"}