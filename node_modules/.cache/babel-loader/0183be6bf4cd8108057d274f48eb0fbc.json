{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/technologies/all_technologies_picker/all_technologies_picker.jsx\";\nimport React, { useCallback, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { useDebounce } from 'use-debounce';\nimport { FormattedMessage } from 'react-intl';\nimport { animated, useChain, useTransition } from 'react-spring';\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\nimport { Card, TextField, Typography } from '@wld/ui';\nimport { useTechnologies } from '../../../hooks/technologies/use_technologies';\nimport { ALL_TECHNOLOGIES_TRANSITIONS_SPRING_PROPS, SELECTED_ITEM_LAYER_TRANSITIONS_SPRING_PROPS } from './all_technologies_picker_spring_props';\nimport { CheckboxField } from '../../checkbox_field/checkbox_group';\nimport { styles } from './all_technologies_picker_styles';\nconst useStyles = createUseStyles(styles);\n\nconst TechnologyItem = ({\n  item,\n  classes,\n  selectedItems = [],\n  onAdd,\n  onDelete\n}) => {\n  const selectedItem = useMemo(() => selectedItems.find(({\n    name\n  }) => name === item.name), [selectedItems, item]);\n  const onClick = useCallback(() => {\n    if (!selectedItem) {\n      onAdd(item.name);\n      return;\n    }\n\n    onDelete(selectedItem.id);\n  }, [selectedItem, onAdd, onDelete]);\n  const imgUrl = useMemo(() => {\n    if (item.handle) {\n      return `https://process.filestackapi.com/${item.handle}`;\n    }\n\n    return item.url;\n  }, [item]);\n  const selectedItemLayerTransitions = useTransition(selectedItem, selected => `selected_item_layer_${selected === null || selected === void 0 ? void 0 : selected.name}`, SELECTED_ITEM_LAYER_TRANSITIONS_SPRING_PROPS);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.technologyItem,\n    type: \"button\",\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    customClasses: {\n      container: classes.technologyImageContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: imgUrl,\n    alt: item.name,\n    className: classes.technologyImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), selectedItemLayerTransitions.map(({\n    item: selected,\n    key,\n    props\n  }) => selected && /*#__PURE__*/React.createElement(animated.div, {\n    key: key,\n    className: classes.selectedTechnologyLayer,\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"light\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, selected.index + 1)))), /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.typography\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, item.name));\n};\n\nconst AllTechnologiesPickerComponent = ({\n  selectedItems,\n  onAdd,\n  onDelete,\n  classes: receivedClasses = {}\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n  const classes = useStyles();\n  const animationEnded = useRef(false);\n  const animationReference = useRef();\n  const [onlySelected, setOnlySelected] = useState();\n  const {\n    technologies\n  } = useTechnologies();\n  const [query, setQuery] = useState('');\n  const [debouncedQuery] = useDebounce(query, 200);\n  const displayedItems = useMemo(() => Object.values(technologies !== null && technologies !== void 0 ? technologies : {}).filter(({\n    name\n  }) => {\n    if (!onlySelected) {\n      return true;\n    }\n\n    return selectedItems.some(({\n      name: selectedName\n    }) => selectedName === name);\n  }).filter(({\n    name,\n    tags\n  }) => [...(tags !== null && tags !== void 0 ? tags : []), name].some(value => value.toLowerCase().includes(debouncedQuery.toLowerCase()))).slice(0, 35), [technologies, debouncedQuery, onlySelected]);\n  const handleTextFieldChange = useCallback(event => setQuery(event.target.value), []);\n  const displayedItemsTransitions = useTransition(!animationEnded.current ? displayedItems : null, item => `technology_${item === null || item === void 0 ? void 0 : item.name}`, { ...ALL_TECHNOLOGIES_TRANSITIONS_SPRING_PROPS,\n    trail: 1250 / displayedItems.length,\n    onRest: async () => {\n      await new Promise(resolve => setTimeout(resolve, 200));\n      animationEnded.current = true;\n    },\n    ref: animationReference\n  });\n  useChain([animationReference], [0.35, 0]);\n  const toggleOtherPerk = useCallback(() => {\n    setOnlySelected(!onlySelected);\n  }, [onlySelected]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(classes.container, receivedClasses.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    customClasses: {\n      container: classes.textField\n    },\n    fullWidth: isMobile,\n    variant: \"outlined\",\n    value: query,\n    onChange: handleTextFieldChange,\n    placeholder: \"Mobile, Javascript, etc...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), isMobile && /*#__PURE__*/React.createElement(CheckboxField, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Skills.EditDialog.onlySelected\",\n      defaultMessage: \"Only selected\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    })),\n    onClick: toggleOtherPerk,\n    checked: onlySelected,\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(classes.technologiesList, receivedClasses.technologiesList),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, (animationEnded.current ? displayedItems : displayedItemsTransitions).map((values, index) => {\n    const item = animationEnded.current ? values : values.item;\n    const technologyItem = /*#__PURE__*/React.createElement(TechnologyItem, {\n      key: `technology_${item.name}_${index}`,\n      selectedItems: selectedItems,\n      item: item,\n      onAdd: onAdd,\n      onDelete: onDelete,\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    });\n\n    if (!animationEnded.current) {\n      const {\n        key,\n        props\n      } = values;\n      return /*#__PURE__*/React.createElement(animated.div, {\n        key: key,\n        style: props,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }\n      }, technologyItem);\n    }\n\n    return technologyItem;\n  })));\n};\n\nexport const AllTechnologiesPicker = AllTechnologiesPickerComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/technologies/all_technologies_picker/all_technologies_picker.jsx"],"names":["React","useCallback","useMemo","useRef","useState","cn","createUseStyles","useTheme","useDebounce","FormattedMessage","animated","useChain","useTransition","useMediaQuery","Card","TextField","Typography","useTechnologies","ALL_TECHNOLOGIES_TRANSITIONS_SPRING_PROPS","SELECTED_ITEM_LAYER_TRANSITIONS_SPRING_PROPS","CheckboxField","styles","useStyles","TechnologyItem","item","classes","selectedItems","onAdd","onDelete","selectedItem","find","name","onClick","id","imgUrl","handle","url","selectedItemLayerTransitions","selected","technologyItem","container","technologyImageContainer","technologyImage","map","key","props","selectedTechnologyLayer","index","typography","AllTechnologiesPickerComponent","receivedClasses","theme","isMobile","screenSizes","small","animationEnded","animationReference","onlySelected","setOnlySelected","technologies","query","setQuery","debouncedQuery","displayedItems","Object","values","filter","some","selectedName","tags","value","toLowerCase","includes","slice","handleTextFieldChange","event","target","displayedItemsTransitions","current","trail","length","onRest","Promise","resolve","setTimeout","ref","toggleOtherPerk","textField","technologiesList","AllTechnologiesPicker"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { useDebounce } from 'use-debounce';\nimport { FormattedMessage } from 'react-intl';\nimport { animated, useChain, useTransition } from 'react-spring';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery/useMediaQuery';\nimport { Card, TextField, Typography } from '@wld/ui';\n\nimport { useTechnologies } from '../../../hooks/technologies/use_technologies';\n\nimport {\n    ALL_TECHNOLOGIES_TRANSITIONS_SPRING_PROPS,\n    SELECTED_ITEM_LAYER_TRANSITIONS_SPRING_PROPS\n} from './all_technologies_picker_spring_props';\n\nimport { CheckboxField } from '../../checkbox_field/checkbox_group';\n\nimport { styles } from './all_technologies_picker_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst TechnologyItem = ({ item, classes, selectedItems = [], onAdd, onDelete }) => {\n    const selectedItem = useMemo(() => selectedItems.find(({ name }) => name === item.name), [selectedItems, item]);\n\n    const onClick = useCallback(() => {\n        if (!selectedItem) {\n            onAdd(item.name);\n            return;\n        }\n        onDelete(selectedItem.id);\n    }, [selectedItem, onAdd, onDelete]);\n\n    const imgUrl = useMemo(() => {\n        if (item.handle) {\n            return `https://process.filestackapi.com/${item.handle}`;\n        }\n        return item.url;\n    }, [item]);\n\n    const selectedItemLayerTransitions = useTransition(\n        selectedItem,\n        selected => `selected_item_layer_${selected?.name}`,\n        SELECTED_ITEM_LAYER_TRANSITIONS_SPRING_PROPS\n    );\n\n    return (\n        <button className={classes.technologyItem} type=\"button\" onClick={onClick}>\n            <Card\n                customClasses={{\n                    container: classes.technologyImageContainer\n                }}\n            >\n                <img src={imgUrl} alt={item.name} className={classes.technologyImage} />\n                {selectedItemLayerTransitions.map(\n                    ({ item: selected, key, props }) =>\n                        selected && (\n                            <animated.div key={key} className={classes.selectedTechnologyLayer} style={props}>\n                                <Typography color=\"light\" variant=\"h3\">\n                                    {selected.index + 1}\n                                </Typography>\n                            </animated.div>\n                        )\n                )}\n            </Card>\n            <Typography\n                customClasses={{\n                    container: classes.typography\n                }}\n            >\n                {item.name}\n            </Typography>\n        </button>\n    );\n};\n\nconst AllTechnologiesPickerComponent = ({ selectedItems, onAdd, onDelete, classes: receivedClasses = {} }) => {\n    const theme = useTheme();\n    const isMobile = useMediaQuery(`(max-width: ${theme.screenSizes.small}px)`);\n    const classes = useStyles();\n    const animationEnded = useRef(false);\n    const animationReference = useRef();\n    const [onlySelected, setOnlySelected] = useState();\n\n    const { technologies } = useTechnologies();\n    const [query, setQuery] = useState('');\n    const [debouncedQuery] = useDebounce(query, 200);\n\n    const displayedItems = useMemo(\n        () =>\n            Object.values(technologies ?? {})\n                .filter(({ name }) => {\n                    if (!onlySelected) {\n                        return true;\n                    }\n                    return selectedItems.some(({ name: selectedName }) => selectedName === name);\n                })\n                .filter(({ name, tags }) =>\n                    [...(tags ?? []), name].some(value => value.toLowerCase().includes(debouncedQuery.toLowerCase())))\n                .slice(0, 35),\n        [technologies, debouncedQuery, onlySelected]\n    );\n\n    const handleTextFieldChange = useCallback(event => setQuery(event.target.value), []);\n\n    const displayedItemsTransitions = useTransition(\n        !animationEnded.current ? displayedItems : null,\n        item => `technology_${item?.name}`,\n        {\n            ...ALL_TECHNOLOGIES_TRANSITIONS_SPRING_PROPS,\n            trail: 1250 / displayedItems.length,\n            onRest: async () => {\n                await new Promise(resolve => setTimeout(resolve, 200));\n                animationEnded.current = true;\n            },\n            ref: animationReference\n        }\n    );\n\n    useChain([animationReference], [0.35, 0]);\n\n    const toggleOtherPerk = useCallback(() => {\n        setOnlySelected(!onlySelected);\n    }, [onlySelected]);\n\n    return (\n        <div className={cn(classes.container, receivedClasses.container)}>\n            <TextField\n                customClasses={{\n                    container: classes.textField\n                }}\n                fullWidth={isMobile}\n                variant=\"outlined\"\n                value={query}\n                onChange={handleTextFieldChange}\n                placeholder=\"Mobile, Javascript, etc...\"\n            />\n            {isMobile && (\n                <CheckboxField\n                    title={\n                        <Typography>\n                            <FormattedMessage id=\"Skills.EditDialog.onlySelected\" defaultMessage=\"Only selected\" />\n                        </Typography>\n                    }\n                    onClick={toggleOtherPerk}\n                    checked={onlySelected}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                />\n            )}\n            <div className={cn(classes.technologiesList, receivedClasses.technologiesList)}>\n                {(animationEnded.current ? displayedItems : displayedItemsTransitions).map((values, index) => {\n                    const item = animationEnded.current ? values : values.item;\n                    const technologyItem = (\n                        <TechnologyItem\n                            key={`technology_${item.name}_${index}`}\n                            selectedItems={selectedItems}\n                            item={item}\n                            onAdd={onAdd}\n                            onDelete={onDelete}\n                            classes={classes}\n                        />\n                    );\n                    if (!animationEnded.current) {\n                        const { key, props } = values;\n                        return (\n                            <animated.div key={key} style={props}>\n                                {technologyItem}\n                            </animated.div>\n                        );\n                    }\n                    return technologyItem;\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport const AllTechnologiesPicker = AllTechnologiesPickerComponent;\n"]},"metadata":{},"sourceType":"module"}