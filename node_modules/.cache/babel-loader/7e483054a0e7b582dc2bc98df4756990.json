{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_images/project_dialog_content_add_image/project_dialog_content_add_image.jsx\";\nimport React, { useCallback } from 'react';\nimport { useFormikContext } from 'formik';\nimport { UrlUploadFileDialog } from '../../../../../../commons/url_upload_file_dialog/url_upload_file_dialog';\nimport { AddButtonDashed } from '../../../../../../commons/add_button_dashed/add_button_dashed';\nimport { useCallbackOpen } from '../../../../../../hooks/use_callback_open';\n\nconst ProjectDialogContentAddImageComponent = () => {\n  const [openDialog, setDialogOpened, setDialogClosed] = useCallbackOpen();\n  const {\n    values,\n    setFieldValue\n  } = useFormikContext();\n  const onFileAdded = useCallback(url => setFieldValue('images', [...(values.images || []), {\n    url\n  }]), [JSON.stringify(values.images)]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UrlUploadFileDialog, {\n    open: openDialog,\n    onClose: setDialogClosed,\n    onAdd: onFileAdded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddButtonDashed, {\n    onClick: setDialogOpened,\n    title: \"Add an image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const ProjectDialogContentAddImage = ProjectDialogContentAddImageComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_images/project_dialog_content_add_image/project_dialog_content_add_image.jsx"],"names":["React","useCallback","useFormikContext","UrlUploadFileDialog","AddButtonDashed","useCallbackOpen","ProjectDialogContentAddImageComponent","openDialog","setDialogOpened","setDialogClosed","values","setFieldValue","onFileAdded","url","images","JSON","stringify","ProjectDialogContentAddImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,SAASC,mBAAT,QAAoC,yEAApC;AACA,SAASC,eAAT,QAAgC,+DAAhC;AAEA,SAASC,eAAT,QAAgC,2CAAhC;;AAEA,MAAMC,qCAAqC,GAAG,MAAM;AAChD,QAAM,CAACC,UAAD,EAAaC,eAAb,EAA8BC,eAA9B,IAAiDJ,eAAe,EAAtE;AACA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BT,gBAAgB,EAAlD;AAEA,QAAMU,WAAW,GAAGX,WAAW,CAACY,GAAG,IAAIF,aAAa,CAAC,QAAD,EAAW,CAAC,IAAID,MAAM,CAACI,MAAP,IAAiB,EAArB,CAAD,EAA2B;AAAED,IAAAA;AAAF,GAA3B,CAAX,CAArB,EAAsE,CACjGE,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACI,MAAtB,CADiG,CAAtE,CAA/B;AAIA,sBACI,uDACI,oBAAC,mBAAD;AAAqB,IAAA,IAAI,EAAEP,UAA3B;AAAuC,IAAA,OAAO,EAAEE,eAAhD;AAAiE,IAAA,KAAK,EAAEG,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEJ,eAA1B;AAA2C,IAAA,KAAK,EAAC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CAdD;;AAgBA,OAAO,MAAMS,4BAA4B,GAAGX,qCAArC","sourcesContent":["import React, { useCallback } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { UrlUploadFileDialog } from '../../../../../../commons/url_upload_file_dialog/url_upload_file_dialog';\nimport { AddButtonDashed } from '../../../../../../commons/add_button_dashed/add_button_dashed';\n\nimport { useCallbackOpen } from '../../../../../../hooks/use_callback_open';\n\nconst ProjectDialogContentAddImageComponent = () => {\n    const [openDialog, setDialogOpened, setDialogClosed] = useCallbackOpen();\n    const { values, setFieldValue } = useFormikContext();\n\n    const onFileAdded = useCallback(url => setFieldValue('images', [...(values.images || []), { url }]), [\n        JSON.stringify(values.images)\n    ]);\n\n    return (\n        <>\n            <UrlUploadFileDialog open={openDialog} onClose={setDialogClosed} onAdd={onFileAdded} />\n            <AddButtonDashed onClick={setDialogOpened} title=\"Add an image\" />\n        </>\n    );\n};\n\nexport const ProjectDialogContentAddImage = ProjectDialogContentAddImageComponent;\n"]},"metadata":{},"sourceType":"module"}