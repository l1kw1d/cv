{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/studies_card.jsx\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { StudiesFront } from './studies_front/studies_front';\nimport { StudiesBack } from './studies_back/studies_back';\nimport { mapStudiesFromJsonResume, mapStudiesToJsonResume } from './data/mapping';\nimport { StudiesCardEditDialog } from './edit_dialog/studies_card_edit_dialog';\nimport { StudiesValidator, validateStudiesComplete } from './data/validator';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst StudiesCardComponent = ({\n  variant,\n  side\n}) => {\n  const [mode] = useMode();\n  const {\n    data,\n    onEdit,\n    isEditing\n  } = useContext(DeveloperProfileContext);\n  const mappedData = useMemo(() => mapStudiesFromJsonResume(data), [data]);\n  const onDialogEdited = useCallback(editedData => {\n    onEdit(mapStudiesToJsonResume(editedData));\n  }, [onEdit]);\n  const isComplete = useMemo(() => validateStudiesComplete(mappedData), [mappedData]);\n  const currentSide = useMemo(() => {\n    if (!isComplete && !isEditing) {\n      return SIDES.FRONT;\n    }\n\n    return side;\n  }, [side, isComplete, isEditing]);\n\n  if (!isComplete && mode !== 'edit') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ProfileCard, {\n    kind: \"studies\",\n    data: mappedData,\n    isComplete: isComplete,\n    isEditingProfile: isEditing,\n    sides: {\n      front: props => /*#__PURE__*/React.createElement(StudiesFront, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      })),\n      back: props => /*#__PURE__*/React.createElement(StudiesBack, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }\n      }))\n    },\n    editDialog: {\n      component: StudiesCardEditDialog,\n      validationSchema: StudiesValidator,\n      onEdit: onDialogEdited\n    },\n    variant: variant,\n    side: currentSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  });\n};\n\nexport const StudiesCard = StudiesCardComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/studies_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","StudiesFront","StudiesBack","mapStudiesFromJsonResume","mapStudiesToJsonResume","StudiesCardEditDialog","StudiesValidator","validateStudiesComplete","DeveloperProfileContext","SIDES","useMode","StudiesCardComponent","variant","side","mode","data","onEdit","isEditing","mappedData","onDialogEdited","editedData","isComplete","currentSide","FRONT","front","props","back","component","validationSchema","StudiesCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,OAAzC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,4CAA5B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,wBAAT,EAAmCC,sBAAnC,QAAiE,gBAAjE;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kBAA1D;AACA,SAASC,uBAAT,QAAwC,oCAAxC;AACA,SAASC,KAAT,QAAsB,sDAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAChD,QAAM,CAACC,IAAD,IAASJ,OAAO,EAAtB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA8BnB,UAAU,CAACU,uBAAD,CAA9C;AACA,QAAMU,UAAU,GAAGnB,OAAO,CAAC,MAAMI,wBAAwB,CAACY,IAAD,CAA/B,EAAuC,CAACA,IAAD,CAAvC,CAA1B;AAEA,QAAMI,cAAc,GAAGtB,WAAW,CAC9BuB,UAAU,IAAI;AACVJ,IAAAA,MAAM,CAACZ,sBAAsB,CAACgB,UAAD,CAAvB,CAAN;AACH,GAH6B,EAI9B,CAACJ,MAAD,CAJ8B,CAAlC;AAOA,QAAMK,UAAU,GAAGtB,OAAO,CAAC,MAAMQ,uBAAuB,CAACW,UAAD,CAA9B,EAA4C,CAACA,UAAD,CAA5C,CAA1B;AAEA,QAAMI,WAAW,GAAGvB,OAAO,CAAC,MAAM;AAC9B,QAAI,CAACsB,UAAD,IAAe,CAACJ,SAApB,EAA+B;AAC3B,aAAOR,KAAK,CAACc,KAAb;AACH;;AACD,WAAOV,IAAP;AACH,GAL0B,EAKxB,CAACA,IAAD,EAAOQ,UAAP,EAAmBJ,SAAnB,CALwB,CAA3B;;AAOA,MAAI,CAACI,UAAD,IAAeP,IAAI,KAAK,MAA5B,EAAoC;AAChC,WAAO,IAAP;AACH;;AAED,sBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,IAAI,EAAEI,UAFV;AAGI,IAAA,UAAU,EAAEG,UAHhB;AAII,IAAA,gBAAgB,EAAEJ,SAJtB;AAKI,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAEC,KAAK,iBAAI,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADb;AAEHC,MAAAA,IAAI,EAAED,KAAK,iBAAI,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFZ,KALX;AASI,IAAA,UAAU,EAAE;AACRE,MAAAA,SAAS,EAAEtB,qBADH;AAERuB,MAAAA,gBAAgB,EAAEtB,gBAFV;AAGRU,MAAAA,MAAM,EAAEG;AAHA,KAThB;AAcI,IAAA,OAAO,EAAEP,OAdb;AAeI,IAAA,IAAI,EAAEU,WAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAmBH,CA5CD;;AA8CA,OAAO,MAAMO,WAAW,GAAGlB,oBAApB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { StudiesFront } from './studies_front/studies_front';\nimport { StudiesBack } from './studies_back/studies_back';\nimport { mapStudiesFromJsonResume, mapStudiesToJsonResume } from './data/mapping';\nimport { StudiesCardEditDialog } from './edit_dialog/studies_card_edit_dialog';\nimport { StudiesValidator, validateStudiesComplete } from './data/validator';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst StudiesCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, onEdit, isEditing } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => mapStudiesFromJsonResume(data), [data]);\n\n    const onDialogEdited = useCallback(\n        editedData => {\n            onEdit(mapStudiesToJsonResume(editedData));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateStudiesComplete(mappedData), [mappedData]);\n\n    const currentSide = useMemo(() => {\n        if (!isComplete && !isEditing) {\n            return SIDES.FRONT;\n        }\n        return side;\n    }, [side, isComplete, isEditing]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n\n    return (\n        <ProfileCard\n            kind=\"studies\"\n            data={mappedData}\n            isComplete={isComplete}\n            isEditingProfile={isEditing}\n            sides={{\n                front: props => <StudiesFront {...props} />,\n                back: props => <StudiesBack {...props} />\n            }}\n            editDialog={{\n                component: StudiesCardEditDialog,\n                validationSchema: StudiesValidator,\n                onEdit: onDialogEdited\n            }}\n            variant={variant}\n            side={currentSide}\n        />\n    );\n};\n\nexport const StudiesCard = StudiesCardComponent;\n"]},"metadata":{},"sourceType":"module"}