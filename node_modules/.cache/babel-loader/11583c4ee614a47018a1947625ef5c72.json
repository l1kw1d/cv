{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/interested_by/interested_by_front/interested_by_front.jsx\";\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { styles } from './interested_by_front_styles';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\nconst useStyles = createUseStyles(styles);\n\nconst InterestedByFrontComponent = ({\n  data: {\n    interestedBy\n  },\n  dismissButton,\n  handleAddButtonClick,\n  overrideColor,\n  customClasses = {}\n}) => {\n  const classes = useStyles({\n    overrideColor\n  });\n  const [side, setSide] = useCardSide();\n  const [isTypographyTruncated, setIsTypographyTruncated] = useState(true);\n  const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [side, setSide]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCardPaddedFront, {\n    customClasses: {\n      container: cn(classes.container, customClasses.container)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CenterContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({\n    interestedBy,\n    setIsTypographyTruncated,\n    handleAddButtonClick,\n    overrideColor,\n    classes,\n    customClasses\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })))), isTypographyTruncated && !dismissButton && interestedBy && /*#__PURE__*/React.createElement(ProfileCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardButton, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"InterestedBy.front.action\",\n    defaultMessage: \"See all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }))));\n};\n\nconst Content = ({\n  interestedBy,\n  setIsTypographyTruncated,\n  handleAddButtonClick,\n  overrideColor,\n  classes,\n  customClasses\n}) => {\n  const typographyReference = useRef();\n  useEffect(() => {\n    const element = typographyReference.current;\n\n    if ((element === null || element === void 0 ? void 0 : element.offsetHeight) > (element === null || element === void 0 ? void 0 : element.scrollHeight) - 1) {\n      setIsTypographyTruncated(false);\n    }\n  }, [typographyReference.current]);\n\n  if (!interestedBy) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.noInterested,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      component: \"h3\",\n      customClasses: {\n        container: classes.noInterestedTypography\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"InterestedBy.front.noInterested\",\n      defaultMessage: \"Vous n'avez pas encore ajout\\xE9 de techno qui vous int\\xE9resse !\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NoDataButton, {\n      handleAddButtonClick: handleAddButtonClick,\n      classes: {\n        container: classes.addButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"InterestedBy.noInterested.buttonLabel\",\n      defaultMessage: \"Ajouter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(ProfileCardFrontTypography, {\n    ref: typographyReference,\n    classes: {\n      container: cn(classes.typography, customClasses.typography)\n    },\n    overrideColor: overrideColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"InterestedBy.front.content\",\n    defaultMessage: \"Interested by:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.interestedByValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, interestedBy));\n};\n\nexport const InterestedByFront = memo(InterestedByFrontComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/interested_by/interested_by_front/interested_by_front.jsx"],"names":["React","memo","useCallback","useEffect","useRef","useState","cn","createUseStyles","FormattedMessage","Typography","ProfileCardPaddedFront","CenterContentContainer","ProfileCardFrontTypography","styles","useCardSide","ProfileCardActions","ProfileCardButton","NoDataButton","SIDES","useStyles","InterestedByFrontComponent","data","interestedBy","dismissButton","handleAddButtonClick","overrideColor","customClasses","classes","side","setSide","isTypographyTruncated","setIsTypographyTruncated","handleButtonClick","FRONT","BACK","container","Content","typographyReference","element","current","offsetHeight","scrollHeight","noInterested","noInterestedTypography","addButton","typography","interestedByValue","InterestedByFront"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useEffect, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\n\nimport { styles } from './interested_by_front_styles';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\n\nconst useStyles = createUseStyles(styles);\n\nconst InterestedByFrontComponent = ({\n    data: { interestedBy },\n    dismissButton,\n    handleAddButtonClick,\n    overrideColor,\n    customClasses = {}\n}) => {\n    const classes = useStyles({ overrideColor });\n    const [side, setSide] = useCardSide();\n\n    const [isTypographyTruncated, setIsTypographyTruncated] = useState(true);\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    return (\n        <>\n            <ProfileCardPaddedFront customClasses={{ container: cn(classes.container, customClasses.container) }}>\n                <CenterContentContainer>\n                    <Content\n                        {...{\n                            interestedBy,\n                            setIsTypographyTruncated,\n                            handleAddButtonClick,\n                            overrideColor,\n                            classes,\n                            customClasses\n                        }}\n                    />\n                </CenterContentContainer>\n            </ProfileCardPaddedFront>\n            {isTypographyTruncated && !dismissButton && interestedBy && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage id=\"InterestedBy.front.action\" defaultMessage=\"See all\" />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({\n    interestedBy,\n    setIsTypographyTruncated,\n    handleAddButtonClick,\n    overrideColor,\n    classes,\n    customClasses\n}) => {\n    const typographyReference = useRef();\n\n    useEffect(() => {\n        const element = typographyReference.current;\n        if (element?.offsetHeight > element?.scrollHeight - 1) {\n            setIsTypographyTruncated(false);\n        }\n    }, [typographyReference.current]);\n\n    if (!interestedBy) {\n        return (\n            <div className={classes.noInterested}>\n                <Typography variant=\"h3\" component=\"h3\" customClasses={{ container: classes.noInterestedTypography }}>\n                    <FormattedMessage\n                        id=\"InterestedBy.front.noInterested\"\n                        defaultMessage=\"Vous n'avez pas encore ajouté de techno qui vous intéresse !\"\n                    />\n                </Typography>\n                <NoDataButton\n                    handleAddButtonClick={handleAddButtonClick}\n                    classes={{\n                        container: classes.addButton\n                    }}\n                >\n                    <FormattedMessage id=\"InterestedBy.noInterested.buttonLabel\" defaultMessage=\"Ajouter\" />\n                </NoDataButton>\n            </div>\n        );\n    }\n    return (\n        <ProfileCardFrontTypography\n            ref={typographyReference}\n            classes={{\n                container: cn(classes.typography, customClasses.typography)\n            }}\n            overrideColor={overrideColor}\n        >\n            <FormattedMessage id=\"InterestedBy.front.content\" defaultMessage=\"Interested by:\" />\n            <div className={classes.interestedByValue}>{interestedBy}</div>\n        </ProfileCardFrontTypography>\n    );\n};\n\nexport const InterestedByFront = memo(InterestedByFrontComponent);\n"]},"metadata":{},"sourceType":"module"}