{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/checkbox_group/checkbox_group.jsx\";\nimport React, { useCallback } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { useIntl } from 'react-intl';\nimport { Typography } from '@wld/ui';\nimport { CheckboxField } from '../checkbox_field/checkbox_group';\nimport { styles } from './checkbox_group_styles';\nconst useStyles = createUseStyles(styles);\n\nconst CheckboxGroupComponent = ({\n  values,\n  translations,\n  value = [],\n  name,\n  onChange,\n  color = 'secondary',\n  rows = 2,\n  variant,\n  classes: receivedClasses = {}\n}) => {\n  const classes = useStyles({\n    rows\n  });\n  const {\n    formatMessage\n  } = useIntl();\n  const onFieldClicked = useCallback(enumValue => () => {\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (!value.includes(enumValue)) {\n      onChange([...value, enumValue]);\n      return;\n    }\n\n    onChange(value.filter(checkedItem => checkedItem !== enumValue));\n  }, [value, onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(classes.container, receivedClasses.container),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, values.map((enumValue, index) => /*#__PURE__*/React.createElement(CheckboxField, {\n    classes: {\n      container: cn(classes.checkboxField, receivedClasses.checkboxField)\n    },\n    title: /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }\n    }, formatMessage(translations[enumValue])),\n    onClick: onFieldClicked(enumValue),\n    checked: value.includes(enumValue),\n    value: enumValue,\n    variant: variant,\n    color: color,\n    key: `${name}_${index}_${enumValue}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const CheckboxGroup = CheckboxGroupComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/checkbox_group/checkbox_group.jsx"],"names":["React","useCallback","cn","createUseStyles","useIntl","Typography","CheckboxField","styles","useStyles","CheckboxGroupComponent","values","translations","value","name","onChange","color","rows","variant","classes","receivedClasses","formatMessage","onFieldClicked","enumValue","includes","filter","checkedItem","container","map","index","checkboxField","CheckboxGroup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SAASC,aAAT,QAA8B,kCAA9B;AAEA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,MAAMC,SAAS,GAAGL,eAAe,CAACI,MAAD,CAAjC;;AAEA,MAAME,sBAAsB,GAAG,CAAC;AAC5BC,EAAAA,MAD4B;AAE5BC,EAAAA,YAF4B;AAG5BC,EAAAA,KAAK,GAAG,EAHoB;AAI5BC,EAAAA,IAJ4B;AAK5BC,EAAAA,QAL4B;AAM5BC,EAAAA,KAAK,GAAG,WANoB;AAO5BC,EAAAA,IAAI,GAAG,CAPqB;AAQ5BC,EAAAA,OAR4B;AAS5BC,EAAAA,OAAO,EAAEC,eAAe,GAAG;AATC,CAAD,KAUzB;AACF,QAAMD,OAAO,GAAGV,SAAS,CAAC;AAAEQ,IAAAA;AAAF,GAAD,CAAzB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAoBhB,OAAO,EAAjC;AAEA,QAAMiB,cAAc,GAAGpB,WAAW,CAC9BqB,SAAS,IAAI,MAAM;AACf,QAAI,OAAOR,QAAP,KAAoB,UAAxB,EAAoC;AAChC;AACH;;AACD,QAAI,CAACF,KAAK,CAACW,QAAN,CAAeD,SAAf,CAAL,EAAgC;AAC5BR,MAAAA,QAAQ,CAAC,CAAC,GAAGF,KAAJ,EAAWU,SAAX,CAAD,CAAR;AACA;AACH;;AACDR,IAAAA,QAAQ,CAACF,KAAK,CAACY,MAAN,CAAaC,WAAW,IAAIA,WAAW,KAAKH,SAA5C,CAAD,CAAR;AACH,GAV6B,EAW9B,CAACV,KAAD,EAAQE,QAAR,CAX8B,CAAlC;AAcA,sBACI;AAAK,IAAA,SAAS,EAAEZ,EAAE,CAACgB,OAAO,CAACQ,SAAT,EAAoBP,eAAe,CAACO,SAApC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,MAAM,CAACiB,GAAP,CAAW,CAACL,SAAD,EAAYM,KAAZ,kBACR,oBAAC,aAAD;AACI,IAAA,OAAO,EAAE;AACLF,MAAAA,SAAS,EAAExB,EAAE,CAACgB,OAAO,CAACW,aAAT,EAAwBV,eAAe,CAACU,aAAxC;AADR,KADb;AAII,IAAA,KAAK,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaT,aAAa,CAACT,YAAY,CAACW,SAAD,CAAb,CAA1B,CAJX;AAKI,IAAA,OAAO,EAAED,cAAc,CAACC,SAAD,CAL3B;AAMI,IAAA,OAAO,EAAEV,KAAK,CAACW,QAAN,CAAeD,SAAf,CANb;AAOI,IAAA,KAAK,EAAEA,SAPX;AAQI,IAAA,OAAO,EAAEL,OARb;AASI,IAAA,KAAK,EAAEF,KATX;AAUI,IAAA,GAAG,EAAG,GAAEF,IAAK,IAAGe,KAAM,IAAGN,SAAU,EAVvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAkBH,CA9CD;;AAgDA,OAAO,MAAMQ,aAAa,GAAGrB,sBAAtB","sourcesContent":["import React, { useCallback } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { useIntl } from 'react-intl';\n\nimport { Typography } from '@wld/ui';\n\nimport { CheckboxField } from '../checkbox_field/checkbox_group';\n\nimport { styles } from './checkbox_group_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst CheckboxGroupComponent = ({\n    values,\n    translations,\n    value = [],\n    name,\n    onChange,\n    color = 'secondary',\n    rows = 2,\n    variant,\n    classes: receivedClasses = {}\n}) => {\n    const classes = useStyles({ rows });\n    const { formatMessage } = useIntl();\n\n    const onFieldClicked = useCallback(\n        enumValue => () => {\n            if (typeof onChange !== 'function') {\n                return;\n            }\n            if (!value.includes(enumValue)) {\n                onChange([...value, enumValue]);\n                return;\n            }\n            onChange(value.filter(checkedItem => checkedItem !== enumValue));\n        },\n        [value, onChange]\n    );\n\n    return (\n        <div className={cn(classes.container, receivedClasses.container)}>\n            {values.map((enumValue, index) => (\n                <CheckboxField\n                    classes={{\n                        container: cn(classes.checkboxField, receivedClasses.checkboxField)\n                    }}\n                    title={<Typography>{formatMessage(translations[enumValue])}</Typography>}\n                    onClick={onFieldClicked(enumValue)}\n                    checked={value.includes(enumValue)}\n                    value={enumValue}\n                    variant={variant}\n                    color={color}\n                    key={`${name}_${index}_${enumValue}`}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport const CheckboxGroup = CheckboxGroupComponent;\n"]},"metadata":{},"sourceType":"module"}