{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/skills/skills_front/skills_front.jsx\";\nimport React, { memo, useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport chroma from 'chroma-js';\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { useTechnologies } from '../../../../hooks/technologies/use_technologies';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\nimport { styles } from './skills_front_styles';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { getColorsFromCardVariant, getHexFromPaletteColor } from '../../../../../utils/styles/styles_utils';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { DEFAULT_TECHNO_HANDLE } from '../../../../../utils/icons';\nconst useStyles = createUseStyles(styles);\n\nconst SkillsFrontComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  const classes = useStyles();\n  const [side, setSide] = useCardSide();\n  const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [side, setSide]);\n  const {\n    technologies\n  } = useTechnologies();\n  const techno = useMemo(() => {\n    var _data$skills;\n\n    const firstTechno = data === null || data === void 0 ? void 0 : (_data$skills = data.skills) === null || _data$skills === void 0 ? void 0 : _data$skills[0];\n\n    if (!technologies || !firstTechno) {\n      return {\n        name: firstTechno === null || firstTechno === void 0 ? void 0 : firstTechno.name\n      };\n    }\n\n    return technologies[firstTechno === null || firstTechno === void 0 ? void 0 : firstTechno.name] || {\n      name: firstTechno === null || firstTechno === void 0 ? void 0 : firstTechno.name\n    };\n  }, [technologies, data]);\n  const hasSkill = useMemo(() => existsAndNotEmpty(data === null || data === void 0 ? void 0 : data.skills), [data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCardPaddedFront, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CenterContentContainer, {\n    customClasses: {\n      container: classes.container\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({\n    hasSkill,\n    techno,\n    handleAddButtonClick,\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })))), hasSkill && /*#__PURE__*/React.createElement(ProfileCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardButton, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Skills.front.action\",\n    defaultMessage: \"More skills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }))));\n};\n\nconst Content = ({\n  hasSkill,\n  techno,\n  handleAddButtonClick,\n  classes\n}) => {\n  if (hasSkill) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Picture, {\n      techno: techno,\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ProfileCardFrontTypography, {\n      classes: {\n        container: classes.typography\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Skills.front.title\",\n      defaultMessage: \"I mainly write {techno} stuff\",\n      values: {\n        techno: techno === null || techno === void 0 ? void 0 : techno.name\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noSkill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h3\",\n    customClasses: {\n      container: classes.noSkillTypography\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Skills.front.noSkill\",\n    defaultMessage: \"Vous n'avez pas encore ajout\\xE9 de comp\\xE9tences !\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(NoDataButton, {\n    handleAddButtonClick: handleAddButtonClick,\n    classes: {\n      container: classes.addButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Skills.noSkill.buttonLabel\",\n    defaultMessage: \"Ajouter une comp\\xE9tence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst Picture = ({\n  techno,\n  classes\n}) => {\n  const theme = useTheme();\n  const [variant] = useCardVariant();\n  const {\n    backgroundColor\n  } = getColorsFromCardVariant(theme, variant);\n  const src = useMemo(() => {\n    const hex = getHexFromPaletteColor(theme, backgroundColor);\n    const luminance = chroma(hex).luminance();\n\n    if (luminance < 0.98) {\n      return `https://process.filestackapi.com/output=format:png/negative/modulate=brightness:1000/compress/${(techno === null || techno === void 0 ? void 0 : techno.handle) || DEFAULT_TECHNO_HANDLE}`;\n    }\n\n    return `https://process.filestackapi.com/output=format:png/${(techno === null || techno === void 0 ? void 0 : techno.handle) || DEFAULT_TECHNO_HANDLE}`;\n  }, [techno, theme, backgroundColor]);\n\n  if (!src || !techno) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"img\", {\n    src: src,\n    alt: techno === null || techno === void 0 ? void 0 : techno.name,\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }\n  });\n};\n\nexport const SkillsFront = memo(SkillsFrontComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/skills/skills_front/skills_front.jsx"],"names":["React","memo","useCallback","useMemo","FormattedMessage","createUseStyles","useTheme","chroma","Typography","ProfileCardPaddedFront","CenterContentContainer","ProfileCardFrontTypography","ProfileCardActions","ProfileCardButton","useTechnologies","useCardSide","SIDES","styles","useCardVariant","getColorsFromCardVariant","getHexFromPaletteColor","existsAndNotEmpty","NoDataButton","DEFAULT_TECHNO_HANDLE","useStyles","SkillsFrontComponent","data","handleAddButtonClick","classes","side","setSide","handleButtonClick","FRONT","BACK","technologies","techno","firstTechno","skills","name","hasSkill","container","Content","typography","noSkill","noSkillTypography","addButton","Picture","theme","variant","backgroundColor","src","hex","luminance","handle","logo","SkillsFront"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport chroma from 'chroma-js';\n\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\n\nimport { useTechnologies } from '../../../../hooks/technologies/use_technologies';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\n\nimport { styles } from './skills_front_styles';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { getColorsFromCardVariant, getHexFromPaletteColor } from '../../../../../utils/styles/styles_utils';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { DEFAULT_TECHNO_HANDLE } from '../../../../../utils/icons';\n\nconst useStyles = createUseStyles(styles);\n\nconst SkillsFrontComponent = ({ data, handleAddButtonClick }) => {\n    const classes = useStyles();\n    const [side, setSide] = useCardSide();\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    const { technologies } = useTechnologies();\n\n    const techno = useMemo(() => {\n        const firstTechno = data?.skills?.[0];\n\n        if (!technologies || !firstTechno) {\n            return { name: firstTechno?.name };\n        }\n        return technologies[firstTechno?.name] || { name: firstTechno?.name };\n    }, [technologies, data]);\n\n    const hasSkill = useMemo(() => existsAndNotEmpty(data?.skills), [data]);\n\n    return (\n        <>\n            <ProfileCardPaddedFront>\n                <CenterContentContainer customClasses={{ container: classes.container }}>\n                    <Content {...{ hasSkill, techno, handleAddButtonClick, classes }} />\n                </CenterContentContainer>\n            </ProfileCardPaddedFront>\n            {hasSkill && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage id=\"Skills.front.action\" defaultMessage=\"More skills\" />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({ hasSkill, techno, handleAddButtonClick, classes }) => {\n    if (hasSkill) {\n        return (\n            <>\n                <Picture techno={techno} classes={classes} />\n                <ProfileCardFrontTypography classes={{ container: classes.typography }}>\n                    <FormattedMessage\n                        id=\"Skills.front.title\"\n                        defaultMessage=\"I mainly write {techno} stuff\"\n                        values={{ techno: techno?.name }}\n                    />\n                </ProfileCardFrontTypography>\n            </>\n        );\n    }\n    return (\n        <div className={classes.noSkill}>\n            <Typography variant=\"h3\" component=\"h3\" customClasses={{ container: classes.noSkillTypography }}>\n                <FormattedMessage\n                    id=\"Skills.front.noSkill\"\n                    defaultMessage=\"Vous n'avez pas encore ajouté de compétences !\"\n                />\n            </Typography>\n            <NoDataButton\n                handleAddButtonClick={handleAddButtonClick}\n                classes={{\n                    container: classes.addButton\n                }}\n            >\n                <FormattedMessage id=\"Skills.noSkill.buttonLabel\" defaultMessage=\"Ajouter une compétence\" />\n            </NoDataButton>\n        </div>\n    );\n};\n\nconst Picture = ({ techno, classes }) => {\n    const theme = useTheme();\n    const [variant] = useCardVariant();\n    const { backgroundColor } = getColorsFromCardVariant(theme, variant);\n    const src = useMemo(() => {\n        const hex = getHexFromPaletteColor(theme, backgroundColor);\n        const luminance = chroma(hex).luminance();\n        if (luminance < 0.98) {\n            return `https://process.filestackapi.com/output=format:png/negative/modulate=brightness:1000/compress/${techno?.handle ||\n                DEFAULT_TECHNO_HANDLE}`;\n        }\n        return `https://process.filestackapi.com/output=format:png/${techno?.handle || DEFAULT_TECHNO_HANDLE}`;\n    }, [techno, theme, backgroundColor]);\n    if (!src || !techno) {\n        return null;\n    }\n    return <img src={src} alt={techno?.name} className={classes.logo} />;\n};\n\nexport const SkillsFront = memo(SkillsFrontComponent);\n"]},"metadata":{},"sourceType":"module"}