{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/animated_underlined_button/animated_underlined_button.jsx\";\nimport React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { animated, useTransition } from 'react-spring';\nimport { useOpenerState } from '../../hooks/use_opener_state';\nimport { ANIMATED_UNDERLINED_BUTTON_TRANSITIONS_SPRING_PROPS } from './animated_underlined_button_spring_props';\nimport { styles } from './animated_underlined_button_styles';\nconst useStyles = createUseStyles(styles);\n\nconst AnimatedUnderlinedButtonComponent = ({\n  color = 'primary',\n  onClick,\n  children\n}) => {\n  const classes = useStyles({\n    color\n  });\n  const [isUnderlineDisplayed, handlers] = useOpenerState({\n    defaultHandlers: {\n      onClick\n    }\n  });\n  const underlineTransitions = useTransition(isUnderlineDisplayed, item => `${item ? 'visible' : 'hidden'}_underline`, ANIMATED_UNDERLINED_BUTTON_TRANSITIONS_SPRING_PROPS);\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    type: \"button\",\n    className: classes.container,\n    onClick: onClick\n  }, handlers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.underlineContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, underlineTransitions.map(({\n    item,\n    key,\n    props\n  }) => item && /*#__PURE__*/React.createElement(animated.div, {\n    key: key,\n    className: classes.underline,\n    style: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }))));\n};\n\nexport const AnimatedUnderlinedButton = AnimatedUnderlinedButtonComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/animated_underlined_button/animated_underlined_button.jsx"],"names":["React","createUseStyles","animated","useTransition","useOpenerState","ANIMATED_UNDERLINED_BUTTON_TRANSITIONS_SPRING_PROPS","styles","useStyles","AnimatedUnderlinedButtonComponent","color","onClick","children","classes","isUnderlineDisplayed","handlers","defaultHandlers","underlineTransitions","item","container","underlineContainer","map","key","props","underline","AnimatedUnderlinedButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,cAAxC;AAEA,SAASC,cAAT,QAA+B,8BAA/B;AAEA,SAASC,mDAAT,QAAoE,2CAApE;AAEA,SAASC,MAAT,QAAuB,qCAAvB;AAEA,MAAMC,SAAS,GAAGN,eAAe,CAACK,MAAD,CAAjC;;AAEA,MAAME,iCAAiC,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,SAAV;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA;AAA9B,CAAD,KAA8C;AACpF,QAAMC,OAAO,GAAGL,SAAS,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAAzB;AACA,QAAM,CAACI,oBAAD,EAAuBC,QAAvB,IAAmCV,cAAc,CAAC;AACpDW,IAAAA,eAAe,EAAE;AAAEL,MAAAA;AAAF;AADmC,GAAD,CAAvD;AAIA,QAAMM,oBAAoB,GAAGb,aAAa,CACtCU,oBADsC,EAEtCI,IAAI,IAAK,GAAEA,IAAI,GAAG,SAAH,GAAe,QAAS,YAFD,EAGtCZ,mDAHsC,CAA1C;AAMA,sBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAEO,OAAO,CAACM,SAAzC;AAAoD,IAAA,OAAO,EAAER;AAA7D,KAA0EI,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKH,QADL,eAEI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACO,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,oBAAoB,CAACI,GAArB,CACG,CAAC;AAAEH,IAAAA,IAAF;AAAQI,IAAAA,GAAR;AAAaC,IAAAA;AAAb,GAAD,KACIL,IAAI,iBAAI,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,GAAG,EAAEI,GAAnB;AAAwB,IAAA,SAAS,EAAET,OAAO,CAACW,SAA3C;AAAsD,IAAA,KAAK,EAAED,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,CADL,CAFJ,CADJ;AAWH,CAvBD;;AAyBA,OAAO,MAAME,wBAAwB,GAAGhB,iCAAjC","sourcesContent":["import React from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { animated, useTransition } from 'react-spring';\n\nimport { useOpenerState } from '../../hooks/use_opener_state';\n\nimport { ANIMATED_UNDERLINED_BUTTON_TRANSITIONS_SPRING_PROPS } from './animated_underlined_button_spring_props';\n\nimport { styles } from './animated_underlined_button_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst AnimatedUnderlinedButtonComponent = ({ color = 'primary', onClick, children }) => {\n    const classes = useStyles({ color });\n    const [isUnderlineDisplayed, handlers] = useOpenerState({\n        defaultHandlers: { onClick }\n    });\n\n    const underlineTransitions = useTransition(\n        isUnderlineDisplayed,\n        item => `${item ? 'visible' : 'hidden'}_underline`,\n        ANIMATED_UNDERLINED_BUTTON_TRANSITIONS_SPRING_PROPS\n    );\n\n    return (\n        <button type=\"button\" className={classes.container} onClick={onClick} {...handlers}>\n            {children}\n            <div className={classes.underlineContainer}>\n                {underlineTransitions.map(\n                    ({ item, key, props }) =>\n                        item && <animated.div key={key} className={classes.underline} style={props} />\n                )}\n            </div>\n        </button>\n    );\n};\n\nexport const AnimatedUnderlinedButton = AnimatedUnderlinedButtonComponent;\n"]},"metadata":{},"sourceType":"module"}