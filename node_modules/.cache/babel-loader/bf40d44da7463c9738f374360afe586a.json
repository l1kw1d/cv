{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_title/project_dialog_content_title.jsx\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { TextField, Typography } from '@wld/ui';\nimport { useFormikContext } from 'formik';\nimport { styles } from './project_dialog_content_title_styles';\nconst useStyles = createUseStyles(styles);\n\nconst ProjectDialogContentTitleComponent = ({\n  title,\n  isEditing\n}) => {\n  const classes = useStyles({\n    isEditing\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    title: title,\n    isEditing: isEditing,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Content = ({\n  title,\n  isEditing,\n  classes\n}) => {\n  if (isEditing) {\n    return /*#__PURE__*/React.createElement(EditingContent, {\n      title: title,\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultContent, {\n    title: title,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  });\n};\n\nconst DefaultContent = ({\n  title,\n  classes\n}) => /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h2\",\n  component: \"h3\",\n  customClasses: {\n    container: classes.typography\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, title);\n\nconst EditingContent = ({\n  classes\n}) => {\n  const {\n    handleChange,\n    values,\n    errors\n  } = useFormikContext();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"label\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Projects.dialog.content.title\",\n    defaultMessage: \"Project title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"flat\",\n    onChange: handleChange,\n    name: \"name\",\n    value: values.name,\n    customClasses: {\n      container: classes.textField\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), (errors === null || errors === void 0 ? void 0 : errors.name) && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, errors.name));\n};\n\nexport const ProjectDialogContentTitle = ProjectDialogContentTitleComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_title/project_dialog_content_title.jsx"],"names":["React","FormattedMessage","createUseStyles","TextField","Typography","useFormikContext","styles","useStyles","ProjectDialogContentTitleComponent","title","isEditing","classes","container","Content","DefaultContent","typography","EditingContent","handleChange","values","errors","name","textField","ProjectDialogContentTitle"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { TextField, Typography } from '@wld/ui';\nimport { useFormikContext } from 'formik';\nimport { styles } from './project_dialog_content_title_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProjectDialogContentTitleComponent = ({ title, isEditing }) => {\n    const classes = useStyles({ isEditing });\n    return (\n        <div className={classes.container}>\n            <Content title={title} isEditing={isEditing} classes={classes} />\n        </div>\n    );\n};\n\nconst Content = ({ title, isEditing, classes }) => {\n    if (isEditing) {\n        return <EditingContent title={title} classes={classes} />;\n    }\n    return <DefaultContent title={title} classes={classes} />;\n};\n\nconst DefaultContent = ({ title, classes }) => (\n    <Typography variant=\"h2\" component=\"h3\" customClasses={{ container: classes.typography }}>\n        {title}\n    </Typography>\n);\n\nconst EditingContent = ({ classes }) => {\n    const { handleChange, values, errors } = useFormikContext();\n\n    return (\n        <>\n            <Typography variant=\"label\" component=\"div\">\n                <FormattedMessage id=\"Projects.dialog.content.title\" defaultMessage=\"Project title\" />\n            </Typography>\n            <TextField\n                fullWidth\n                variant=\"flat\"\n                onChange={handleChange}\n                name=\"name\"\n                value={values.name}\n                customClasses={{\n                    container: classes.textField\n                }}\n            />\n            {errors?.name && (\n                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                    {errors.name}\n                </Typography>\n            )}\n        </>\n    );\n};\n\nexport const ProjectDialogContentTitle = ProjectDialogContentTitleComponent;\n"]},"metadata":{},"sourceType":"module"}