{"ast":null,"code":"import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { languagesTranslations } from './validator_translations';\nexport const LanguageValidator = formatMessage => Yup.object().shape({\n  languages: Yup.array().of(Yup.object().transform(value => ({ ...value,\n    stillEmployed: !value.endDate\n  })).shape({\n    language: Yup.string().required(formatMessage(validationTranslations.required)).min(2, formatMessage(validationTranslations.minNumber, {\n      min: 2\n    })),\n    value: Yup.number().required(formatMessage(validationTranslations.required)).min(0, formatMessage(validationTranslations.minNumber, {\n      min: 0\n    })).max(100, formatMessage(validationTranslations.maxNumber, {\n      max: 100\n    }))\n  })).required(formatMessage(languagesTranslations.atLeastOne))\n});\nexport const validateLanguagesComplete = data => {\n  try {\n    Yup.object({\n      languages: Yup.array().required().min(1)\n    }).validateSync(data);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/languages/data/validator.js"],"names":["Yup","validationTranslations","languagesTranslations","LanguageValidator","formatMessage","object","shape","languages","array","of","transform","value","stillEmployed","endDate","language","string","required","min","minNumber","number","max","maxNumber","atLeastOne","validateLanguagesComplete","data","validateSync","e"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,sBAAT,QAAuC,8CAAvC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AAEA,OAAO,MAAMC,iBAAiB,GAAGC,aAAa,IAC1CJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACfC,EAAAA,SAAS,EAAEP,GAAG,CAACQ,KAAJ,GACNC,EADM,CAEHT,GAAG,CAACK,MAAJ,GACKK,SADL,CACeC,KAAK,KAAK,EAAE,GAAGA,KAAL;AAAYC,IAAAA,aAAa,EAAE,CAACD,KAAK,CAACE;AAAlC,GAAL,CADpB,EAEKP,KAFL,CAEW;AACHQ,IAAAA,QAAQ,EAAEd,GAAG,CAACe,MAAJ,GACLC,QADK,CACIZ,aAAa,CAACH,sBAAsB,CAACe,QAAxB,CADjB,EAELC,GAFK,CAED,CAFC,EAEEb,aAAa,CAACH,sBAAsB,CAACiB,SAAxB,EAAmC;AAAED,MAAAA,GAAG,EAAE;AAAP,KAAnC,CAFf,CADP;AAIHN,IAAAA,KAAK,EAAEX,GAAG,CAACmB,MAAJ,GACFH,QADE,CACOZ,aAAa,CAACH,sBAAsB,CAACe,QAAxB,CADpB,EAEFC,GAFE,CAEE,CAFF,EAEKb,aAAa,CAACH,sBAAsB,CAACiB,SAAxB,EAAmC;AAAED,MAAAA,GAAG,EAAE;AAAP,KAAnC,CAFlB,EAGFG,GAHE,CAGE,GAHF,EAGOhB,aAAa,CAACH,sBAAsB,CAACoB,SAAxB,EAAmC;AAAED,MAAAA,GAAG,EAAE;AAAP,KAAnC,CAHpB;AAJJ,GAFX,CAFG,EAcNJ,QAdM,CAcGZ,aAAa,CAACF,qBAAqB,CAACoB,UAAvB,CAdhB;AADI,CAAnB,CADG;AAmBP,OAAO,MAAMC,yBAAyB,GAAGC,IAAI,IAAI;AAC7C,MAAI;AACAxB,IAAAA,GAAG,CAACK,MAAJ,CAAW;AACPE,MAAAA,SAAS,EAAEP,GAAG,CAACQ,KAAJ,GACNQ,QADM,GAENC,GAFM,CAEF,CAFE;AADJ,KAAX,EAIGQ,YAJH,CAIgBD,IAJhB;AAKH,GAND,CAME,OAAOE,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CAXM","sourcesContent":["import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { languagesTranslations } from './validator_translations';\n\nexport const LanguageValidator = formatMessage =>\n    Yup.object().shape({\n        languages: Yup.array()\n            .of(\n                Yup.object()\n                    .transform(value => ({ ...value, stillEmployed: !value.endDate }))\n                    .shape({\n                        language: Yup.string()\n                            .required(formatMessage(validationTranslations.required))\n                            .min(2, formatMessage(validationTranslations.minNumber, { min: 2 })),\n                        value: Yup.number()\n                            .required(formatMessage(validationTranslations.required))\n                            .min(0, formatMessage(validationTranslations.minNumber, { min: 0 }))\n                            .max(100, formatMessage(validationTranslations.maxNumber, { max: 100 }))\n                    })\n            )\n            .required(formatMessage(languagesTranslations.atLeastOne))\n    });\n\nexport const validateLanguagesComplete = data => {\n    try {\n        Yup.object({\n            languages: Yup.array()\n                .required()\n                .min(1)\n        }).validateSync(data);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}