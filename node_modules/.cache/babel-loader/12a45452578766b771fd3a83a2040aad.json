{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/gifs/gifs_edit_dialog/gifs_edit_form/gifs_sortable_cards/gifs_sortable_cards.jsx\";\nimport React, { useCallback } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport { GifCard } from '../gif_card/gif_card';\nimport { BouncingRoundButton } from '../../../../../../commons/bouncing_round_button/bouncing_round_button';\nimport { ReactComponent as MoveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../../assets/icons/move.svg\";\nimport { styles } from './gifs_sortable_cards_styles';\nconst useStyles = createUseStyles(styles);\n\nconst GifsSortableCardsComponent = ({\n  items = [],\n  interestDeleted,\n  interestChanged,\n  errors,\n  setSelectedIndex,\n  onSortEnd\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(SortableGifsCards, {\n    useDragHandle: true,\n    axis: \"xy\",\n    items: items,\n    interestDeleted: interestDeleted,\n    interestChanged: interestChanged,\n    errors: errors,\n    setSelectedIndex: setSelectedIndex,\n    onSortEnd: onSortEnd,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  });\n};\n\nconst SortableGifsCards = SortableContainer(({\n  items = [],\n  interestDeleted,\n  interestChanged,\n  errors,\n  setSelectedIndex,\n  classes\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  className: classes.list,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }\n}, items.filter(Boolean).sort(({\n  index: a\n}, {\n  index: b\n}) => a - b).map((interest, index) => /*#__PURE__*/React.createElement(SortableGifItem, {\n  index: index,\n  key: `interest_${interest.id}_${index}`,\n  onChange: interestChanged,\n  onRemove: interestDeleted,\n  setSelectedIndex: setSelectedIndex,\n  id: interest.id,\n  interest: interest,\n  error: errors === null || errors === void 0 ? void 0 : errors[index],\n  interestIndex: index,\n  classes: classes,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }\n}))));\nconst DragHandle = SortableHandle(() => /*#__PURE__*/React.createElement(BouncingRoundButton, {\n  title: \"Hold me to drag this card!\",\n  icon: MoveIcon,\n  tooltipPlacement: \"bottom\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }\n}));\nconst SortableGifItem = SortableElement(({\n  id,\n  interest,\n  onChange,\n  onRemove,\n  error: fieldErrors,\n  interestIndex: index,\n  setSelectedIndex,\n  classes\n}) => {\n  const handleRemove = useCallback(() => onRemove(id), [id, onRemove]);\n  const handleChange = useCallback(field => value => onChange(index, field, value), [onChange]);\n  const handleImageEditClick = useCallback(() => setSelectedIndex(index), []);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.listItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GifCard, {\n    imageEditable: true,\n    gifUrl: interest === null || interest === void 0 ? void 0 : interest.gifUrl,\n    name: interest === null || interest === void 0 ? void 0 : interest.name,\n    onChange: handleChange,\n    onRemove: handleRemove,\n    onImageEditClick: handleImageEditClick,\n    error: fieldErrors,\n    additionalActions: /*#__PURE__*/React.createElement(DragHandle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }));\n});\nexport const GifsSortableCards = GifsSortableCardsComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/gifs/gifs_edit_dialog/gifs_edit_form/gifs_sortable_cards/gifs_sortable_cards.jsx"],"names":["React","useCallback","createUseStyles","SortableContainer","SortableElement","SortableHandle","GifCard","BouncingRoundButton","styles","useStyles","GifsSortableCardsComponent","items","interestDeleted","interestChanged","errors","setSelectedIndex","onSortEnd","classes","SortableGifsCards","list","filter","Boolean","sort","index","a","b","map","interest","id","DragHandle","MoveIcon","SortableGifItem","onChange","onRemove","error","fieldErrors","interestIndex","handleRemove","handleChange","field","value","handleImageEditClick","listItem","gifUrl","name","GifsSortableCards"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\n\nimport { GifCard } from '../gif_card/gif_card';\nimport { BouncingRoundButton } from '../../../../../../commons/bouncing_round_button/bouncing_round_button';\n\nimport { ReactComponent as MoveIcon } from '../../../../../../../assets/icons/move.svg';\n\nimport { styles } from './gifs_sortable_cards_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst GifsSortableCardsComponent = ({\n    items = [],\n    interestDeleted,\n    interestChanged,\n    errors,\n    setSelectedIndex,\n    onSortEnd\n}) => {\n    const classes = useStyles();\n    return (\n        <SortableGifsCards\n            useDragHandle\n            axis=\"xy\"\n            items={items}\n            interestDeleted={interestDeleted}\n            interestChanged={interestChanged}\n            errors={errors}\n            setSelectedIndex={setSelectedIndex}\n            onSortEnd={onSortEnd}\n            classes={classes}\n        />\n    );\n};\n\nconst SortableGifsCards = SortableContainer(\n    ({ items = [], interestDeleted, interestChanged, errors, setSelectedIndex, classes }) => (\n        <ul className={classes.list}>\n            {items\n                .filter(Boolean)\n                .sort(({ index: a }, { index: b }) => a - b)\n                .map((interest, index) => (\n                    <SortableGifItem\n                        index={index}\n                        key={`interest_${interest.id}_${index}`}\n                        onChange={interestChanged}\n                        onRemove={interestDeleted}\n                        setSelectedIndex={setSelectedIndex}\n                        id={interest.id}\n                        interest={interest}\n                        error={errors?.[index]}\n                        interestIndex={index}\n                        classes={classes}\n                    />\n                ))}\n        </ul>\n    )\n);\n\nconst DragHandle = SortableHandle(() => (\n    <BouncingRoundButton title=\"Hold me to drag this card!\" icon={MoveIcon} tooltipPlacement=\"bottom\" />\n));\n\nconst SortableGifItem = SortableElement(\n    ({ id, interest, onChange, onRemove, error: fieldErrors, interestIndex: index, setSelectedIndex, classes }) => {\n        const handleRemove = useCallback(() => onRemove(id), [id, onRemove]);\n        const handleChange = useCallback(field => value => onChange(index, field, value), [onChange]);\n        const handleImageEditClick = useCallback(() => setSelectedIndex(index), []);\n        return (\n            <li className={classes.listItem}>\n                <GifCard\n                    imageEditable\n                    gifUrl={interest?.gifUrl}\n                    name={interest?.name}\n                    onChange={handleChange}\n                    onRemove={handleRemove}\n                    onImageEditClick={handleImageEditClick}\n                    error={fieldErrors}\n                    additionalActions={<DragHandle />}\n                />\n            </li>\n        );\n    }\n);\n\nexport const GifsSortableCards = GifsSortableCardsComponent;\n"]},"metadata":{},"sourceType":"module"}