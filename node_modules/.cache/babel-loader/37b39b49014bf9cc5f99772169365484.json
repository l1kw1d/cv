{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/skills/skills_back/utils/skills_back_recharts_utils.jsx\";\nimport React, { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { styles } from './skills_back_recharts_styles';\nimport { useTechnologies } from '../../../../../hooks/technologies/use_technologies';\nimport { getColorsFromCardVariant, getHexFromPaletteColor } from '../../../../../../utils/styles/styles_utils';\nimport { useCardVariant } from '../../../../../hooks/profile_card_hooks/use_card_variant';\nimport { DEFAULT_TECHNO_HANDLE } from '../../../../../../utils/icons';\nconst useStyles = createUseStyles(styles);\n\nconst CustomLabel = props => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const [variant] = useCardVariant();\n  const {\n    backgroundColor\n  } = getColorsFromCardVariant(theme, variant);\n  const {\n    technologies\n  } = useTechnologies();\n  const {\n    cx,\n    cy,\n    midAngle,\n    customColor,\n    outerRadius,\n    name\n  } = props;\n  const techno = useMemo(() => {\n    if (!technologies) {\n      return null;\n    }\n\n    return technologies[name];\n  }, [technologies, name]);\n  const src = useMemo(() => {\n    const hex = getHexFromPaletteColor(theme, backgroundColor);\n    const luminance = chroma(hex).luminance();\n\n    if (luminance < 0.98) {\n      return `https://process.filestackapi.com/output=format:png/negative/modulate=brightness:1000/compress/${(techno === null || techno === void 0 ? void 0 : techno.handle) || DEFAULT_TECHNO_HANDLE}`;\n    }\n\n    return `https://process.filestackapi.com/output=format:png/${(techno === null || techno === void 0 ? void 0 : techno.handle) || DEFAULT_TECHNO_HANDLE}`;\n  }, [techno, theme, backgroundColor]);\n  const {\n    cos,\n    startX,\n    startY,\n    inflexionX,\n    inflexionY,\n    endX,\n    endY,\n    textAnchor,\n    logoXOffset\n  } = useMemo(() => {\n    const RADIAN = Math.PI / 180;\n    const textOffset = name.length * 4.5;\n    const sinLocal = Math.sin(-RADIAN * midAngle);\n    const cosLocal = Math.cos(-RADIAN * midAngle);\n    const startXLocal = cx + outerRadius * cosLocal;\n    const startYLocal = cy + outerRadius * sinLocal;\n    const inflexionXLocal = cx + (outerRadius + 20) * cosLocal;\n    const inflexionYLocal = cy + (outerRadius + 20) * sinLocal;\n    const endXLocal = inflexionXLocal + (cosLocal >= 0 ? 1 : -1) * 25;\n    return {\n      cos: cosLocal,\n      startX: startXLocal,\n      startY: startYLocal,\n      inflexionX: inflexionXLocal,\n      inflexionY: inflexionYLocal,\n      endX: endXLocal,\n      endY: inflexionYLocal,\n      textAnchor: cosLocal >= 0 ? 'start' : 'end',\n      logoXOffset: cosLocal >= 0 ? textOffset - 12.5 : -textOffset - 12.5\n    };\n  }, [midAngle, outerRadius, cx, cy]);\n  return /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: `M${startX},${startY}L${inflexionX},${inflexionY}L${endX},${endY}`,\n    stroke: customColor,\n    fill: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    transform: `translate(${endX + (cos >= 0 ? 1 : -1) * 8},${endY - 10})`,\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"image\", {\n    width: \"25\",\n    height: \"25\",\n    xlinkHref: src,\n    y: \"-10\",\n    transform: `translate(${logoXOffset},-6)`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"text\", {\n    textAnchor: textAnchor,\n    fill: customColor,\n    fontWeight: \"500\",\n    className: classes.text,\n    transform: \"translate(0, 29)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, name))));\n};\n\nexport { CustomLabel };","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/skills/skills_back/utils/skills_back_recharts_utils.jsx"],"names":["React","useMemo","chroma","createUseStyles","useTheme","styles","useTechnologies","getColorsFromCardVariant","getHexFromPaletteColor","useCardVariant","DEFAULT_TECHNO_HANDLE","useStyles","CustomLabel","props","theme","classes","variant","backgroundColor","technologies","cx","cy","midAngle","customColor","outerRadius","name","techno","src","hex","luminance","handle","cos","startX","startY","inflexionX","inflexionY","endX","endY","textAnchor","logoXOffset","RADIAN","Math","PI","textOffset","length","sinLocal","sin","cosLocal","startXLocal","startYLocal","inflexionXLocal","inflexionYLocal","endXLocal","text"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\n\nimport chroma from 'chroma-js';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { styles } from './skills_back_recharts_styles';\nimport { useTechnologies } from '../../../../../hooks/technologies/use_technologies';\nimport { getColorsFromCardVariant, getHexFromPaletteColor } from '../../../../../../utils/styles/styles_utils';\nimport { useCardVariant } from '../../../../../hooks/profile_card_hooks/use_card_variant';\nimport { DEFAULT_TECHNO_HANDLE } from '../../../../../../utils/icons';\n\nconst useStyles = createUseStyles(styles);\n\nconst CustomLabel = props => {\n    const theme = useTheme();\n    const classes = useStyles();\n    const [variant] = useCardVariant();\n    const { backgroundColor } = getColorsFromCardVariant(theme, variant);\n    const { technologies } = useTechnologies();\n    const { cx, cy, midAngle, customColor, outerRadius, name } = props;\n\n    const techno = useMemo(() => {\n        if (!technologies) {\n            return null;\n        }\n        return technologies[name];\n    }, [technologies, name]);\n\n    const src = useMemo(() => {\n        const hex = getHexFromPaletteColor(theme, backgroundColor);\n        const luminance = chroma(hex).luminance();\n        if (luminance < 0.98) {\n            return `https://process.filestackapi.com/output=format:png/negative/modulate=brightness:1000/compress/${techno?.handle ||\n                DEFAULT_TECHNO_HANDLE}`;\n        }\n        return `https://process.filestackapi.com/output=format:png/${techno?.handle || DEFAULT_TECHNO_HANDLE}`;\n    }, [techno, theme, backgroundColor]);\n\n    const { cos, startX, startY, inflexionX, inflexionY, endX, endY, textAnchor, logoXOffset } = useMemo(() => {\n        const RADIAN = Math.PI / 180;\n        const textOffset = name.length * 4.5;\n        const sinLocal = Math.sin(-RADIAN * midAngle);\n        const cosLocal = Math.cos(-RADIAN * midAngle);\n        const startXLocal = cx + outerRadius * cosLocal;\n        const startYLocal = cy + outerRadius * sinLocal;\n        const inflexionXLocal = cx + (outerRadius + 20) * cosLocal;\n        const inflexionYLocal = cy + (outerRadius + 20) * sinLocal;\n        const endXLocal = inflexionXLocal + (cosLocal >= 0 ? 1 : -1) * 25;\n        return {\n            cos: cosLocal,\n            startX: startXLocal,\n            startY: startYLocal,\n            inflexionX: inflexionXLocal,\n            inflexionY: inflexionYLocal,\n            endX: endXLocal,\n            endY: inflexionYLocal,\n            textAnchor: cosLocal >= 0 ? 'start' : 'end',\n            logoXOffset: cosLocal >= 0 ? textOffset - 12.5 : -textOffset - 12.5\n        };\n    }, [midAngle, outerRadius, cx, cy]);\n\n    return (\n        <g>\n            <g>\n                <path\n                    d={`M${startX},${startY}L${inflexionX},${inflexionY}L${endX},${endY}`}\n                    stroke={customColor}\n                    fill=\"none\"\n                />\n                <g transform={`translate(${endX + (cos >= 0 ? 1 : -1) * 8},${endY - 10})`} width=\"100\">\n                    <image width=\"25\" height=\"25\" xlinkHref={src} y=\"-10\" transform={`translate(${logoXOffset},-6)`} />\n                    <text\n                        textAnchor={textAnchor}\n                        fill={customColor}\n                        fontWeight=\"500\"\n                        className={classes.text}\n                        transform=\"translate(0, 29)\"\n                    >\n                        {name}\n                    </text>\n                </g>\n            </g>\n        </g>\n    );\n};\n\nexport { CustomLabel };\n"]},"metadata":{},"sourceType":"module"}