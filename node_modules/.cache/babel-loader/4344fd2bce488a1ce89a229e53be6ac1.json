{"ast":null,"code":"import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { studiesTranslations } from './validator_translations';\nexport const StudiesValidator = formatMessage => Yup.object().shape({\n  education: Yup.array().of(Yup.object({\n    institution: Yup.string().required(formatMessage(validationTranslations.required)),\n    studyType: Yup.string().required(formatMessage(validationTranslations.required)),\n    area: Yup.string().required(formatMessage(validationTranslations.required)),\n    endDate: Yup.object().test('is-not-empty', formatMessage(validationTranslations.required), value => !!value && !Number.isNaN(Number(value.year())))\n  })).required(formatMessage(studiesTranslations.atLeastOne))\n});\nexport const validateStudiesComplete = data => {\n  try {\n    Yup.object({\n      education: Yup.array().required().min(1)\n    }).validateSync(data);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/data/validator.js"],"names":["Yup","validationTranslations","studiesTranslations","StudiesValidator","formatMessage","object","shape","education","array","of","institution","string","required","studyType","area","endDate","test","value","Number","isNaN","year","atLeastOne","validateStudiesComplete","data","min","validateSync","e"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,sBAAT,QAAuC,8CAAvC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,MAAMC,gBAAgB,GAAGC,aAAa,IACzCJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACfC,EAAAA,SAAS,EAAEP,GAAG,CAACQ,KAAJ,GACNC,EADM,CAEHT,GAAG,CAACK,MAAJ,CAAW;AACPK,IAAAA,WAAW,EAAEV,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsBR,aAAa,CAACH,sBAAsB,CAACW,QAAxB,CAAnC,CADN;AAEPC,IAAAA,SAAS,EAAEb,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsBR,aAAa,CAACH,sBAAsB,CAACW,QAAxB,CAAnC,CAFJ;AAGPE,IAAAA,IAAI,EAAEd,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsBR,aAAa,CAACH,sBAAsB,CAACW,QAAxB,CAAnC,CAHC;AAIPG,IAAAA,OAAO,EAAEf,GAAG,CAACK,MAAJ,GAAaW,IAAb,CACL,cADK,EAELZ,aAAa,CAACH,sBAAsB,CAACW,QAAxB,CAFR,EAGLK,KAAK,IAAI,CAAC,CAACA,KAAF,IAAW,CAACC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACD,KAAK,CAACG,IAAN,EAAD,CAAnB,CAHhB;AAJF,GAAX,CAFG,EAaNR,QAbM,CAaGR,aAAa,CAACF,mBAAmB,CAACmB,UAArB,CAbhB;AADI,CAAnB,CADG;AAkBP,OAAO,MAAMC,uBAAuB,GAAGC,IAAI,IAAI;AAC3C,MAAI;AACAvB,IAAAA,GAAG,CAACK,MAAJ,CAAW;AACPE,MAAAA,SAAS,EAAEP,GAAG,CAACQ,KAAJ,GACNI,QADM,GAENY,GAFM,CAEF,CAFE;AADJ,KAAX,EAIGC,YAJH,CAIgBF,IAJhB;AAKH,GAND,CAME,OAAOG,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CAXM","sourcesContent":["import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { studiesTranslations } from './validator_translations';\n\nexport const StudiesValidator = formatMessage =>\n    Yup.object().shape({\n        education: Yup.array()\n            .of(\n                Yup.object({\n                    institution: Yup.string().required(formatMessage(validationTranslations.required)),\n                    studyType: Yup.string().required(formatMessage(validationTranslations.required)),\n                    area: Yup.string().required(formatMessage(validationTranslations.required)),\n                    endDate: Yup.object().test(\n                        'is-not-empty',\n                        formatMessage(validationTranslations.required),\n                        value => !!value && !Number.isNaN(Number(value.year()))\n                    )\n                })\n            )\n            .required(formatMessage(studiesTranslations.atLeastOne))\n    });\n\nexport const validateStudiesComplete = data => {\n    try {\n        Yup.object({\n            education: Yup.array()\n                .required()\n                .min(1)\n        }).validateSync(data);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}