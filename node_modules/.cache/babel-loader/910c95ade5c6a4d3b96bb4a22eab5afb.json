{"ast":null,"code":"import { useCallback, useMemo, useState } from 'react';\nimport { useMediaQuery } from '@material-ui/core';\nexport const useOpenerState = ({\n  mobileWidth = 560,\n  useClickOnMobile,\n  defaultHandlers\n} = {}) => {\n  const [open, setOpen] = useState(false);\n  const setOpened = useCallback(() => setOpen(true), []);\n  const setClosed = useCallback(() => setOpen(false), []);\n  const toggle = useCallback(() => setOpen(!open), [open]);\n  const handleClick = useCallback(() => {\n    if (typeof defaultHandlers.onClick === 'function') {\n      defaultHandlers.onClick();\n    }\n\n    toggle();\n  }, [defaultHandlers, toggle]);\n  const isMobile = useMediaQuery(`(max-width: ${mobileWidth}px)`, {\n    defaultMatches: true\n  });\n  const eventsHandlerElementProps = useMemo(() => ({ ...(isMobile && useClickOnMobile && {\n      onClick: handleClick\n    }),\n    ...((!isMobile || !useClickOnMobile) && {\n      onMouseEnter: setOpened,\n      onMouseLeave: setClosed,\n      onFocus: setOpened,\n      onBlur: setClosed\n    })\n  }), [isMobile, setOpened, setClosed, toggle]);\n  return [open, eventsHandlerElementProps, {\n    setOpened,\n    setClosed,\n    toggle\n  }];\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/hooks/use_opener_state.js"],"names":["useCallback","useMemo","useState","useMediaQuery","useOpenerState","mobileWidth","useClickOnMobile","defaultHandlers","open","setOpen","setOpened","setClosed","toggle","handleClick","onClick","isMobile","defaultMatches","eventsHandlerElementProps","onMouseEnter","onMouseLeave","onFocus","onBlur"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG,GAAhB;AAAqBC,EAAAA,gBAArB;AAAuCC,EAAAA;AAAvC,IAA2D,EAA5D,KAAmE;AAC7F,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMQ,SAAS,GAAGV,WAAW,CAAC,MAAMS,OAAO,CAAC,IAAD,CAAd,EAAsB,EAAtB,CAA7B;AACA,QAAME,SAAS,GAAGX,WAAW,CAAC,MAAMS,OAAO,CAAC,KAAD,CAAd,EAAuB,EAAvB,CAA7B;AACA,QAAMG,MAAM,GAAGZ,WAAW,CAAC,MAAMS,OAAO,CAAC,CAACD,IAAF,CAAd,EAAuB,CAACA,IAAD,CAAvB,CAA1B;AACA,QAAMK,WAAW,GAAGb,WAAW,CAAC,MAAM;AAClC,QAAI,OAAOO,eAAe,CAACO,OAAvB,KAAmC,UAAvC,EAAmD;AAC/CP,MAAAA,eAAe,CAACO,OAAhB;AACH;;AACDF,IAAAA,MAAM;AACT,GAL8B,EAK5B,CAACL,eAAD,EAAkBK,MAAlB,CAL4B,CAA/B;AAMA,QAAMG,QAAQ,GAAGZ,aAAa,CAAE,eAAcE,WAAY,KAA5B,EAAkC;AAAEW,IAAAA,cAAc,EAAE;AAAlB,GAAlC,CAA9B;AACA,QAAMC,yBAAyB,GAAGhB,OAAO,CACrC,OAAO,EACH,IAAIc,QAAQ,IACRT,gBADA,IACoB;AAChBQ,MAAAA,OAAO,EAAED;AADO,KADxB,CADG;AAKH,QAAI,CAAC,CAACE,QAAD,IAAa,CAACT,gBAAf,KAAoC;AACpCY,MAAAA,YAAY,EAAER,SADsB;AAEpCS,MAAAA,YAAY,EAAER,SAFsB;AAGpCS,MAAAA,OAAO,EAAEV,SAH2B;AAIpCW,MAAAA,MAAM,EAAEV;AAJ4B,KAAxC;AALG,GAAP,CADqC,EAarC,CAACI,QAAD,EAAWL,SAAX,EAAsBC,SAAtB,EAAiCC,MAAjC,CAbqC,CAAzC;AAgBA,SAAO,CAACJ,IAAD,EAAOS,yBAAP,EAAkC;AAAEP,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAlC,CAAP;AACH,CA7BM","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\n\nimport { useMediaQuery } from '@material-ui/core';\n\nexport const useOpenerState = ({ mobileWidth = 560, useClickOnMobile, defaultHandlers } = {}) => {\n    const [open, setOpen] = useState(false);\n    const setOpened = useCallback(() => setOpen(true), []);\n    const setClosed = useCallback(() => setOpen(false), []);\n    const toggle = useCallback(() => setOpen(!open), [open]);\n    const handleClick = useCallback(() => {\n        if (typeof defaultHandlers.onClick === 'function') {\n            defaultHandlers.onClick();\n        }\n        toggle();\n    }, [defaultHandlers, toggle]);\n    const isMobile = useMediaQuery(`(max-width: ${mobileWidth}px)`, { defaultMatches: true });\n    const eventsHandlerElementProps = useMemo(\n        () => ({\n            ...(isMobile &&\n                useClickOnMobile && {\n                    onClick: handleClick\n                }),\n            ...((!isMobile || !useClickOnMobile) && {\n                onMouseEnter: setOpened,\n                onMouseLeave: setClosed,\n                onFocus: setOpened,\n                onBlur: setClosed\n            })\n        }),\n        [isMobile, setOpened, setClosed, toggle]\n    );\n\n    return [open, eventsHandlerElementProps, { setOpened, setClosed, toggle }];\n};\n"]},"metadata":{},"sourceType":"module"}