{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/file_drop_zone/file_drop_zone.jsx\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useDropzone } from 'react-dropzone';\nimport { Typography } from '@wld/ui';\nimport { LoadingSpinner } from '../loading_spinner/loading_spinner';\nimport { ReactComponent as DropFileIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/drop_file.svg\";\nimport { ReactComponent as SuccessIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/success.svg\";\nimport { ReactComponent as RemoveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/icons/remove_circle.svg\";\nimport { styles } from './file_drop_zone_styles';\nconst useStyles = createUseStyles(styles);\n\nconst DEFAULT_ON_DROP = () => {\n  throw new Error('Did not provide a valid onDrop function.');\n};\n\nconst FileDropZoneComponent = ({\n  onDrop = DEFAULT_ON_DROP\n}) => {\n  const classes = useStyles();\n  const [fileUrl, setFileUrl] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    waiting,\n    loading,\n    success\n  } = useMemo(() => ({\n    waiting: fileUrl === false,\n    loading: fileUrl === null,\n    success: Boolean(fileUrl)\n  }), [fileUrl]);\n  const handleDrop = useCallback(async parameters => {\n    if (typeof onDrop !== 'function') {\n      return;\n    }\n\n    setFileUrl(null);\n\n    try {\n      const url = await onDrop(parameters);\n      setFileUrl(url);\n    } catch (e) {\n      console.warn('Failed to drop file', e);\n      setFileUrl(false);\n      setError(e);\n    }\n  }, [onDrop]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop: handleDrop\n  });\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    className: classes.container,\n    type: \"button\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    waiting: waiting,\n    loading: loading,\n    error: error,\n    success: success,\n    getInputProps: getInputProps,\n    isDragActive: isDragActive,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Content = ({\n  waiting,\n  loading,\n  error,\n  success,\n  getInputProps,\n  isDragActive,\n  classes\n}) => {\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    waiting: waiting,\n    error: error,\n    success: success,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    waiting: waiting,\n    error: error,\n    success: success,\n    isDragActive: isDragActive,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Icon = ({\n  waiting,\n  error,\n  success,\n  classes\n}) => {\n  if (error) {\n    return /*#__PURE__*/React.createElement(RemoveIcon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (waiting) {\n    return /*#__PURE__*/React.createElement(DropFileIcon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    });\n  }\n\n  if (success) {\n    return /*#__PURE__*/React.createElement(SuccessIcon, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return null;\n};\n\nconst Label = ({\n  waiting,\n  error,\n  success,\n  isDragActive,\n  classes\n}) => {\n  let text = null;\n\n  if (isDragActive) {\n    text = 'Release the cracken!';\n  } else if (error) {\n    text = 'An error occurred.';\n  } else if (success) {\n    text = 'File successfully uploaded!';\n  } else if (waiting) {\n    text = \"Drag'n drop files or click here.\";\n  }\n\n  return /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.typography\n    },\n    variant: \"h4\",\n    component: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, text);\n};\n\nexport const FileDropZone = FileDropZoneComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/file_drop_zone/file_drop_zone.jsx"],"names":["React","useCallback","useMemo","useState","createUseStyles","useDropzone","Typography","LoadingSpinner","styles","useStyles","DEFAULT_ON_DROP","Error","FileDropZoneComponent","onDrop","classes","fileUrl","setFileUrl","error","setError","waiting","loading","success","Boolean","handleDrop","parameters","url","e","console","warn","getRootProps","getInputProps","isDragActive","container","Content","Icon","icon","Label","text","typography","FileDropZone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AAEA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SAASC,cAAT,QAA+B,oCAA/B;;;;AAMA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,MAAMC,SAAS,GAAGL,eAAe,CAACI,MAAD,CAAjC;;AAEA,MAAME,eAAe,GAAG,MAAM;AAC1B,QAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACH,CAFD;;AAIA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAGH;AAAX,CAAD,KAAkC;AAC5D,QAAMI,OAAO,GAAGL,SAAS,EAAzB;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM;AAAEgB,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAAgCnB,OAAO,CACzC,OAAO;AACHiB,IAAAA,OAAO,EAAEJ,OAAO,KAAK,KADlB;AAEHK,IAAAA,OAAO,EAAEL,OAAO,KAAK,IAFlB;AAGHM,IAAAA,OAAO,EAAEC,OAAO,CAACP,OAAD;AAHb,GAAP,CADyC,EAMzC,CAACA,OAAD,CANyC,CAA7C;AASA,QAAMQ,UAAU,GAAGtB,WAAW,CAC1B,MAAMuB,UAAN,IAAoB;AAChB,QAAI,OAAOX,MAAP,KAAkB,UAAtB,EAAkC;AAC9B;AACH;;AACDG,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMS,GAAG,GAAG,MAAMZ,MAAM,CAACW,UAAD,CAAxB;AACAR,MAAAA,UAAU,CAACS,GAAD,CAAV;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,IAAR,CAAa,qBAAb,EAAoCF,CAApC;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACQ,CAAD,CAAR;AACH;AACJ,GAdyB,EAe1B,CAACb,MAAD,CAf0B,CAA9B;AAkBA,QAAM;AAAEgB,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgD1B,WAAW,CAAC;AAAEQ,IAAAA,MAAM,EAAEU;AAAV,GAAD,CAAjE;AAEA,sBACI;AAAQ,IAAA,SAAS,EAAET,OAAO,CAACkB,SAA3B;AAAsC,IAAA,IAAI,EAAC;AAA3C,KAAwDH,YAAY,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI,oBAAC,OAAD;AACI,IAAA,OAAO,EAAEV,OADb;AAEI,IAAA,OAAO,EAAEC,OAFb;AAGI,IAAA,KAAK,EAAEH,KAHX;AAII,IAAA,OAAO,EAAEI,OAJb;AAKI,IAAA,aAAa,EAAES,aALnB;AAMI,IAAA,YAAY,EAAEC,YANlB;AAOI,IAAA,OAAO,EAAEjB,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH,CAhDD;;AAkDA,MAAMmB,OAAO,GAAG,CAAC;AAAEd,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBH,EAAAA,KAApB;AAA2BI,EAAAA,OAA3B;AAAoCS,EAAAA,aAApC;AAAmDC,EAAAA,YAAnD;AAAiEjB,EAAAA;AAAjE,CAAD,KAAgF;AAC5F,MAAIM,OAAJ,EAAa;AACT,wBAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,sBACI,uDACI,+CAAWU,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEX,OAAf;AAAwB,IAAA,KAAK,EAAEF,KAA/B;AAAsC,IAAA,OAAO,EAAEI,OAA/C;AAAwD,IAAA,OAAO,EAAEP,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEK,OAAhB;AAAyB,IAAA,KAAK,EAAEF,KAAhC;AAAuC,IAAA,OAAO,EAAEI,OAAhD;AAAyD,IAAA,YAAY,EAAEU,YAAvE;AAAqF,IAAA,OAAO,EAAEjB,OAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAXD;;AAaA,MAAMoB,IAAI,GAAG,CAAC;AAAEf,EAAAA,OAAF;AAAWF,EAAAA,KAAX;AAAkBI,EAAAA,OAAlB;AAA2BP,EAAAA;AAA3B,CAAD,KAA0C;AACnD,MAAIG,KAAJ,EAAW;AACP,wBAAO,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEH,OAAO,CAACqB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAIhB,OAAJ,EAAa;AACT,wBAAO,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEL,OAAO,CAACqB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,MAAId,OAAJ,EAAa;AACT,wBAAO,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEP,OAAO,CAACqB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SAAO,IAAP;AACH,CAXD;;AAaA,MAAMC,KAAK,GAAG,CAAC;AAAEjB,EAAAA,OAAF;AAAWF,EAAAA,KAAX;AAAkBI,EAAAA,OAAlB;AAA2BU,EAAAA,YAA3B;AAAyCjB,EAAAA;AAAzC,CAAD,KAAwD;AAClE,MAAIuB,IAAI,GAAG,IAAX;;AACA,MAAIN,YAAJ,EAAkB;AACdM,IAAAA,IAAI,GAAG,sBAAP;AACH,GAFD,MAEO,IAAIpB,KAAJ,EAAW;AACdoB,IAAAA,IAAI,GAAG,oBAAP;AACH,GAFM,MAEA,IAAIhB,OAAJ,EAAa;AAChBgB,IAAAA,IAAI,GAAG,6BAAP;AACH,GAFM,MAEA,IAAIlB,OAAJ,EAAa;AAChBkB,IAAAA,IAAI,GAAG,kCAAP;AACH;;AACD,sBACI,oBAAC,UAAD;AAAY,IAAA,aAAa,EAAE;AAAEL,MAAAA,SAAS,EAAElB,OAAO,CAACwB;AAArB,KAA3B;AAA8D,IAAA,OAAO,EAAC,IAAtE;AAA2E,IAAA,SAAS,EAAC,IAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADJ;AAKH,CAhBD;;AAkBA,OAAO,MAAME,YAAY,GAAG3B,qBAArB","sourcesContent":["import React, { useCallback, useMemo, useState } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { useDropzone } from 'react-dropzone';\n\nimport { Typography } from '@wld/ui';\n\nimport { LoadingSpinner } from '../loading_spinner/loading_spinner';\n\nimport { ReactComponent as DropFileIcon } from '../../../assets/icons/drop_file.svg';\nimport { ReactComponent as SuccessIcon } from '../../../assets/icons/success.svg';\nimport { ReactComponent as RemoveIcon } from '../../../assets/icons/remove_circle.svg';\n\nimport { styles } from './file_drop_zone_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst DEFAULT_ON_DROP = () => {\n    throw new Error('Did not provide a valid onDrop function.');\n};\n\nconst FileDropZoneComponent = ({ onDrop = DEFAULT_ON_DROP }) => {\n    const classes = useStyles();\n\n    const [fileUrl, setFileUrl] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { waiting, loading, success } = useMemo(\n        () => ({\n            waiting: fileUrl === false,\n            loading: fileUrl === null,\n            success: Boolean(fileUrl)\n        }),\n        [fileUrl]\n    );\n\n    const handleDrop = useCallback(\n        async parameters => {\n            if (typeof onDrop !== 'function') {\n                return;\n            }\n            setFileUrl(null);\n            try {\n                const url = await onDrop(parameters);\n                setFileUrl(url);\n            } catch (e) {\n                console.warn('Failed to drop file', e);\n                setFileUrl(false);\n                setError(e);\n            }\n        },\n        [onDrop]\n    );\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop: handleDrop });\n\n    return (\n        <button className={classes.container} type=\"button\" {...getRootProps()}>\n            <Content\n                waiting={waiting}\n                loading={loading}\n                error={error}\n                success={success}\n                getInputProps={getInputProps}\n                isDragActive={isDragActive}\n                classes={classes}\n            />\n        </button>\n    );\n};\n\nconst Content = ({ waiting, loading, error, success, getInputProps, isDragActive, classes }) => {\n    if (loading) {\n        return <LoadingSpinner />;\n    }\n    return (\n        <>\n            <input {...getInputProps()} />\n            <Icon waiting={waiting} error={error} success={success} classes={classes} />\n            <Label waiting={waiting} error={error} success={success} isDragActive={isDragActive} classes={classes} />\n        </>\n    );\n};\n\nconst Icon = ({ waiting, error, success, classes }) => {\n    if (error) {\n        return <RemoveIcon className={classes.icon} />;\n    }\n    if (waiting) {\n        return <DropFileIcon className={classes.icon} />;\n    }\n    if (success) {\n        return <SuccessIcon className={classes.icon} />;\n    }\n    return null;\n};\n\nconst Label = ({ waiting, error, success, isDragActive, classes }) => {\n    let text = null;\n    if (isDragActive) {\n        text = 'Release the cracken!';\n    } else if (error) {\n        text = 'An error occurred.';\n    } else if (success) {\n        text = 'File successfully uploaded!';\n    } else if (waiting) {\n        text = \"Drag'n drop files or click here.\";\n    }\n    return (\n        <Typography customClasses={{ container: classes.typography }} variant=\"h4\" component=\"h4\">\n            {text}\n        </Typography>\n    );\n};\n\nexport const FileDropZone = FileDropZoneComponent;\n"]},"metadata":{},"sourceType":"module"}