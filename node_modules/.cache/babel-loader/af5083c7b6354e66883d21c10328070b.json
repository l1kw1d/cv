{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/select/select.jsx\";\nimport React, { cloneElement, useCallback, useState } from 'react';\nimport injectSheet from 'react-jss';\nimport { Menu } from '@material-ui/core';\nimport { ClickableTextField } from '../clickable_text_field/clickable_text_field';\nimport styles from './select_styles';\n\nfunction getValueFromChildren(children, value) {\n  const selectedChild = children.map(child => child.props || {}).find(childProps => childProps.value === value);\n\n  if (selectedChild && typeof selectedChild.children === 'string') {\n    return selectedChild.children;\n  }\n\n  return value;\n}\n\nconst SelectComponent = ({\n  disabled,\n  fullWidth,\n  className,\n  value,\n  onChange,\n  onClose,\n  onMouseOver,\n  onFocus,\n  textFieldProps,\n  textFieldIconProps,\n  children,\n  id\n}) => {\n  const [anchorElement, setAnchorElement] = useState();\n  const handleClose = useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n\n    return setAnchorElement(null);\n  }, []);\n  const setAnchorElementCallback = useCallback(e => !disabled && setAnchorElement(e.currentTarget), [disabled]);\n  const selectedChildValue = getValueFromChildren(children, value);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Menu, {\n    anchorEl: anchorElement,\n    keepMounted: true,\n    open: Boolean(anchorElement),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.Children.map(children, child => cloneElement(child, {\n    onClick: () => {\n      if (onChange) {\n        onChange(child.props.value);\n      }\n\n      setAnchorElement(null);\n    },\n    onMouseOver: () => {\n      if (onMouseOver) {\n        onMouseOver(child.props.value);\n      }\n    },\n    onFocus: () => {\n      if (onFocus) {\n        onFocus(child.props.value);\n      }\n    }\n  }))), /*#__PURE__*/React.createElement(ClickableTextField, Object.assign({\n    customClasses: {\n      container: className\n    },\n    value: selectedChildValue,\n    onClick: setAnchorElementCallback,\n    arrowRotation: anchorElement ? -90 : 0\n  }, {\n    id,\n    textFieldIconProps,\n    fullWidth,\n    disabled\n  }, textFieldProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport const Select = injectSheet(styles)(SelectComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/select/select.jsx"],"names":["React","cloneElement","useCallback","useState","injectSheet","Menu","ClickableTextField","styles","getValueFromChildren","children","value","selectedChild","map","child","props","find","childProps","SelectComponent","disabled","fullWidth","className","onChange","onClose","onMouseOver","onFocus","textFieldProps","textFieldIconProps","id","anchorElement","setAnchorElement","handleClose","setAnchorElementCallback","e","currentTarget","selectedChildValue","Boolean","Children","onClick","container","Select"],"mappings":"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","sourcesContent":["import React, { cloneElement, useCallback, useState } from 'react';\n\nimport injectSheet from 'react-jss';\n\nimport { Menu } from '@material-ui/core';\nimport { ClickableTextField } from '../clickable_text_field/clickable_text_field';\n\nimport styles from './select_styles';\n\nfunction getValueFromChildren(children, value) {\n    const selectedChild = children.map(child => child.props || {}).find(childProps => childProps.value === value);\n    if (selectedChild && typeof selectedChild.children === 'string') {\n        return selectedChild.children;\n    }\n    return value;\n}\n\nconst SelectComponent = ({\n    disabled,\n    fullWidth,\n    className,\n    value,\n    onChange,\n    onClose,\n    onMouseOver,\n    onFocus,\n    textFieldProps,\n    textFieldIconProps,\n    children,\n    id\n}) => {\n    const [anchorElement, setAnchorElement] = useState();\n    const handleClose = useCallback(() => {\n        if (onClose) {\n            onClose();\n        }\n        return setAnchorElement(null);\n    }, []);\n    const setAnchorElementCallback = useCallback(e => !disabled && setAnchorElement(e.currentTarget), [disabled]);\n\n    const selectedChildValue = getValueFromChildren(children, value);\n    return (\n        <>\n            <Menu anchorEl={anchorElement} keepMounted open={Boolean(anchorElement)} onClose={handleClose}>\n                {React.Children.map(children, child =>\n                    cloneElement(child, {\n                        onClick: () => {\n                            if (onChange) {\n                                onChange(child.props.value);\n                            }\n                            setAnchorElement(null);\n                        },\n                        onMouseOver: () => {\n                            if (onMouseOver) {\n                                onMouseOver(child.props.value);\n                            }\n                        },\n                        onFocus: () => {\n                            if (onFocus) {\n                                onFocus(child.props.value);\n                            }\n                        }\n                    }))}\n            </Menu>\n            <ClickableTextField\n                customClasses={{\n                    container: className\n                }}\n                value={selectedChildValue}\n                onClick={setAnchorElementCallback}\n                arrowRotation={anchorElement ? -90 : 0}\n                {...{ id, textFieldIconProps, fullWidth, disabled }}\n                {...textFieldProps}\n            />\n        </>\n    );\n};\n\nexport const Select = injectSheet(styles)(SelectComponent);\n"]},"metadata":{},"sourceType":"module"}