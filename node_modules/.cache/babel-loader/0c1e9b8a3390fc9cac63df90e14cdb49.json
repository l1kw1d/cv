{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/basics/basics_back/basics_back.jsx\";\nimport React, { memo, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { ProfileCardSectionTitle } from '../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardSectionText } from '../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { ProfileCardSection } from '../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { ContractType } from '../../../../commons/fields/contract_types/contract_types';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { translations } from '../../../../../utils/enums/job_serachstate/job_search_state_translations';\nimport { styles } from './basics_back_styles';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { ExperienceYears } from './fields/professional_experience';\nimport { CodingYears } from './fields/coding_years';\nimport { StudiesLevel } from './fields/studies_level';\nimport { useMode } from '../../../../hooks/use_mode';\nconst useStyles = createUseStyles(styles);\n\nconst BasicsBackComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  const [mode] = useMode();\n  const classes = useStyles();\n  const {\n    currentCity: {\n      name: currentCityName\n    },\n    experienceYears,\n    contractTypes,\n    studiesLevel,\n    codingYears,\n    codingReason,\n    searchState,\n    visaSponsorship,\n    personalDescription\n  } = data;\n  const descriptionContent = useMemo(() => {\n    if (!personalDescription && mode === 'edit') {\n      return /*#__PURE__*/React.createElement(NoDataButton, {\n        handleAddButtonClick: handleAddButtonClick,\n        classes: {\n          container: classes.addButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"Basics.noDescription.buttonLabel\",\n        defaultMessage: \"Ajouter une description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, personalDescription);\n  }, [personalDescription, mode, handleAddButtonClick, classes]);\n  const sections = useMemo(() => ({\n    personalDescription: {\n      title: null,\n      hide: false,\n      value: descriptionContent\n    },\n    visaSponsorship: {\n      hide: !existsAndNotEmpty(visaSponsorship),\n      value: /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.bold,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"Basics.Back.VisaSponsorship\",\n        defaultMessage: \"I require a visa sponsorship\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }))\n    },\n    work: {\n      title: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"Basics.Back.Work.Title\",\n        defaultMessage: \"Work\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 24\n        }\n      }),\n      hide: !experienceYears && !existsAndNotEmpty(contractTypes) && !existsAndNotEmpty(searchState),\n      value: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ExperienceYears, {\n        experienceYears: experienceYears,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ContractType, {\n        contractTypes: contractTypes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(JobSearchState, {\n        searchState: searchState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }))\n    },\n    codingYears: {\n      title: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"Basics.Back.CodingYears.title\",\n        defaultMessage: \"Experience\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 24\n        }\n      }),\n      hide: !personalDescription,\n      value: /*#__PURE__*/React.createElement(CodingYears, {\n        codingYears: codingYears,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 24\n        }\n      })\n    },\n    studies: {\n      title: /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"Basics.Back.StudiesLevel.Title\",\n        defaultMessage: \"Training\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }\n      }),\n      hide: !studiesLevel,\n      value: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StudiesLevel, {\n        studiesLevel: studiesLevel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }), codingReason && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 42\n        }\n      }, codingReason))\n    }\n  }), [currentCityName, experienceYears, contractTypes, studiesLevel, codingYears, codingReason, visaSponsorship, personalDescription, descriptionContent, searchState]);\n  return /*#__PURE__*/React.createElement(ProfileCardAnimatedBack, {\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Basics.Back.Title\",\n      defaultMessage: \"Who?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, Object.entries(sections).filter(([, {\n    hide\n  }]) => !hide).map(([id, {\n    title,\n    value\n  }]) => /*#__PURE__*/React.createElement(ProfileCardSection, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, title && /*#__PURE__*/React.createElement(ProfileCardSectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 35\n    }\n  }, title), /*#__PURE__*/React.createElement(ProfileCardSectionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, value))));\n};\n\nconst JobSearchState = ({\n  searchState\n}) => {\n  const {\n    formatMessage\n  } = useIntl();\n\n  if (!searchState) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }\n  }, formatMessage(translations[searchState] || translations.unknown));\n};\n\nexport const BasicsBack = memo(BasicsBackComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/basics/basics_back/basics_back.jsx"],"names":["React","memo","useMemo","createUseStyles","FormattedMessage","useIntl","ProfileCardAnimatedBack","ProfileCardSectionTitle","ProfileCardSectionText","ProfileCardSection","ContractType","existsAndNotEmpty","translations","styles","NoDataButton","ExperienceYears","CodingYears","StudiesLevel","useMode","useStyles","BasicsBackComponent","data","handleAddButtonClick","mode","classes","currentCity","name","currentCityName","experienceYears","contractTypes","studiesLevel","codingYears","codingReason","searchState","visaSponsorship","personalDescription","descriptionContent","container","addButton","sections","title","hide","value","bold","work","studies","Object","entries","filter","map","id","JobSearchState","formatMessage","unknown","BasicsBack"],"mappings":"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","sourcesContent":["import React, { memo, useMemo } from 'react';\n\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { ProfileCardSectionTitle } from '../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardSectionText } from '../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { ProfileCardSection } from '../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { ContractType } from '../../../../commons/fields/contract_types/contract_types';\n\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\n\nimport { translations } from '../../../../../utils/enums/job_serachstate/job_search_state_translations';\nimport { styles } from './basics_back_styles';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nimport { ExperienceYears } from './fields/professional_experience';\nimport { CodingYears } from './fields/coding_years';\nimport { StudiesLevel } from './fields/studies_level';\nimport { useMode } from '../../../../hooks/use_mode';\n\nconst useStyles = createUseStyles(styles);\n\nconst BasicsBackComponent = ({ data, handleAddButtonClick }) => {\n    const [mode] = useMode();\n    const classes = useStyles();\n\n    const {\n        currentCity: { name: currentCityName },\n        experienceYears,\n        contractTypes,\n        studiesLevel,\n        codingYears,\n        codingReason,\n        searchState,\n        visaSponsorship,\n        personalDescription\n    } = data;\n\n    const descriptionContent = useMemo(() => {\n        if (!personalDescription && mode === 'edit') {\n            return (\n                <NoDataButton\n                    handleAddButtonClick={handleAddButtonClick}\n                    classes={{\n                        container: classes.addButton\n                    }}\n                >\n                    <FormattedMessage id=\"Basics.noDescription.buttonLabel\" defaultMessage=\"Ajouter une description\" />\n                </NoDataButton>\n            );\n        }\n        return <span>{personalDescription}</span>;\n    }, [personalDescription, mode, handleAddButtonClick, classes]);\n\n    const sections = useMemo(\n        () => ({\n            personalDescription: {\n                title: null,\n                hide: false,\n                value: descriptionContent\n            },\n            visaSponsorship: {\n                hide: !existsAndNotEmpty(visaSponsorship),\n                value: (\n                    <span className={classes.bold}>\n                        <FormattedMessage\n                            id=\"Basics.Back.VisaSponsorship\"\n                            defaultMessage=\"I require a visa sponsorship\"\n                        />\n                    </span>\n                )\n            },\n            work: {\n                title: <FormattedMessage id=\"Basics.Back.Work.Title\" defaultMessage=\"Work\" />,\n                hide: !experienceYears && !existsAndNotEmpty(contractTypes) && !existsAndNotEmpty(searchState),\n                value: (\n                    <>\n                        <ExperienceYears experienceYears={experienceYears} />\n                        <br />\n                        <ContractType contractTypes={contractTypes} />\n                        <br />\n                        <JobSearchState searchState={searchState} />\n                    </>\n                )\n            },\n            codingYears: {\n                title: <FormattedMessage id=\"Basics.Back.CodingYears.title\" defaultMessage=\"Experience\" />,\n                hide: !personalDescription,\n                value: <CodingYears codingYears={codingYears} />\n            },\n            studies: {\n                title: <FormattedMessage id=\"Basics.Back.StudiesLevel.Title\" defaultMessage=\"Training\" />,\n                hide: !studiesLevel,\n                value: (\n                    <>\n                        <StudiesLevel studiesLevel={studiesLevel} />\n                        <br />\n                        <br />\n                        {codingReason && <span>{codingReason}</span>}\n                    </>\n                )\n            }\n        }),\n        [\n            currentCityName,\n            experienceYears,\n            contractTypes,\n            studiesLevel,\n            codingYears,\n            codingReason,\n            visaSponsorship,\n            personalDescription,\n            descriptionContent,\n            searchState\n        ]\n    );\n\n    return (\n        <ProfileCardAnimatedBack title={<FormattedMessage id=\"Basics.Back.Title\" defaultMessage=\"Who?\" />}>\n            {Object.entries(sections)\n                .filter(([, { hide }]) => !hide)\n                .map(([id, { title, value }]) => (\n                    <ProfileCardSection key={id}>\n                        {title && <ProfileCardSectionTitle>{title}</ProfileCardSectionTitle>}\n                        <ProfileCardSectionText>{value}</ProfileCardSectionText>\n                    </ProfileCardSection>\n                ))}\n        </ProfileCardAnimatedBack>\n    );\n};\n\nconst JobSearchState = ({ searchState }) => {\n    const { formatMessage } = useIntl();\n    if (!searchState) {\n        return null;\n    }\n    return <span>{formatMessage(translations[searchState] || translations.unknown)}</span>;\n};\n\nexport const BasicsBack = memo(BasicsBackComponent);\n"]},"metadata":{},"sourceType":"module"}