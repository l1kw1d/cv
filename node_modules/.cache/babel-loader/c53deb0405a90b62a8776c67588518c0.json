{"ast":null,"code":"import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nexport const BasicsValidationSchema = formatMessage => Yup.object({\n  summary: Yup.string().required(formatMessage(validationTranslations.required)).min(5, formatMessage(validationTranslations.min, {\n    min: 5\n  })).max(100, formatMessage(validationTranslations.max, {\n    max: 110\n  })),\n  currentCity: Yup.object().nullable().required(formatMessage(validationTranslations.required)).shape({\n    name: Yup.string().min(5, formatMessage(validationTranslations.min, {\n      min: 5\n    })).required(formatMessage(validationTranslations.required))\n  }),\n  experienceYears: Yup.number().min(0, formatMessage(validationTranslations.min, {\n    min: 0\n  })).max(20, formatMessage(validationTranslations.max, {\n    max: 20\n  })).required(formatMessage(validationTranslations.required)),\n  studiesLevel: Yup.number().min(0, formatMessage(validationTranslations.min, {\n    min: 0\n  })).max(12, formatMessage(validationTranslations.max, {\n    max: 12\n  })).required(formatMessage(validationTranslations.required)),\n  codingYears: Yup.number().min(0, formatMessage(validationTranslations.min, {\n    min: 0\n  })).max(20, formatMessage(validationTranslations.max, {\n    max: 20\n  })).required(formatMessage(validationTranslations.required)),\n  codingReason: Yup.string().min(10, formatMessage(validationTranslations.min, {\n    min: 10\n  }))\n});\nexport const validateBasicsComplete = data => {\n  try {\n    Yup.object({\n      experienceYears: Yup.number().required(),\n      codingYears: Yup.number().required()\n    }).validateSync(data);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/basics/data/validator.js"],"names":["Yup","validationTranslations","BasicsValidationSchema","formatMessage","object","summary","string","required","min","max","currentCity","nullable","shape","name","experienceYears","number","studiesLevel","codingYears","codingReason","validateBasicsComplete","data","validateSync","e"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\n\nexport const BasicsValidationSchema = formatMessage =>\n    Yup.object({\n        summary: Yup.string()\n            .required(formatMessage(validationTranslations.required))\n            .min(5, formatMessage(validationTranslations.min, { min: 5 }))\n            .max(100, formatMessage(validationTranslations.max, { max: 110 })),\n        currentCity: Yup.object()\n            .nullable()\n            .required(formatMessage(validationTranslations.required))\n            .shape({\n                name: Yup.string()\n                    .min(5, formatMessage(validationTranslations.min, { min: 5 }))\n                    .required(formatMessage(validationTranslations.required))\n            }),\n        experienceYears: Yup.number()\n            .min(0, formatMessage(validationTranslations.min, { min: 0 }))\n            .max(20, formatMessage(validationTranslations.max, { max: 20 }))\n            .required(formatMessage(validationTranslations.required)),\n        studiesLevel: Yup.number()\n            .min(0, formatMessage(validationTranslations.min, { min: 0 }))\n            .max(12, formatMessage(validationTranslations.max, { max: 12 }))\n            .required(formatMessage(validationTranslations.required)),\n        codingYears: Yup.number()\n            .min(0, formatMessage(validationTranslations.min, { min: 0 }))\n            .max(20, formatMessage(validationTranslations.max, { max: 20 }))\n            .required(formatMessage(validationTranslations.required)),\n        codingReason: Yup.string().min(10, formatMessage(validationTranslations.min, { min: 10 }))\n    });\n\nexport const validateBasicsComplete = data => {\n    try {\n        Yup.object({\n            experienceYears: Yup.number().required(),\n            codingYears: Yup.number().required()\n        }).validateSync(data);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}