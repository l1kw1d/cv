{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/interested_by/interested_by_card.jsx\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { InterestedByFront } from './interested_by_front/interested_by_front';\nimport { InterestedByBack } from './interested_by_back/interested_by_back';\nimport { FlatObjectToJsonResume, JsonResumeToFlatObject } from '../../utils/data_mapping';\nimport { InterestedByEditDialog } from './interested_by_edit_dialog/interested_by_edit_dialog';\nimport { interestedByMapping } from './data/mapping';\nimport { interestedByValidationSchema, validateInterestedByComplete } from './data/validator';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst InterestedByCardComponent = ({\n  variant,\n  side\n}) => {\n  const [mode] = useMode();\n  const {\n    data,\n    onEdit,\n    isEditing\n  } = useContext(DeveloperProfileContext);\n  const mappedData = useMemo(() => JsonResumeToFlatObject(data, interestedByMapping), [data]);\n  const onDialogEdited = useCallback(editedData => {\n    onEdit(FlatObjectToJsonResume(editedData, interestedByMapping));\n  }, [onEdit]);\n  const isComplete = useMemo(() => validateInterestedByComplete(mappedData), [mappedData]);\n\n  if (!isComplete && mode !== 'edit') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCard, {\n    kind: \"interested_by\",\n    data: mappedData,\n    isComplete: isComplete,\n    isEditingProfile: isEditing,\n    sides: {\n      front: props => /*#__PURE__*/React.createElement(InterestedByFront, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }\n      })),\n      back: props => /*#__PURE__*/React.createElement(InterestedByBack, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 36\n        }\n      }))\n    },\n    editDialog: {\n      component: InterestedByEditDialog,\n      validationSchema: interestedByValidationSchema,\n      onEdit: onDialogEdited\n    },\n    variant: variant,\n    side: side,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const InterestedByCard = InterestedByCardComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/interested_by/interested_by_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","InterestedByFront","InterestedByBack","FlatObjectToJsonResume","JsonResumeToFlatObject","InterestedByEditDialog","interestedByMapping","interestedByValidationSchema","validateInterestedByComplete","DeveloperProfileContext","useMode","InterestedByCardComponent","variant","side","mode","data","onEdit","isEditing","mappedData","onDialogEdited","editedData","isComplete","front","props","back","component","validationSchema","InterestedByCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,OAAzC,QAAwD,OAAxD;AAEA,SAASC,WAAT,QAA4B,4CAA5B;AACA,SAASC,iBAAT,QAAkC,2CAAlC;AACA,SAASC,gBAAT,QAAiC,yCAAjC;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,0BAA/D;AACA,SAASC,sBAAT,QAAuC,uDAAvC;AAEA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,4BAAT,EAAuCC,4BAAvC,QAA2E,kBAA3E;AACA,SAASC,uBAAT,QAAwC,oCAAxC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,MAAMC,yBAAyB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACrD,QAAM,CAACC,IAAD,IAASJ,OAAO,EAAtB;AAEA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA8BnB,UAAU,CAACW,uBAAD,CAA9C;AACA,QAAMS,UAAU,GAAGnB,OAAO,CAAC,MAAMK,sBAAsB,CAACW,IAAD,EAAOT,mBAAP,CAA7B,EAA0D,CAACS,IAAD,CAA1D,CAA1B;AAEA,QAAMI,cAAc,GAAGtB,WAAW,CAC9BuB,UAAU,IAAI;AACVJ,IAAAA,MAAM,CAACb,sBAAsB,CAACiB,UAAD,EAAad,mBAAb,CAAvB,CAAN;AACH,GAH6B,EAI9B,CAACU,MAAD,CAJ8B,CAAlC;AAOA,QAAMK,UAAU,GAAGtB,OAAO,CAAC,MAAMS,4BAA4B,CAACU,UAAD,CAAnC,EAAiD,CAACA,UAAD,CAAjD,CAA1B;;AAEA,MAAI,CAACG,UAAD,IAAeP,IAAI,KAAK,MAA5B,EAAoC;AAChC,WAAO,IAAP;AACH;;AACD,sBACI,uDACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,eADT;AAEI,IAAA,IAAI,EAAEI,UAFV;AAGI,IAAA,UAAU,EAAEG,UAHhB;AAII,IAAA,gBAAgB,EAAEJ,SAJtB;AAKI,IAAA,KAAK,EAAE;AACHK,MAAAA,KAAK,EAAEC,KAAK,iBAAI,oBAAC,iBAAD,oBAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADb;AAEHC,MAAAA,IAAI,EAAED,KAAK,iBAAI,oBAAC,gBAAD,oBAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFZ,KALX;AASI,IAAA,UAAU,EAAE;AACRE,MAAAA,SAAS,EAAEpB,sBADH;AAERqB,MAAAA,gBAAgB,EAAEnB,4BAFV;AAGRS,MAAAA,MAAM,EAAEG;AAHA,KAThB;AAcI,IAAA,OAAO,EAAEP,OAdb;AAeI,IAAA,IAAI,EAAEC,IAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAqBH,CAvCD;;AAyCA,OAAO,MAAMc,gBAAgB,GAAGhB,yBAAzB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { InterestedByFront } from './interested_by_front/interested_by_front';\nimport { InterestedByBack } from './interested_by_back/interested_by_back';\nimport { FlatObjectToJsonResume, JsonResumeToFlatObject } from '../../utils/data_mapping';\nimport { InterestedByEditDialog } from './interested_by_edit_dialog/interested_by_edit_dialog';\n\nimport { interestedByMapping } from './data/mapping';\nimport { interestedByValidationSchema, validateInterestedByComplete } from './data/validator';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst InterestedByCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n\n    const { data, onEdit, isEditing } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => JsonResumeToFlatObject(data, interestedByMapping), [data]);\n\n    const onDialogEdited = useCallback(\n        editedData => {\n            onEdit(FlatObjectToJsonResume(editedData, interestedByMapping));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateInterestedByComplete(mappedData), [mappedData]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n    return (\n        <>\n            <ProfileCard\n                kind=\"interested_by\"\n                data={mappedData}\n                isComplete={isComplete}\n                isEditingProfile={isEditing}\n                sides={{\n                    front: props => <InterestedByFront {...props} />,\n                    back: props => <InterestedByBack {...props} />\n                }}\n                editDialog={{\n                    component: InterestedByEditDialog,\n                    validationSchema: interestedByValidationSchema,\n                    onEdit: onDialogEdited\n                }}\n                variant={variant}\n                side={side}\n            />\n        </>\n    );\n};\n\nexport const InterestedByCard = InterestedByCardComponent;\n"]},"metadata":{},"sourceType":"module"}