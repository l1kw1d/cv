{"ast":null,"code":"import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { interestsTranslations } from './validator_translations';\nexport const interestsValidator = formatMessage => Yup.object().shape({\n  interests: Yup.array().of(Yup.object().transform(value => ({ ...value,\n    stillEmployed: !value.endDate\n  })).shape({\n    name: Yup.string().required(formatMessage(validationTranslations.required)).min(2, formatMessage(validationTranslations.min, {\n      min: 2\n    })),\n    gifUrl: Yup.string()\n  })).required(formatMessage(interestsTranslations.atLeastOne))\n});\nexport const validateInterestsComplete = data => {\n  try {\n    Yup.object({\n      interests: Yup.array().required().min(1)\n    }).validateSync(data);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/gifs/data/validator.js"],"names":["Yup","validationTranslations","interestsTranslations","interestsValidator","formatMessage","object","shape","interests","array","of","transform","value","stillEmployed","endDate","name","string","required","min","gifUrl","atLeastOne","validateInterestsComplete","data","validateSync","e"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,sBAAT,QAAuC,8CAAvC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AAEA,OAAO,MAAMC,kBAAkB,GAAGC,aAAa,IAC3CJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACfC,EAAAA,SAAS,EAAEP,GAAG,CAACQ,KAAJ,GACNC,EADM,CAEHT,GAAG,CAACK,MAAJ,GACKK,SADL,CACeC,KAAK,KAAK,EAAE,GAAGA,KAAL;AAAYC,IAAAA,aAAa,EAAE,CAACD,KAAK,CAACE;AAAlC,GAAL,CADpB,EAEKP,KAFL,CAEW;AACHQ,IAAAA,IAAI,EAAEd,GAAG,CAACe,MAAJ,GACDC,QADC,CACQZ,aAAa,CAACH,sBAAsB,CAACe,QAAxB,CADrB,EAEDC,GAFC,CAEG,CAFH,EAEMb,aAAa,CAACH,sBAAsB,CAACgB,GAAxB,EAA6B;AAAEA,MAAAA,GAAG,EAAE;AAAP,KAA7B,CAFnB,CADH;AAIHC,IAAAA,MAAM,EAAElB,GAAG,CAACe,MAAJ;AAJL,GAFX,CAFG,EAWNC,QAXM,CAWGZ,aAAa,CAACF,qBAAqB,CAACiB,UAAvB,CAXhB;AADI,CAAnB,CADG;AAgBP,OAAO,MAAMC,yBAAyB,GAAGC,IAAI,IAAI;AAC7C,MAAI;AACArB,IAAAA,GAAG,CAACK,MAAJ,CAAW;AACPE,MAAAA,SAAS,EAAEP,GAAG,CAACQ,KAAJ,GACNQ,QADM,GAENC,GAFM,CAEF,CAFE;AADJ,KAAX,EAIGK,YAJH,CAIgBD,IAJhB;AAKH,GAND,CAME,OAAOE,CAAP,EAAU;AACR,WAAO,KAAP;AACH;;AACD,SAAO,IAAP;AACH,CAXM","sourcesContent":["import * as Yup from 'yup';\nimport { validationTranslations } from '../../../../../utils/validation_translations';\nimport { interestsTranslations } from './validator_translations';\n\nexport const interestsValidator = formatMessage =>\n    Yup.object().shape({\n        interests: Yup.array()\n            .of(\n                Yup.object()\n                    .transform(value => ({ ...value, stillEmployed: !value.endDate }))\n                    .shape({\n                        name: Yup.string()\n                            .required(formatMessage(validationTranslations.required))\n                            .min(2, formatMessage(validationTranslations.min, { min: 2 })),\n                        gifUrl: Yup.string()\n                    })\n            )\n            .required(formatMessage(interestsTranslations.atLeastOne))\n    });\n\nexport const validateInterestsComplete = data => {\n    try {\n        Yup.object({\n            interests: Yup.array()\n                .required()\n                .min(1)\n        }).validateSync(data);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n"]},"metadata":{},"sourceType":"module"}