{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/loading_spinner/loading_spinner.jsx\";\nimport React, { useMemo } from 'react';\nimport { useTheme } from 'react-jss';\nimport { WaveLoading } from 'respinner';\nimport { getHexFromPaletteColor } from '../../../utils/styles/styles_utils';\n\nconst LoadingSpinnerComponent = ({\n  color = 'primary',\n  height\n}) => {\n  const theme = useTheme();\n  const colorHex = useMemo(() => getHexFromPaletteColor(theme, color), [theme, color]);\n  return /*#__PURE__*/React.createElement(WaveLoading, {\n    height: height,\n    stroke: colorHex,\n    strokeWidth: 3,\n    count: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  });\n};\n\nexport const LoadingSpinner = LoadingSpinnerComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/loading_spinner/loading_spinner.jsx"],"names":["React","useMemo","useTheme","WaveLoading","getHexFromPaletteColor","LoadingSpinnerComponent","color","height","theme","colorHex","LoadingSpinner"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,SAASC,sBAAT,QAAuC,oCAAvC;;AAEA,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,SAAV;AAAqBC,EAAAA;AAArB,CAAD,KAAmC;AAC/D,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,QAAQ,GAAGR,OAAO,CAAC,MAAMG,sBAAsB,CAACI,KAAD,EAAQF,KAAR,CAA7B,EAA6C,CAACE,KAAD,EAAQF,KAAR,CAA7C,CAAxB;AACA,sBAAO,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEC,MAArB;AAA6B,IAAA,MAAM,EAAEE,QAArC;AAA+C,IAAA,WAAW,EAAE,CAA5D;AAA+D,IAAA,KAAK,EAAE,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAJD;;AAMA,OAAO,MAAMC,cAAc,GAAGL,uBAAvB","sourcesContent":["import React, { useMemo } from 'react';\n\nimport { useTheme } from 'react-jss';\nimport { WaveLoading } from 'respinner';\n\nimport { getHexFromPaletteColor } from '../../../utils/styles/styles_utils';\n\nconst LoadingSpinnerComponent = ({ color = 'primary', height }) => {\n    const theme = useTheme();\n    const colorHex = useMemo(() => getHexFromPaletteColor(theme, color), [theme, color]);\n    return <WaveLoading height={height} stroke={colorHex} strokeWidth={3} count={2} />;\n};\n\nexport const LoadingSpinner = LoadingSpinnerComponent;\n"]},"metadata":{},"sourceType":"module"}