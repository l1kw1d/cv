{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/studies_back/studies_back.jsx\";\nimport React, { memo, useMemo } from 'react';\nimport { ProfileCardSection } from '../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { ProfileCardSectionTitle } from '../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { ProfileCardSectionSubtitle } from '../../../../commons/profile_card/profile_card_section_subtitle/profile_card_section_subtitle';\nimport { ProfileCardSectionText } from '../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoStudies } from './no_studies/no_studies';\n\nconst Study = ({\n  study\n}) => {\n  const {\n    endDate,\n    area,\n    studyType,\n    institution\n  } = study;\n  const title = institution;\n  const body = useMemo(() => {\n    const bodyParts = [];\n\n    if (studyType) {\n      bodyParts.push(studyType);\n\n      if (area) {\n        bodyParts.push(', ');\n      }\n    }\n\n    if (area) {\n      bodyParts.push(area);\n    }\n\n    return bodyParts;\n  }, [study]);\n  const date = useMemo(() => {\n    const year = typeof (endDate === null || endDate === void 0 ? void 0 : endDate.year) === 'function' ? endDate.year() : null;\n\n    if (!Number.isNaN(Number(year))) {\n      return year;\n    }\n\n    return '';\n  }, [endDate]);\n  return /*#__PURE__*/React.createElement(ProfileCardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardSectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(ProfileCardSectionSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, body), date && /*#__PURE__*/React.createElement(ProfileCardSectionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }\n  }, date));\n};\n\nconst Content = ({\n  data,\n  handleAddButtonClick\n}) => {\n  const hasEducation = useMemo(() => existsAndNotEmpty(data), [data]);\n\n  if (!hasEducation) {\n    return /*#__PURE__*/React.createElement(NoStudies, Object.assign({\n      handleAddButtonClick\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  return data === null || data === void 0 ? void 0 : data.map((study, index) => /*#__PURE__*/React.createElement(Study, {\n    key: `study_${index}_${study.id}`,\n    study: study,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 40\n    }\n  }));\n};\n\nconst StudiesBackComponent = ({\n  data: {\n    education: data\n  },\n  handleAddButtonClick\n}) => /*#__PURE__*/React.createElement(ProfileCardAnimatedBack, {\n  title: \"Studies\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Content, Object.assign({\n  data,\n  handleAddButtonClick\n}, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n})));\n\nexport const StudiesBack = memo(StudiesBackComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/studies/studies_back/studies_back.jsx"],"names":["React","memo","useMemo","ProfileCardSection","ProfileCardSectionTitle","ProfileCardAnimatedBack","ProfileCardSectionSubtitle","ProfileCardSectionText","existsAndNotEmpty","NoStudies","Study","study","endDate","area","studyType","institution","title","body","bodyParts","push","date","year","Number","isNaN","Content","data","handleAddButtonClick","hasEducation","map","index","id","StudiesBackComponent","education","StudiesBack"],"mappings":"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","sourcesContent":["import React, { memo, useMemo } from 'react';\nimport { ProfileCardSection } from '../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { ProfileCardSectionTitle } from '../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardAnimatedBack } from '../../../../commons/profile_card/profile_card_animated_back/profile_card_animated_back';\nimport { ProfileCardSectionSubtitle } from '../../../../commons/profile_card/profile_card_section_subtitle/profile_card_section_subtitle';\nimport { ProfileCardSectionText } from '../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoStudies } from './no_studies/no_studies';\n\nconst Study = ({ study }) => {\n    const { endDate, area, studyType, institution } = study;\n    const title = institution;\n    const body = useMemo(() => {\n        const bodyParts = [];\n        if (studyType) {\n            bodyParts.push(studyType);\n            if (area) {\n                bodyParts.push(', ');\n            }\n        }\n        if (area) {\n            bodyParts.push(area);\n        }\n\n        return bodyParts;\n    }, [study]);\n\n    const date = useMemo(() => {\n        const year = typeof endDate?.year === 'function' ? endDate.year() : null;\n        if (!Number.isNaN(Number(year))) {\n            return year;\n        }\n        return '';\n    }, [endDate]);\n    return (\n        <ProfileCardSection>\n            <ProfileCardSectionTitle>{title}</ProfileCardSectionTitle>\n            <ProfileCardSectionSubtitle>{body}</ProfileCardSectionSubtitle>\n            {date && <ProfileCardSectionText>{date}</ProfileCardSectionText>}\n        </ProfileCardSection>\n    );\n};\n\nconst Content = ({ data, handleAddButtonClick }) => {\n    const hasEducation = useMemo(() => existsAndNotEmpty(data), [data]);\n\n    if (!hasEducation) {\n        return <NoStudies {...{ handleAddButtonClick }} />;\n    }\n    return data?.map((study, index) => <Study key={`study_${index}_${study.id}`} study={study} />);\n};\n\nconst StudiesBackComponent = ({ data: { education: data }, handleAddButtonClick }) => (\n    <ProfileCardAnimatedBack title=\"Studies\">\n        <Content {...{ data, handleAddButtonClick }} />\n    </ProfileCardAnimatedBack>\n);\n\nexport const StudiesBack = memo(StudiesBackComponent);\n"]},"metadata":{},"sourceType":"module"}