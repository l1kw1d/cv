{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_back/projects_back.jsx\";\nimport React, { memo, useCallback, useContext, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { ProfileCardTitle } from '../../../../commons/profile_card/profile_card_title/profile_card_title';\nimport { ProfileCardContent } from '../../../../commons/profile_card/profile_card_content/profile_card_content';\nimport { ProjectSection } from './project_section/project_section';\nimport { DEFAULT_PROJECT_IMAGE } from '../utils/images';\nimport { styles } from './projects_back_styles';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { DeveloperProfileContext } from '../../../../../utils/context/contexts';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoProject } from './no_project/no_project';\nconst useStyles = createUseStyles(styles);\n\nconst ProjectsBackComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  var _data$projects2, _data$projects2$, _data$projects3, _data$projects3$, _data$projects4;\n\n  const [variant] = useCardVariant();\n  const {\n    onEdit\n  } = useContext(DeveloperProfileContext);\n  const classes = useStyles({\n    variant\n  });\n  const imageSrc = useMemo(() => {\n    var _data$projects$0$imag, _data$projects, _data$projects$, _data$projects$$image;\n\n    return (_data$projects$0$imag = (_data$projects = data.projects) === null || _data$projects === void 0 ? void 0 : (_data$projects$ = _data$projects[0]) === null || _data$projects$ === void 0 ? void 0 : (_data$projects$$image = _data$projects$.images) === null || _data$projects$$image === void 0 ? void 0 : _data$projects$$image.url) !== null && _data$projects$0$imag !== void 0 ? _data$projects$0$imag : DEFAULT_PROJECT_IMAGE;\n  }, [(_data$projects2 = data.projects) === null || _data$projects2 === void 0 ? void 0 : (_data$projects2$ = _data$projects2[0]) === null || _data$projects2$ === void 0 ? void 0 : _data$projects2$.images]);\n  const alt = (_data$projects3 = data.projects) === null || _data$projects3 === void 0 ? void 0 : (_data$projects3$ = _data$projects3[0]) === null || _data$projects3$ === void 0 ? void 0 : _data$projects3$.title;\n  const handleProjectDeletion = useCallback(index => {\n    const newProjects = [...data.projects];\n    newProjects.splice(index, 1);\n    onEdit({\n      projects: newProjects\n    });\n  }, [data, onEdit]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCardTitle, {\n    customClasses: {\n      container: classes.title,\n      typography: classes.typography\n    },\n    beforeTypography: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.background,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, imageSrc && /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.backgroundImage,\n      src: imageSrc,\n      alt: alt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 38\n      }\n    }), !imageSrc && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.stubBackground,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 39\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Projects.back.title\",\n    defaultMessage: \"Projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ProfileCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, (_data$projects4 = data.projects) === null || _data$projects4 === void 0 ? void 0 : _data$projects4.map(project => /*#__PURE__*/React.createElement(ProjectSection, {\n    project: project,\n    key: `project_${project.id}`,\n    onDelete: handleProjectDeletion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), !existsAndNotEmpty(data === null || data === void 0 ? void 0 : data.projects) && /*#__PURE__*/React.createElement(NoProject, {\n    handleAddButtonClick: handleAddButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 56\n    }\n  })));\n};\n\nexport const ProjectsBack = memo(ProjectsBackComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_back/projects_back.jsx"],"names":["React","memo","useCallback","useContext","useMemo","FormattedMessage","createUseStyles","ProfileCardTitle","ProfileCardContent","ProjectSection","DEFAULT_PROJECT_IMAGE","styles","useCardVariant","DeveloperProfileContext","existsAndNotEmpty","NoProject","useStyles","ProjectsBackComponent","data","handleAddButtonClick","variant","onEdit","classes","imageSrc","projects","images","url","alt","title","handleProjectDeletion","index","newProjects","splice","container","typography","background","backgroundImage","stubBackground","map","project","id","ProjectsBack"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useContext, useMemo } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { ProfileCardTitle } from '../../../../commons/profile_card/profile_card_title/profile_card_title';\n\nimport { ProfileCardContent } from '../../../../commons/profile_card/profile_card_content/profile_card_content';\nimport { ProjectSection } from './project_section/project_section';\n\nimport { DEFAULT_PROJECT_IMAGE } from '../utils/images';\nimport { styles } from './projects_back_styles';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { DeveloperProfileContext } from '../../../../../utils/context/contexts';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoProject } from './no_project/no_project';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProjectsBackComponent = ({ data, handleAddButtonClick }) => {\n    const [variant] = useCardVariant();\n    const { onEdit } = useContext(DeveloperProfileContext);\n    const classes = useStyles({ variant });\n\n    const imageSrc = useMemo(() => data.projects?.[0]?.images?.url ?? DEFAULT_PROJECT_IMAGE, [\n        data.projects?.[0]?.images\n    ]);\n    const alt = data.projects?.[0]?.title;\n\n    const handleProjectDeletion = useCallback(\n        index => {\n            const newProjects = [...data.projects];\n            newProjects.splice(index, 1);\n            onEdit({ projects: newProjects });\n        },\n        [data, onEdit]\n    );\n\n    return (\n        <>\n            <ProfileCardTitle\n                customClasses={{\n                    container: classes.title,\n                    typography: classes.typography\n                }}\n                beforeTypography={\n                    <div className={classes.background}>\n                        {imageSrc && <img className={classes.backgroundImage} src={imageSrc} alt={alt} />}\n                        {!imageSrc && <div className={classes.stubBackground} />}\n                    </div>\n                }\n            >\n                <FormattedMessage id=\"Projects.back.title\" defaultMessage=\"Projects\" />\n            </ProfileCardTitle>\n            <ProfileCardContent>\n                {data.projects?.map(project => (\n                    <ProjectSection project={project} key={`project_${project.id}`} onDelete={handleProjectDeletion} />\n                ))}\n                {!existsAndNotEmpty(data?.projects) && <NoProject handleAddButtonClick={handleAddButtonClick} />}\n            </ProfileCardContent>\n        </>\n    );\n};\n\nexport const ProjectsBack = memo(ProjectsBackComponent);\n"]},"metadata":{},"sourceType":"module"}