{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/soundtrack/soundtrack_front/soundtrack_front.jsx\";\nimport React, { memo, useCallback } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontVector } from '../../../../commons/profile_card/profile_card_front_vector/profile_card_front_vector';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { ReactComponent as SpotifyLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/brands/spotify.svg\";\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\nimport { styles } from './soundtrack_front_styles';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nconst useStyles = createUseStyles(styles);\n\nconst SoundtrackFrontComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  const classes = useStyles();\n  const [side, setSide] = useCardSide();\n  const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [side, setSide]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCardPaddedFront, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CenterContentContainer, {\n    customClasses: {\n      container: classes.container\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({\n    data,\n    handleAddButtonClick,\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  })))), (data === null || data === void 0 ? void 0 : data.embedUrl) && /*#__PURE__*/React.createElement(ProfileCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardButton, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Soundtrack.front.button\",\n    defaultMessage: \"My playlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }))));\n};\n\nconst Content = ({\n  data,\n  handleAddButtonClick,\n  classes\n}) => {\n  if (!(data === null || data === void 0 ? void 0 : data.embedUrl)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.noSoundTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      component: \"h3\",\n      customClasses: {\n        container: classes.noSoundTrackTypography\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"SoundTrack.front.noSoundTrack\",\n      defaultMessage: \"Vous n'avez pas encore ajout\\xE9 de playlist !\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NoDataButton, {\n      handleAddButtonClick: handleAddButtonClick,\n      classes: {\n        container: classes.addButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"SoundTrack.noSoundTrack.buttonLabel\",\n      defaultMessage: \"Ajouter une playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCardFrontVector, {\n    customClasses: {\n      container: classes.logo\n    },\n    vector: SpotifyLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProfileCardFrontTypography, {\n    classes: {\n      container: classes.typography\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Soundtrack.front.title\",\n    defaultMessage: \"Discover my favourite tracks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const SoundtrackFront = memo(SoundtrackFrontComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/soundtrack/soundtrack_front/soundtrack_front.jsx"],"names":["React","memo","useCallback","FormattedMessage","createUseStyles","Typography","ProfileCardPaddedFront","CenterContentContainer","ProfileCardFrontVector","ProfileCardFrontTypography","ProfileCardActions","ProfileCardButton","SIDES","styles","useCardSide","NoDataButton","useStyles","SoundtrackFrontComponent","data","handleAddButtonClick","classes","side","setSide","handleButtonClick","FRONT","BACK","container","embedUrl","Content","noSoundTrack","noSoundTrackTypography","addButton","logo","SpotifyLogo","typography","SoundtrackFront"],"mappings":"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","sourcesContent":["import React, { memo, useCallback } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardFrontVector } from '../../../../commons/profile_card/profile_card_front_vector/profile_card_front_vector';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\n\nimport { ReactComponent as SpotifyLogo } from '../../../../../assets/icons/brands/spotify.svg';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\n\nimport { styles } from './soundtrack_front_styles';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\n\nconst useStyles = createUseStyles(styles);\n\nconst SoundtrackFrontComponent = ({ data, handleAddButtonClick }) => {\n    const classes = useStyles();\n    const [side, setSide] = useCardSide();\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    return (\n        <>\n            <ProfileCardPaddedFront>\n                <CenterContentContainer customClasses={{ container: classes.container }}>\n                    <Content {...{ data, handleAddButtonClick, classes }} />\n                </CenterContentContainer>\n            </ProfileCardPaddedFront>\n            {data?.embedUrl && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage id=\"Soundtrack.front.button\" defaultMessage=\"My playlist\" />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({ data, handleAddButtonClick, classes }) => {\n    if (!data?.embedUrl) {\n        return (\n            <div className={classes.noSoundTrack}>\n                <Typography variant=\"h3\" component=\"h3\" customClasses={{ container: classes.noSoundTrackTypography }}>\n                    <FormattedMessage\n                        id=\"SoundTrack.front.noSoundTrack\"\n                        defaultMessage=\"Vous n'avez pas encore ajouté de playlist !\"\n                    />\n                </Typography>\n                <NoDataButton\n                    handleAddButtonClick={handleAddButtonClick}\n                    classes={{\n                        container: classes.addButton\n                    }}\n                >\n                    <FormattedMessage id=\"SoundTrack.noSoundTrack.buttonLabel\" defaultMessage=\"Ajouter une playlist\" />\n                </NoDataButton>\n            </div>\n        );\n    }\n    return (\n        <>\n            <ProfileCardFrontVector customClasses={{ container: classes.logo }} vector={SpotifyLogo} />\n            <ProfileCardFrontTypography classes={{ container: classes.typography }}>\n                <FormattedMessage id=\"Soundtrack.front.title\" defaultMessage=\"Discover my favourite tracks\" />\n            </ProfileCardFrontTypography>\n        </>\n    );\n};\n\nexport const SoundtrackFront = memo(SoundtrackFrontComponent);\n"]},"metadata":{},"sourceType":"module"}