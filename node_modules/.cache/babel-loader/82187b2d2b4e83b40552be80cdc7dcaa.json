{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/commons/technologies/selected_technologies/selected_technologies.jsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\nimport { Card, List, Tooltip, Typography } from '@wld/ui';\nimport { SliderWithPopper } from '../../slider_with_popper/slider_with_popper';\nimport { ReactComponent as DeleteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../assets/icons/trash.svg\";\nimport { ReactComponent as MoveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../assets/icons/move_list.svg\";\nimport { useTechnologies } from '../../../hooks/technologies/use_technologies';\nimport { styles } from './selected_technologies_styles';\nconst useStyles = createUseStyles(styles);\nconst TechnologyRow = SortableElement(({\n  item,\n  onRemove,\n  onChange,\n  classes,\n  itemsLength,\n  technologyIndex\n}) => {\n  const {\n    technologies\n  } = useTechnologies();\n  const sliderChange = useCallback(e => {\n    onChange({ ...item,\n      value: Number(e.target.value)\n    });\n  }, [item, onChange]);\n  const imgUrl = useMemo(() => {\n    const technology = technologies === null || technologies === void 0 ? void 0 : technologies[item.name];\n\n    if (!technology) {\n      return null;\n    }\n\n    if (technology.handle) {\n      return `https://process.filestackapi.com/${technology.handle}`;\n    }\n\n    return technology.url;\n  }, [technologies, item]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.listItem,\n    style: {\n      zIndex: itemsLength - technologyIndex\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DragHandle, {\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"Main.lang.delete\",\n      defaultMessage: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.removeButton,\n    type: \"button\",\n    onClick: () => onRemove(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: classes.removeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.logoImage,\n    alt: item.name,\n    src: imgUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.textWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"dark\",\n    variant: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderValueContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.sliderValue\n    },\n    color: \"dark\",\n    variant: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Skills.Dialog.SliderValue\",\n    defaultMessage: \"{valueNode}%\",\n    values: {\n      valueNode: /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.bolden,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 50\n        }\n      }, item.value)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(SliderWithPopper, {\n    color: \"primary\",\n    name: `skill_value_${item.id}`,\n    value: item.value,\n    onChange: sliderChange,\n    min: 0,\n    max: 100,\n    debounce: 50,\n    classes: {\n      container: classes.slider\n    },\n    popperCardProps: {\n      customClasses: {\n        popper: classes.popper\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }))));\n});\nconst SortableTechnologies = SortableContainer(({\n  items,\n  onDelete,\n  onItemChange,\n  schools,\n  classes,\n  className,\n  receivedClasses,\n  itemsLength\n}) => /*#__PURE__*/React.createElement(List, {\n  className: cn(classes.container, className, receivedClasses.container),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }\n}, items.map((item, index) => /*#__PURE__*/React.createElement(TechnologyRow, {\n  key: `selected_technology_row_${item.id}`,\n  onRemove: onDelete,\n  id: item.id,\n  onChange: onItemChange,\n  technologyIndex: index,\n  index: index,\n  item: item,\n  schools: schools,\n  receivedClasses: receivedClasses,\n  classes: classes,\n  itemsLength: itemsLength,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 17\n  }\n}))));\nconst DragHandle = SortableHandle(({\n  classes\n}) => /*#__PURE__*/React.createElement(\"button\", {\n  className: classes.dragHandleButton,\n  type: \"button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(MoveIcon, {\n  className: classes.dragHandle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }\n})));\n\nconst SelectedTechnologiesComponent = ({\n  items,\n  onChange,\n  onDelete,\n  className,\n  onItemChange,\n  classes: receivedClasses = {}\n}) => {\n  const classes = useStyles();\n  const itemsLength = useMemo(() => items.length, [items]);\n  const move = useCallback(({\n    oldIndex,\n    newIndex\n  }) => {\n    onChange(arrayMove(items, oldIndex, newIndex).map((data, index) => ({ ...data,\n      index\n    })));\n  }, [items, onChange]);\n  return /*#__PURE__*/React.createElement(SortableTechnologies, {\n    lockToContainerEdges: true,\n    className: className,\n    helperClass: classes.sortableHelper,\n    items: items,\n    onSortEnd: move,\n    distance: 20,\n    useDragHandle: true,\n    lockAxis: \"y\",\n    name: \"education\",\n    onItemChange: onItemChange,\n    onDelete: onDelete,\n    receivedClasses: receivedClasses,\n    itemsLength: itemsLength,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  });\n};\n\nexport const SelectedTechnologies = SelectedTechnologiesComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/commons/technologies/selected_technologies/selected_technologies.jsx"],"names":["React","useCallback","useMemo","cn","createUseStyles","FormattedMessage","arrayMove","SortableContainer","SortableElement","SortableHandle","Card","List","Tooltip","Typography","SliderWithPopper","useTechnologies","styles","useStyles","TechnologyRow","item","onRemove","onChange","classes","itemsLength","technologyIndex","technologies","sliderChange","e","value","Number","target","imgUrl","technology","name","handle","url","listItem","zIndex","divider","removeButton","id","removeIcon","logo","logoImage","textWrapper","sliderValueContainer","container","sliderValue","valueNode","bolden","slider","customClasses","popper","SortableTechnologies","items","onDelete","onItemChange","schools","className","receivedClasses","map","index","DragHandle","dragHandleButton","dragHandle","SelectedTechnologiesComponent","length","move","oldIndex","newIndex","data","sortableHelper","SelectedTechnologies"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport { arrayMove, SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc';\n\nimport { Card, List, Tooltip, Typography } from '@wld/ui';\n\nimport { SliderWithPopper } from '../../slider_with_popper/slider_with_popper';\n\nimport { ReactComponent as DeleteIcon } from '../../../../assets/icons/trash.svg';\nimport { ReactComponent as MoveIcon } from '../../../../assets/icons/move_list.svg';\n\nimport { useTechnologies } from '../../../hooks/technologies/use_technologies';\n\nimport { styles } from './selected_technologies_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst TechnologyRow = SortableElement(({ item, onRemove, onChange, classes, itemsLength, technologyIndex }) => {\n    const { technologies } = useTechnologies();\n\n    const sliderChange = useCallback(\n        e => {\n            onChange({ ...item, value: Number(e.target.value) });\n        },\n        [item, onChange]\n    );\n    const imgUrl = useMemo(() => {\n        const technology = technologies?.[item.name];\n        if (!technology) {\n            return null;\n        }\n        if (technology.handle) {\n            return `https://process.filestackapi.com/${technology.handle}`;\n        }\n        return technology.url;\n    }, [technologies, item]);\n\n    return (\n        <li className={classes.listItem} style={{ zIndex: itemsLength - technologyIndex }}>\n            <DragHandle classes={classes} />\n            <div className={classes.divider} />\n            <Tooltip title={<FormattedMessage id=\"Main.lang.delete\" defaultMessage=\"Delete\" />}>\n                <button className={classes.removeButton} type=\"button\" onClick={() => onRemove(item.id)}>\n                    <DeleteIcon className={classes.removeIcon} />\n                </button>\n            </Tooltip>\n            <div className={classes.divider} />\n            <Card className={classes.logo}>\n                <img className={classes.logoImage} alt={item.name} src={imgUrl} />\n            </Card>\n            <div className={classes.textWrapper}>\n                <Typography color=\"dark\" variant=\"label\">\n                    {item.name}\n                </Typography>\n                <div className={classes.sliderValueContainer}>\n                    <Typography\n                        customClasses={{\n                            container: classes.sliderValue\n                        }}\n                        color=\"dark\"\n                        variant=\"label\"\n                    >\n                        <FormattedMessage\n                            id=\"Skills.Dialog.SliderValue\"\n                            defaultMessage=\"{valueNode}%\"\n                            values={{ valueNode: <span className={classes.bolden}>{item.value}</span> }}\n                        />\n                    </Typography>\n                    <SliderWithPopper\n                        color=\"primary\"\n                        name={`skill_value_${item.id}`}\n                        value={item.value}\n                        onChange={sliderChange}\n                        min={0}\n                        max={100}\n                        debounce={50}\n                        classes={{ container: classes.slider }}\n                        popperCardProps={{\n                            customClasses: {\n                                popper: classes.popper\n                            }\n                        }}\n                    />\n                </div>\n            </div>\n        </li>\n    );\n});\n\nconst SortableTechnologies = SortableContainer(\n    ({ items, onDelete, onItemChange, schools, classes, className, receivedClasses, itemsLength }) => (\n        <List className={cn(classes.container, className, receivedClasses.container)}>\n            {items.map((item, index) => (\n                <TechnologyRow\n                    key={`selected_technology_row_${item.id}`}\n                    onRemove={onDelete}\n                    id={item.id}\n                    onChange={onItemChange}\n                    technologyIndex={index}\n                    index={index}\n                    item={item}\n                    schools={schools}\n                    receivedClasses={receivedClasses}\n                    classes={classes}\n                    itemsLength={itemsLength}\n                />\n            ))}\n        </List>\n    )\n);\n\nconst DragHandle = SortableHandle(({ classes }) => (\n    <button className={classes.dragHandleButton} type=\"button\">\n        <MoveIcon className={classes.dragHandle} />\n    </button>\n));\n\nconst SelectedTechnologiesComponent = ({\n    items,\n    onChange,\n    onDelete,\n    className,\n    onItemChange,\n    classes: receivedClasses = {}\n}) => {\n    const classes = useStyles();\n    const itemsLength = useMemo(() => items.length, [items]);\n\n    const move = useCallback(\n        ({ oldIndex, newIndex }) => {\n            onChange(arrayMove(items, oldIndex, newIndex).map((data, index) => ({ ...data, index })));\n        },\n        [items, onChange]\n    );\n\n    return (\n        <SortableTechnologies\n            lockToContainerEdges\n            className={className}\n            helperClass={classes.sortableHelper}\n            items={items}\n            onSortEnd={move}\n            distance={20}\n            useDragHandle\n            lockAxis=\"y\"\n            name=\"education\"\n            onItemChange={onItemChange}\n            onDelete={onDelete}\n            receivedClasses={receivedClasses}\n            itemsLength={itemsLength}\n            classes={classes}\n        />\n    );\n};\n\nexport const SelectedTechnologies = SelectedTechnologiesComponent;\n"]},"metadata":{},"sourceType":"module"}