{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/soundtrack/soundtrack_card.jsx\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { SoundtrackFront } from './soundtrack_front/soundtrack_front';\nimport { SoundtrackBack } from './soundtrack_back/soundtrack_back';\nimport { FlatObjectToJsonResume, JsonResumeToFlatObject } from '../../utils/data_mapping';\nimport { SoundtrackCardEditDialog } from './edit_dialog/soundtrack_card_edit_dialog';\nimport { SoundtrackMapping } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { SoundtrackValidationSchema, validateSoundtrackComplete } from './data/validator';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst SoundtrackCardComponent = ({\n  variant,\n  side\n}) => {\n  const [mode] = useMode();\n  const {\n    data,\n    isEditing,\n    onEdit\n  } = useContext(DeveloperProfileContext);\n  const mappedData = useMemo(() => JsonResumeToFlatObject(data, SoundtrackMapping), [data]);\n  const onDialogEdited = useCallback(editedData => {\n    onEdit(FlatObjectToJsonResume(editedData, SoundtrackMapping));\n  }, [onEdit]);\n  const isComplete = useMemo(() => validateSoundtrackComplete(mappedData), [mappedData]);\n  const currentSide = useMemo(() => {\n    if (!isComplete && !isEditing) {\n      return SIDES.FRONT;\n    }\n\n    return side;\n  }, [side, isComplete, isEditing]);\n\n  if (!isComplete && mode !== 'edit') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ProfileCard, {\n    kind: \"soundtrack\",\n    isComplete: isComplete,\n    isEditingProfile: isEditing,\n    data: mappedData,\n    sides: {\n      front: props => /*#__PURE__*/React.createElement(SoundtrackFront, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      })),\n      back: props => /*#__PURE__*/React.createElement(SoundtrackBack, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }\n      }))\n    },\n    editDialog: {\n      component: SoundtrackCardEditDialog,\n      onEdit: onDialogEdited,\n      validationSchema: SoundtrackValidationSchema\n    },\n    variant: variant,\n    side: currentSide,\n    isTransitionUnique: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  });\n};\n\nexport const SoundtrackCard = SoundtrackCardComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/soundtrack/soundtrack_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","SoundtrackFront","SoundtrackBack","FlatObjectToJsonResume","JsonResumeToFlatObject","SoundtrackCardEditDialog","SoundtrackMapping","DeveloperProfileContext","SoundtrackValidationSchema","validateSoundtrackComplete","SIDES","useMode","SoundtrackCardComponent","variant","side","mode","data","isEditing","onEdit","mappedData","onDialogEdited","editedData","isComplete","currentSide","FRONT","front","props","back","component","validationSchema","SoundtrackCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,OAAzC,QAAwD,OAAxD;AAEA,SAASC,WAAT,QAA4B,4CAA5B;AACA,SAASC,eAAT,QAAgC,qCAAhC;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,0BAA/D;AACA,SAASC,wBAAT,QAAyC,2CAAzC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,uBAAT,QAAwC,oCAAxC;AACA,SAASC,0BAAT,EAAqCC,0BAArC,QAAuE,kBAAvE;AACA,SAASC,KAAT,QAAsB,sDAAtB;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACnD,QAAM,CAACC,IAAD,IAASJ,OAAO,EAAtB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA8BpB,UAAU,CAACS,uBAAD,CAA9C;AACA,QAAMY,UAAU,GAAGpB,OAAO,CAAC,MAAMK,sBAAsB,CAACY,IAAD,EAAOV,iBAAP,CAA7B,EAAwD,CAACU,IAAD,CAAxD,CAA1B;AAEA,QAAMI,cAAc,GAAGvB,WAAW,CAC9BwB,UAAU,IAAI;AACVH,IAAAA,MAAM,CAACf,sBAAsB,CAACkB,UAAD,EAAaf,iBAAb,CAAvB,CAAN;AACH,GAH6B,EAI9B,CAACY,MAAD,CAJ8B,CAAlC;AAOA,QAAMI,UAAU,GAAGvB,OAAO,CAAC,MAAMU,0BAA0B,CAACU,UAAD,CAAjC,EAA+C,CAACA,UAAD,CAA/C,CAA1B;AAEA,QAAMI,WAAW,GAAGxB,OAAO,CAAC,MAAM;AAC9B,QAAI,CAACuB,UAAD,IAAe,CAACL,SAApB,EAA+B;AAC3B,aAAOP,KAAK,CAACc,KAAb;AACH;;AACD,WAAOV,IAAP;AACH,GAL0B,EAKxB,CAACA,IAAD,EAAOQ,UAAP,EAAmBL,SAAnB,CALwB,CAA3B;;AAOA,MAAI,CAACK,UAAD,IAAeP,IAAI,KAAK,MAA5B,EAAoC;AAChC,WAAO,IAAP;AACH;;AAED,sBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,UAAU,EAAEO,UAFhB;AAGI,IAAA,gBAAgB,EAAEL,SAHtB;AAII,IAAA,IAAI,EAAEE,UAJV;AAKI,IAAA,KAAK,EAAE;AACHM,MAAAA,KAAK,EAAEC,KAAK,iBAAI,oBAAC,eAAD,oBAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADb;AAEHC,MAAAA,IAAI,EAAED,KAAK,iBAAI,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFZ,KALX;AASI,IAAA,UAAU,EAAE;AACRE,MAAAA,SAAS,EAAEvB,wBADH;AAERa,MAAAA,MAAM,EAAEE,cAFA;AAGRS,MAAAA,gBAAgB,EAAErB;AAHV,KAThB;AAcI,IAAA,OAAO,EAAEK,OAdb;AAeI,IAAA,IAAI,EAAEU,WAfV;AAgBI,IAAA,kBAAkB,EAAE,KAhBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAoBH,CA7CD;;AA+CA,OAAO,MAAMO,cAAc,GAAGlB,uBAAvB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { SoundtrackFront } from './soundtrack_front/soundtrack_front';\nimport { SoundtrackBack } from './soundtrack_back/soundtrack_back';\nimport { FlatObjectToJsonResume, JsonResumeToFlatObject } from '../../utils/data_mapping';\nimport { SoundtrackCardEditDialog } from './edit_dialog/soundtrack_card_edit_dialog';\nimport { SoundtrackMapping } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { SoundtrackValidationSchema, validateSoundtrackComplete } from './data/validator';\nimport { SIDES } from '../../../commons/profile_card/profile_card_side/side';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst SoundtrackCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, isEditing, onEdit } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => JsonResumeToFlatObject(data, SoundtrackMapping), [data]);\n\n    const onDialogEdited = useCallback(\n        editedData => {\n            onEdit(FlatObjectToJsonResume(editedData, SoundtrackMapping));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateSoundtrackComplete(mappedData), [mappedData]);\n\n    const currentSide = useMemo(() => {\n        if (!isComplete && !isEditing) {\n            return SIDES.FRONT;\n        }\n        return side;\n    }, [side, isComplete, isEditing]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n\n    return (\n        <ProfileCard\n            kind=\"soundtrack\"\n            isComplete={isComplete}\n            isEditingProfile={isEditing}\n            data={mappedData}\n            sides={{\n                front: props => <SoundtrackFront {...props} />,\n                back: props => <SoundtrackBack {...props} />\n            }}\n            editDialog={{\n                component: SoundtrackCardEditDialog,\n                onEdit: onDialogEdited,\n                validationSchema: SoundtrackValidationSchema\n            }}\n            variant={variant}\n            side={currentSide}\n            isTransitionUnique={false}\n        />\n    );\n};\n\nexport const SoundtrackCard = SoundtrackCardComponent;\n"]},"metadata":{},"sourceType":"module"}