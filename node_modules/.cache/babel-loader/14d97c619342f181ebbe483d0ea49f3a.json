{"ast":null,"code":"import moment from 'moment';\nimport uuid from 'uuid/v4';\nexport const mapWorkFromJsonResume = jsonResume => {\n  var _jsonResume$work;\n\n  return {\n    work: jsonResume === null || jsonResume === void 0 ? void 0 : (_jsonResume$work = jsonResume.work) === null || _jsonResume$work === void 0 ? void 0 : _jsonResume$work.map((work, index) => ({ ...work,\n      // generating uuid for manipulating data if not present\n      id: work.id || uuid(),\n      startDate: work.startDate && moment(work.startDate, 'YYYY-MM-DD'),\n      endDate: work.endDate && moment(work.endDate, 'YYYY-MM-DD'),\n      place: {\n        name: work.location,\n        placeId: work.placeId\n      },\n      stillEmployed: !work.endDate,\n      index\n    }))\n  };\n};\nexport const mapWorkToJsonResume = data => {\n  var _data$work;\n\n  return {\n    work: (_data$work = data.work) === null || _data$work === void 0 ? void 0 : _data$work.map(work => {\n      var _work$place$name, _work$place, _work$startDate, _work$endDate;\n\n      return { ...work,\n        location: (_work$place$name = (_work$place = work.place) === null || _work$place === void 0 ? void 0 : _work$place.name) !== null && _work$place$name !== void 0 ? _work$place$name : work.location,\n        startDate: (_work$startDate = work.startDate) === null || _work$startDate === void 0 ? void 0 : _work$startDate.format('YYYY-MM-DD'),\n        endDate: (_work$endDate = work.endDate) === null || _work$endDate === void 0 ? void 0 : _work$endDate.format('YYYY-MM-DD')\n      };\n    })\n  };\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/experiences/data/mapping.js"],"names":["moment","uuid","mapWorkFromJsonResume","jsonResume","work","map","index","id","startDate","endDate","place","name","location","placeId","stillEmployed","mapWorkToJsonResume","data","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,qBAAqB,GAAGC,UAAU;AAAA;;AAAA,SAAK;AAChDC,IAAAA,IAAI,EAAED,UAAF,aAAEA,UAAF,2CAAEA,UAAU,CAAEC,IAAd,qDAAE,iBAAkBC,GAAlB,CAAsB,CAACD,IAAD,EAAOE,KAAP,MAAkB,EAC1C,GAAGF,IADuC;AAE1C;AACAG,MAAAA,EAAE,EAAEH,IAAI,CAACG,EAAL,IAAWN,IAAI,EAHuB;AAI1CO,MAAAA,SAAS,EAAEJ,IAAI,CAACI,SAAL,IAAkBR,MAAM,CAACI,IAAI,CAACI,SAAN,EAAiB,YAAjB,CAJO;AAK1CC,MAAAA,OAAO,EAAEL,IAAI,CAACK,OAAL,IAAgBT,MAAM,CAACI,IAAI,CAACK,OAAN,EAAe,YAAf,CALW;AAM1CC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAEP,IAAI,CAACQ,QADR;AAEHC,QAAAA,OAAO,EAAET,IAAI,CAACS;AAFX,OANmC;AAU1CC,MAAAA,aAAa,EAAE,CAACV,IAAI,CAACK,OAVqB;AAW1CH,MAAAA;AAX0C,KAAlB,CAAtB;AAD0C,GAAL;AAAA,CAAxC;AAgBP,OAAO,MAAMS,mBAAmB,GAAGC,IAAI;AAAA;;AAAA,SAAK;AACxCZ,IAAAA,IAAI,gBAAEY,IAAI,CAACZ,IAAP,+CAAE,WAAWC,GAAX,CAAeD,IAAI;AAAA;;AAAA,aAAK,EAC1B,GAAGA,IADuB;AAE1BQ,QAAAA,QAAQ,qCAAER,IAAI,CAACM,KAAP,gDAAE,YAAYC,IAAd,+DAAsBP,IAAI,CAACQ,QAFT;AAG1BJ,QAAAA,SAAS,qBAAEJ,IAAI,CAACI,SAAP,oDAAE,gBAAgBS,MAAhB,CAAuB,YAAvB,CAHe;AAI1BR,QAAAA,OAAO,mBAAEL,IAAI,CAACK,OAAP,kDAAE,cAAcQ,MAAd,CAAqB,YAArB;AAJiB,OAAL;AAAA,KAAnB;AADkC,GAAL;AAAA,CAAhC","sourcesContent":["import moment from 'moment';\nimport uuid from 'uuid/v4';\n\nexport const mapWorkFromJsonResume = jsonResume => ({\n    work: jsonResume?.work?.map((work, index) => ({\n        ...work,\n        // generating uuid for manipulating data if not present\n        id: work.id || uuid(),\n        startDate: work.startDate && moment(work.startDate, 'YYYY-MM-DD'),\n        endDate: work.endDate && moment(work.endDate, 'YYYY-MM-DD'),\n        place: {\n            name: work.location,\n            placeId: work.placeId\n        },\n        stillEmployed: !work.endDate,\n        index\n    }))\n});\n\nexport const mapWorkToJsonResume = data => ({\n    work: data.work?.map(work => ({\n        ...work,\n        location: work.place?.name ?? work.location,\n        startDate: work.startDate?.format('YYYY-MM-DD'),\n        endDate: work.endDate?.format('YYYY-MM-DD')\n    }))\n});\n"]},"metadata":{},"sourceType":"module"}