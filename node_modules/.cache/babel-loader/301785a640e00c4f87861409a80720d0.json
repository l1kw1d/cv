{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_back/project_section/project_section.jsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Typography } from '@wld/ui';\nimport { ProfileCardSectionTitle } from '../../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardSectionSubtitle } from '../../../../../commons/profile_card/profile_card_section_subtitle/profile_card_section_subtitle';\nimport { ProfileCardSectionText } from '../../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { ProfileCardSection } from '../../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { SeeProjectDetail } from '../../see_project_detail/see_project_detail';\nimport { AnimatedUnderlinedButton } from '../../../../../commons/animated_underlined_button/animated_underlined_button';\nimport { ConfirmDialog } from '../../../../../commons/confirm_dialog/confirm_dialog';\nimport { ReactComponent as LinkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../assets/icons/link.svg\";\nimport { ReactComponent as RemoveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../../assets/icons/remove_circle.svg\";\nimport { useIsEditing } from '../../../../../hooks/use_is_editing';\nimport { useCallbackOpen } from '../../../../../hooks/use_callback_open';\nimport { styles } from './project_section_styles';\nimport { useCardVariant } from '../../../../../hooks/profile_card_hooks/use_card_variant';\nimport { getColorsFromCardVariant } from '../../../../../../utils/styles/styles_utils';\nconst useStyles = createUseStyles(styles);\n\nconst ProjectSectionContainer = ({\n  project,\n  cardVariant,\n  onDelete,\n  index\n}) => {\n  const classes = useStyles();\n  const descriptionChunks = useMemo(() => {\n    var _project$description;\n\n    return (_project$description = project.description) === null || _project$description === void 0 ? void 0 : _project$description.split('\\n').map((descriptionChunk, chunkIndex) => /*#__PURE__*/React.createElement(\"p\", {\n      key: `project_description_chunk_${project.id}_${chunkIndex}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, descriptionChunk));\n  }, [project.description]);\n  const formattedDate = useMemo(() => {\n    var _project$date;\n\n    return (_project$date = project.date) === null || _project$date === void 0 ? void 0 : _project$date.year();\n  }, [project.date]);\n  return /*#__PURE__*/React.createElement(ProfileCardSection, {\n    cardVariant: cardVariant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardSectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, project.name), /*#__PURE__*/React.createElement(ProfileCardSectionSubtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, formattedDate), /*#__PURE__*/React.createElement(ProfileCardSectionText, {\n    customClasses: {\n      container: classes.sectionText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, descriptionChunks), /*#__PURE__*/React.createElement(Details, {\n    classes: classes,\n    project: project,\n    onDelete: onDelete,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Details = ({\n  project,\n  index,\n  onDelete,\n  classes\n}) => {\n  const theme = useTheme();\n  const [isEditing] = useIsEditing();\n  const [variant] = useCardVariant();\n  const color = getColorsFromCardVariant(theme, variant).backColor;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, project.link && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AnimatedUnderlinedButton, {\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: classes.link,\n    href: project.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(LinkIcon, {\n    className: classes.detailIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.detailTypography\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Project.section.link\",\n    defaultMessage: \"Link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SeeProjectDetail, {\n    color: color,\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), isEditing && /*#__PURE__*/React.createElement(RemoveProjectDetail, {\n    color: color,\n    index: index,\n    onDelete: onDelete,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }));\n};\n\nconst RemoveProjectDetail = ({\n  color,\n  index,\n  onDelete,\n  classes\n}) => {\n  const [openDialog, setDialogOpened, setDialogClosed] = useCallbackOpen();\n  const handleConfirm = useCallback(() => {\n    onDelete(index);\n    setDialogClosed();\n  }, [onDelete, index]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ConfirmDialog, {\n    open: openDialog,\n    onClose: setDialogClosed,\n    onConfirm: handleConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AnimatedUnderlinedButton, {\n    color: color,\n    onClick: setDialogOpened,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RemoveIcon, {\n    className: classes.detailDeleteIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.detailTypography\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Main.lang.delete\",\n    defaultMessage: \"Delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport const ProjectSection = ProjectSectionContainer;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/projects_back/project_section/project_section.jsx"],"names":["React","useCallback","useMemo","FormattedMessage","createUseStyles","useTheme","Typography","ProfileCardSectionTitle","ProfileCardSectionSubtitle","ProfileCardSectionText","ProfileCardSection","SeeProjectDetail","AnimatedUnderlinedButton","ConfirmDialog","useIsEditing","useCallbackOpen","styles","useCardVariant","getColorsFromCardVariant","useStyles","ProjectSectionContainer","project","cardVariant","onDelete","index","classes","descriptionChunks","description","split","map","descriptionChunk","chunkIndex","id","formattedDate","date","year","name","container","sectionText","Details","theme","isEditing","variant","color","backColor","details","link","detail","detailIcon","detailTypography","RemoveProjectDetail","openDialog","setDialogOpened","setDialogClosed","handleConfirm","detailDeleteIcon","ProjectSection"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Typography } from '@wld/ui';\n\nimport { ProfileCardSectionTitle } from '../../../../../commons/profile_card/profile_card_section_title/profile_card_section_title';\nimport { ProfileCardSectionSubtitle } from '../../../../../commons/profile_card/profile_card_section_subtitle/profile_card_section_subtitle';\nimport { ProfileCardSectionText } from '../../../../../commons/profile_card/profile_card_section_text/profile_card_section_text';\nimport { ProfileCardSection } from '../../../../../commons/profile_card/profile_card_section/profile_card_section';\nimport { SeeProjectDetail } from '../../see_project_detail/see_project_detail';\nimport { AnimatedUnderlinedButton } from '../../../../../commons/animated_underlined_button/animated_underlined_button';\nimport { ConfirmDialog } from '../../../../../commons/confirm_dialog/confirm_dialog';\n\nimport { ReactComponent as LinkIcon } from '../../../../../../assets/icons/link.svg';\nimport { ReactComponent as RemoveIcon } from '../../../../../../assets/icons/remove_circle.svg';\n\nimport { useIsEditing } from '../../../../../hooks/use_is_editing';\nimport { useCallbackOpen } from '../../../../../hooks/use_callback_open';\n\nimport { styles } from './project_section_styles';\nimport { useCardVariant } from '../../../../../hooks/profile_card_hooks/use_card_variant';\nimport { getColorsFromCardVariant } from '../../../../../../utils/styles/styles_utils';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProjectSectionContainer = ({ project, cardVariant, onDelete, index }) => {\n    const classes = useStyles();\n\n    const descriptionChunks = useMemo(\n        () =>\n            project.description\n                ?.split('\\n')\n                .map((descriptionChunk, chunkIndex) => (\n                    <p key={`project_description_chunk_${project.id}_${chunkIndex}`}>{descriptionChunk}</p>\n                )),\n        [project.description]\n    );\n\n    const formattedDate = useMemo(() => project.date?.year(), [project.date]);\n    return (\n        <ProfileCardSection cardVariant={cardVariant}>\n            <ProfileCardSectionTitle>{project.name}</ProfileCardSectionTitle>\n            <ProfileCardSectionSubtitle>{formattedDate}</ProfileCardSectionSubtitle>\n            <ProfileCardSectionText customClasses={{ container: classes.sectionText }}>\n                {descriptionChunks}\n            </ProfileCardSectionText>\n            <Details classes={classes} project={project} onDelete={onDelete} index={index} />\n        </ProfileCardSection>\n    );\n};\n\nconst Details = ({ project, index, onDelete, classes }) => {\n    const theme = useTheme();\n    const [isEditing] = useIsEditing();\n    const [variant] = useCardVariant();\n\n    const color = getColorsFromCardVariant(theme, variant).backColor;\n\n    return (\n        <div className={classes.details}>\n            {project.link && (\n                <div className={classes.detail}>\n                    <AnimatedUnderlinedButton color={color}>\n                        <a className={classes.link} href={project.link}>\n                            <LinkIcon className={classes.detailIcon} />\n                            <Typography customClasses={{ container: classes.detailTypography }} color=\"primary\">\n                                <FormattedMessage id=\"Project.section.link\" defaultMessage=\"Link\" />\n                            </Typography>\n                        </a>\n                    </AnimatedUnderlinedButton>\n                </div>\n            )}\n            <div className={classes.detail}>\n                <SeeProjectDetail color={color} project={project} />\n            </div>\n            {isEditing && <RemoveProjectDetail color={color} index={index} onDelete={onDelete} classes={classes} />}\n        </div>\n    );\n};\n\nconst RemoveProjectDetail = ({ color, index, onDelete, classes }) => {\n    const [openDialog, setDialogOpened, setDialogClosed] = useCallbackOpen();\n\n    const handleConfirm = useCallback(() => {\n        onDelete(index);\n        setDialogClosed();\n    }, [onDelete, index]);\n\n    return (\n        <>\n            <ConfirmDialog open={openDialog} onClose={setDialogClosed} onConfirm={handleConfirm} />\n            <div className={classes.detail}>\n                <AnimatedUnderlinedButton color={color} onClick={setDialogOpened}>\n                    <RemoveIcon className={classes.detailDeleteIcon} />\n                    <Typography customClasses={{ container: classes.detailTypography }} color=\"primary\">\n                        <FormattedMessage id=\"Main.lang.delete\" defaultMessage=\"Delete\" />\n                    </Typography>\n                </AnimatedUnderlinedButton>\n            </div>\n        </>\n    );\n};\n\nexport const ProjectSection = ProjectSectionContainer;\n"]},"metadata":{},"sourceType":"module"}