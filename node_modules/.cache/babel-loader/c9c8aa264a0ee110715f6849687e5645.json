{"ast":null,"code":"import uuid from 'uuid/v4';\nimport moment from 'moment';\nexport const mapProjectsFromJsonResume = jsonResume => {\n  var _jsonResume$projects;\n\n  return {\n    projects: jsonResume === null || jsonResume === void 0 ? void 0 : (_jsonResume$projects = jsonResume.projects) === null || _jsonResume$projects === void 0 ? void 0 : _jsonResume$projects.map((project, index) => ({ ...project,\n      // generating uuid for manipulating data if not present\n      id: project.id || uuid(),\n      date: project.endDate && moment(project.endDate, 'YYYY-MM-DD'),\n      index: project.index || index\n    }))\n  };\n};\nexport const mapProjectToJsonResume = project => ({ ...project,\n  id: project.id || uuid(),\n  endDate: project.date && project.date.format('YYYY-MM-DD')\n});\nexport const updateProjectsArray = (newProject, jsonResume) => {\n  var _jsonResume$projects2;\n\n  if (!((_jsonResume$projects2 = jsonResume.projects) === null || _jsonResume$projects2 === void 0 ? void 0 : _jsonResume$projects2.length)) {\n    return {\n      projects: [newProject]\n    };\n  }\n\n  const newProjects = [...jsonResume.projects];\n\n  if (!Number.isNaN(Number(newProject.index))) {\n    newProjects[newProject.index] = newProject;\n    return {\n      projects: newProjects\n    };\n  }\n\n  return {\n    projects: newProjects.concat(newProject)\n  };\n};","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/data/mapping.js"],"names":["uuid","moment","mapProjectsFromJsonResume","jsonResume","projects","map","project","index","id","date","endDate","mapProjectToJsonResume","format","updateProjectsArray","newProject","length","newProjects","Number","isNaN","concat"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,yBAAyB,GAAGC,UAAU;AAAA;;AAAA,SAAK;AACpDC,IAAAA,QAAQ,EAAED,UAAF,aAAEA,UAAF,+CAAEA,UAAU,CAAEC,QAAd,yDAAE,qBAAsBC,GAAtB,CAA0B,CAACC,OAAD,EAAUC,KAAV,MAAqB,EACrD,GAAGD,OADkD;AAErD;AACAE,MAAAA,EAAE,EAAEF,OAAO,CAACE,EAAR,IAAcR,IAAI,EAH+B;AAIrDS,MAAAA,IAAI,EAAEH,OAAO,CAACI,OAAR,IAAmBT,MAAM,CAACK,OAAO,CAACI,OAAT,EAAkB,YAAlB,CAJsB;AAKrDH,MAAAA,KAAK,EAAED,OAAO,CAACC,KAAR,IAAiBA;AAL6B,KAArB,CAA1B;AAD0C,GAAL;AAAA,CAA5C;AAUP,OAAO,MAAMI,sBAAsB,GAAGL,OAAO,KAAK,EAC9C,GAAGA,OAD2C;AAE9CE,EAAAA,EAAE,EAAEF,OAAO,CAACE,EAAR,IAAcR,IAAI,EAFwB;AAG9CU,EAAAA,OAAO,EAAEJ,OAAO,CAACG,IAAR,IAAgBH,OAAO,CAACG,IAAR,CAAaG,MAAb,CAAoB,YAApB;AAHqB,CAAL,CAAtC;AAMP,OAAO,MAAMC,mBAAmB,GAAG,CAACC,UAAD,EAAaX,UAAb,KAA4B;AAAA;;AAC3D,MAAI,2BAACA,UAAU,CAACC,QAAZ,0DAAC,sBAAqBW,MAAtB,CAAJ,EAAkC;AAC9B,WAAO;AAAEX,MAAAA,QAAQ,EAAE,CAACU,UAAD;AAAZ,KAAP;AACH;;AACD,QAAME,WAAW,GAAG,CAAC,GAAGb,UAAU,CAACC,QAAf,CAApB;;AAEA,MAAI,CAACa,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACH,UAAU,CAACP,KAAZ,CAAnB,CAAL,EAA6C;AACzCS,IAAAA,WAAW,CAACF,UAAU,CAACP,KAAZ,CAAX,GAAgCO,UAAhC;AACA,WAAO;AAAEV,MAAAA,QAAQ,EAAEY;AAAZ,KAAP;AACH;;AACD,SAAO;AAAEZ,IAAAA,QAAQ,EAAEY,WAAW,CAACG,MAAZ,CAAmBL,UAAnB;AAAZ,GAAP;AACH,CAXM","sourcesContent":["import uuid from 'uuid/v4';\nimport moment from 'moment';\n\nexport const mapProjectsFromJsonResume = jsonResume => ({\n    projects: jsonResume?.projects?.map((project, index) => ({\n        ...project,\n        // generating uuid for manipulating data if not present\n        id: project.id || uuid(),\n        date: project.endDate && moment(project.endDate, 'YYYY-MM-DD'),\n        index: project.index || index\n    }))\n});\n\nexport const mapProjectToJsonResume = project => ({\n    ...project,\n    id: project.id || uuid(),\n    endDate: project.date && project.date.format('YYYY-MM-DD')\n});\n\nexport const updateProjectsArray = (newProject, jsonResume) => {\n    if (!jsonResume.projects?.length) {\n        return { projects: [newProject] };\n    }\n    const newProjects = [...jsonResume.projects];\n\n    if (!Number.isNaN(Number(newProject.index))) {\n        newProjects[newProject.index] = newProject;\n        return { projects: newProjects };\n    }\n    return { projects: newProjects.concat(newProject) };\n};\n"]},"metadata":{},"sourceType":"module"}