{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/dream_job/dream_job_edit_dialog/current_job_issues_field/current_job_issues_field.jsx\";\nimport React from 'react';\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { animated, useTransition } from 'react-spring';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { TextField, Typography } from '@wld/ui';\nimport { CheckboxGroup } from '../../../../../commons/checkbox_group/checkbox_group';\nimport { CheckboxField } from '../../../../../commons/checkbox_field/checkbox_group';\nimport { JobIssues } from '../../../../../../utils/enums/job_issues/job_issues_utils';\nimport { EditDialogField } from '../../../../../commons/edit_dialog_field/edit_dialog_field';\nimport { CURRENT_JOB_ISSUES_FIELD_OTHER_TEXTFIELD_TRANSITIONS_SPRING_PROPS } from './current_job_issues_field_spring_props';\nimport { translations } from '../../../../../../utils/enums/job_issues/job_issues_translations';\nimport { styles } from './current_job_issues_field_styles';\nconst useStyles = createUseStyles(styles);\n\nconst CurrentJobIssuesFieldComponent = ({\n  error,\n  checkboxGroupCurrentJobIssues,\n  checkedCurrentJobIssues,\n  onChange,\n  toggleOtherCurrentJobIssue,\n  otherCurrentJobIssue,\n  handleChange,\n  currentJobIssues\n}) => {\n  const classes = useStyles();\n  const {\n    formatMessage\n  } = useIntl();\n  const transitions = useTransition(otherCurrentJobIssue !== null, item => `other_field_${item ? 'visible' : 'invisible'}`, { ...CURRENT_JOB_ISSUES_FIELD_OTHER_TEXTFIELD_TRANSITIONS_SPRING_PROPS,\n    unique: true\n  });\n  return /*#__PURE__*/React.createElement(EditDialogField, {\n    error: error,\n    title: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"DreamJob.editDialog.currentJobIssues.title\",\n      defaultMessage: \"Which issues do you encounter in your current job?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxGroup, {\n    rows: 2,\n    values: checkboxGroupCurrentJobIssues,\n    translations: translations,\n    value: checkedCurrentJobIssues,\n    name: \"perks\",\n    variant: \"outlined\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.othersCheckbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxField, {\n    title: /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }\n    }, formatMessage(translations.other)),\n    onClick: toggleOtherCurrentJobIssue,\n    checked: otherCurrentJobIssue !== null,\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), transitions.map(({\n    item,\n    key,\n    props\n  }) => item && /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    key: key,\n    containerElement: animated.div,\n    customClasses: {\n      container: cn(classes.textField, classes.otherTextField)\n    },\n    onChange: handleChange,\n    name: `currentJobIssue[${JobIssues.OTHER}]`,\n    value: currentJobIssues[JobIssues.OTHER],\n    variant: \"flat\",\n    containerProps: {\n      style: props\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport const CurrentJobIssuesField = CurrentJobIssuesFieldComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/dream_job/dream_job_edit_dialog/current_job_issues_field/current_job_issues_field.jsx"],"names":["React","cn","createUseStyles","animated","useTransition","FormattedMessage","useIntl","TextField","Typography","CheckboxGroup","CheckboxField","JobIssues","EditDialogField","CURRENT_JOB_ISSUES_FIELD_OTHER_TEXTFIELD_TRANSITIONS_SPRING_PROPS","translations","styles","useStyles","CurrentJobIssuesFieldComponent","error","checkboxGroupCurrentJobIssues","checkedCurrentJobIssues","onChange","toggleOtherCurrentJobIssue","otherCurrentJobIssue","handleChange","currentJobIssues","classes","formatMessage","transitions","item","unique","othersCheckbox","other","map","key","props","div","container","textField","otherTextField","OTHER","style","CurrentJobIssuesField"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { animated, useTransition } from 'react-spring';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { TextField, Typography } from '@wld/ui';\nimport { CheckboxGroup } from '../../../../../commons/checkbox_group/checkbox_group';\nimport { CheckboxField } from '../../../../../commons/checkbox_field/checkbox_group';\nimport { JobIssues } from '../../../../../../utils/enums/job_issues/job_issues_utils';\nimport { EditDialogField } from '../../../../../commons/edit_dialog_field/edit_dialog_field';\n\nimport { CURRENT_JOB_ISSUES_FIELD_OTHER_TEXTFIELD_TRANSITIONS_SPRING_PROPS } from './current_job_issues_field_spring_props';\n\nimport { translations } from '../../../../../../utils/enums/job_issues/job_issues_translations';\nimport { styles } from './current_job_issues_field_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst CurrentJobIssuesFieldComponent = ({\n    error,\n    checkboxGroupCurrentJobIssues,\n    checkedCurrentJobIssues,\n    onChange,\n    toggleOtherCurrentJobIssue,\n    otherCurrentJobIssue,\n    handleChange,\n    currentJobIssues\n}) => {\n    const classes = useStyles();\n    const { formatMessage } = useIntl();\n\n    const transitions = useTransition(\n        otherCurrentJobIssue !== null,\n        item => `other_field_${item ? 'visible' : 'invisible'}`,\n        {\n            ...CURRENT_JOB_ISSUES_FIELD_OTHER_TEXTFIELD_TRANSITIONS_SPRING_PROPS,\n            unique: true\n        }\n    );\n\n    return (\n        <EditDialogField\n            error={error}\n            title={\n                <FormattedMessage\n                    id=\"DreamJob.editDialog.currentJobIssues.title\"\n                    defaultMessage=\"Which issues do you encounter in your current job?\"\n                />\n            }\n        >\n            <CheckboxGroup\n                rows={2}\n                values={checkboxGroupCurrentJobIssues}\n                translations={translations}\n                value={checkedCurrentJobIssues}\n                name=\"perks\"\n                variant=\"outlined\"\n                onChange={onChange}\n            />\n            <div className={classes.othersCheckbox}>\n                <CheckboxField\n                    title={<Typography>{formatMessage(translations.other)}</Typography>}\n                    onClick={toggleOtherCurrentJobIssue}\n                    checked={otherCurrentJobIssue !== null}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                />\n            </div>\n            {transitions.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <TextField\n                            fullWidth\n                            key={key}\n                            containerElement={animated.div}\n                            customClasses={{ container: cn(classes.textField, classes.otherTextField) }}\n                            onChange={handleChange}\n                            name={`currentJobIssue[${JobIssues.OTHER}]`}\n                            value={currentJobIssues[JobIssues.OTHER]}\n                            variant=\"flat\"\n                            containerProps={{ style: props }}\n                        />\n                    )\n            )}\n        </EditDialogField>\n    );\n};\n\nexport const CurrentJobIssuesField = CurrentJobIssuesFieldComponent;\n"]},"metadata":{},"sourceType":"module"}