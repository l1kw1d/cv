{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/profile.jsx\";\nimport React, { useCallback, useMemo, useReducer, useState } from 'react';\nimport { injectIntl, IntlProvider } from 'react-intl';\nimport { createUseStyles, ThemeProvider } from 'react-jss';\nimport mergeWith from 'lodash/mergeWith';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { buildTheme } from '../utils/styles/theme/theme';\nimport { Banner } from './banner/banner';\nimport { Cards } from './cards/cards';\nimport { styles } from './profile_styles';\nimport en from '../i18n/en.json';\nimport fr from '../i18n/fr.json';\nimport '../styles/lib/slick-carousel/slick-theme.css';\nimport '../styles/lib/slick-carousel/slick.css';\nimport { technologiesInitialState, technologiesReducer } from '../store/technologies/technologies_reducer';\nimport { DeveloperProfileContext, StaticDataContext, StoreContext } from '../utils/context/contexts';\nimport { Footer } from './footer/footer';\nimport { mergeOmitNull } from '../utils/data_utils';\nimport { SIDES } from './commons/profile_card/profile_card_side/side';\n\nif (!Intl.PluralRules) {\n  // eslint-disable-next-line global-require\n  require('@formatjs/intl-pluralrules/polyfill'); // eslint-disable-next-line global-require\n\n\n  require('@formatjs/intl-pluralrules/dist/locale-data/en'); // eslint-disable-next-line global-require\n\n\n  require('@formatjs/intl-pluralrules/dist/locale-data/fr');\n}\n\nconst messages = {\n  en,\n  fr\n};\nconst useStyles = createUseStyles(styles);\nconst DEFAULT_OPTIONS = Object.freeze({\n  locale: 'en',\n  customization: {\n    imageHeader: {\n      url: 'https://cdn.filestackcontent.com/8I2wVnCRTFxypXRYLRsp',\n      alt: 'Default Banner'\n    }\n  },\n  dismissFooter: false\n});\nconst DEFAULT_OBJECT = {};\n\nconst DEFAULT_FUNCTION = () => {};\n\nconst DEFAULT_UPLOAD_FUNCTION = async () => 'https://source.unsplash.com/random/4000x2000';\n\nconst DeveloperProfileComponent = ({\n  data: originalData = DEFAULT_OBJECT,\n  options,\n  mode,\n  onEdit: onEditProps = DEFAULT_FUNCTION,\n  onIsEditingChanged = DEFAULT_FUNCTION,\n  onCustomizationChanged,\n  onFilesUpload = DEFAULT_UPLOAD_FUNCTION,\n  additionalNodes,\n  classes: receivedGlobalClasses = {}\n}) => {\n  var _options$customizatio;\n\n  const classes = useStyles(styles);\n  const {\n    apiKeys,\n    endpoints\n  } = options;\n  const [isEditing, setIsEditing] = useState(false);\n  const onEdit = useCallback(newData => {\n    if (typeof onEditProps === 'function') {\n      onEditProps(newData);\n    }\n  }, [onEditProps]);\n  const setIsEditingWithCallback = useCallback(newValue => {\n    setIsEditing(newValue);\n    onIsEditingChanged(newValue);\n  }, [onIsEditingChanged, setIsEditing]);\n  const store = {\n    technologies: useReducer(technologiesReducer, technologiesInitialState)\n  };\n  const staticContext = useMemo(() => ({\n    apiKeys: {\n      giphy: apiKeys === null || apiKeys === void 0 ? void 0 : apiKeys.giphy,\n      unsplash: apiKeys === null || apiKeys === void 0 ? void 0 : apiKeys.unsplash\n    },\n    endpoints,\n    additionalNodes,\n    receivedGlobalClasses\n  }), [apiKeys, endpoints, additionalNodes, receivedGlobalClasses]);\n  const data = useMemo(() => originalData, [JSON.stringify(originalData)]);\n  const context = useMemo(() => ({\n    data,\n    isEditing,\n    setIsEditing: setIsEditingWithCallback,\n    onEdit,\n    onCustomizationChanged,\n    onFilesUpload,\n    mode\n  }), [data, isEditing, onEdit, mode, onCustomizationChanged, onFilesUpload]);\n  const side = useMemo(() => isEditing && SIDES.BACK || (options === null || options === void 0 ? void 0 : options.side), [options, isEditing]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StaticDataContext.Provider, {\n    value: staticContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DeveloperProfileContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Banner, {\n    customizationOptions: options.customization,\n    onCustomizationChanged: onCustomizationChanged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }), additionalNodes === null || additionalNodes === void 0 ? void 0 : additionalNodes.beforeCards, /*#__PURE__*/React.createElement(Cards, {\n    cardsOrder: (_options$customizatio = options.customization) === null || _options$customizatio === void 0 ? void 0 : _options$customizatio.cardsOrder,\n    side: side,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }), !options.dismissFooter && /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 52\n    }\n  })))));\n};\n\nconst WithProvidersDeveloperProfile = ({\n  data,\n  onEdit,\n  onCustomizationChanged,\n  onIsEditingChanged,\n  options = {},\n  mode = 'readOnly',\n  additionalNodes,\n  classes,\n  onFilesUpload,\n  intl: parentIntl\n}) => {\n  const mergedOptions = useMemo(() => mergeWith(cloneDeep(DEFAULT_OPTIONS), JSON.parse(JSON.stringify(options || {})), mergeOmitNull), [JSON.stringify(options)]);\n  const {\n    locale,\n    customization\n  } = mergedOptions;\n  const builtTheme = useMemo(() => buildTheme(customization === null || customization === void 0 ? void 0 : customization.theme), [customization === null || customization === void 0 ? void 0 : customization.theme]);\n  const providerMessages = useMemo(() => ({ ...((parentIntl === null || parentIntl === void 0 ? void 0 : parentIntl.messages) || {}),\n    ...(messages[locale] || messages.en)\n  }), [parentIntl, locale]);\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: builtTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: locale,\n    messages: providerMessages,\n    defaultLocale: locale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeveloperProfileComponent, {\n    data: data,\n    mode: mode,\n    onEdit: onEdit,\n    onCustomizationChanged: onCustomizationChanged,\n    onIsEditingChanged: onIsEditingChanged,\n    options: mergedOptions,\n    additionalNodes: additionalNodes,\n    onFilesUpload: onFilesUpload,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const DeveloperProfile = injectIntl(WithProvidersDeveloperProfile, {\n  enforceContext: false\n});","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/profile.jsx"],"names":["React","useCallback","useMemo","useReducer","useState","injectIntl","IntlProvider","createUseStyles","ThemeProvider","mergeWith","cloneDeep","buildTheme","Banner","Cards","styles","en","fr","technologiesInitialState","technologiesReducer","DeveloperProfileContext","StaticDataContext","StoreContext","Footer","mergeOmitNull","SIDES","Intl","PluralRules","require","messages","useStyles","DEFAULT_OPTIONS","Object","freeze","locale","customization","imageHeader","url","alt","dismissFooter","DEFAULT_OBJECT","DEFAULT_FUNCTION","DEFAULT_UPLOAD_FUNCTION","DeveloperProfileComponent","data","originalData","options","mode","onEdit","onEditProps","onIsEditingChanged","onCustomizationChanged","onFilesUpload","additionalNodes","classes","receivedGlobalClasses","apiKeys","endpoints","isEditing","setIsEditing","newData","setIsEditingWithCallback","newValue","store","technologies","staticContext","giphy","unsplash","JSON","stringify","context","side","BACK","container","beforeCards","cardsOrder","WithProvidersDeveloperProfile","intl","parentIntl","mergedOptions","parse","builtTheme","theme","providerMessages","DeveloperProfile","enforceContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,UAAtC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,YAAzC;AACA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,WAA/C;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,EAAP,MAAe,iBAAf;AAEA,OAAO,8CAAP;AACA,OAAO,wCAAP;AACA,SAASC,wBAAT,EAAmCC,mBAAnC,QAA8D,4CAA9D;AACA,SAASC,uBAAT,EAAkCC,iBAAlC,EAAqDC,YAArD,QAAyE,2BAAzE;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,KAAT,QAAsB,+CAAtB;;AAEA,IAAI,CAACC,IAAI,CAACC,WAAV,EAAuB;AACnB;AACAC,EAAAA,OAAO,CAAC,qCAAD,CAAP,CAFmB,CAGnB;;;AACAA,EAAAA,OAAO,CAAC,gDAAD,CAAP,CAJmB,CAKnB;;;AACAA,EAAAA,OAAO,CAAC,gDAAD,CAAP;AACH;;AAED,MAAMC,QAAQ,GAAG;AACbb,EAAAA,EADa;AAEbC,EAAAA;AAFa,CAAjB;AAIA,MAAMa,SAAS,GAAGtB,eAAe,CAACO,MAAD,CAAjC;AAEA,MAAMgB,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc;AAClCC,EAAAA,MAAM,EAAE,IAD0B;AAElCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,WAAW,EAAE;AACTC,MAAAA,GAAG,EAAE,uDADI;AAETC,MAAAA,GAAG,EAAE;AAFI;AADF,GAFmB;AAQlCC,EAAAA,aAAa,EAAE;AARmB,CAAd,CAAxB;AAWA,MAAMC,cAAc,GAAG,EAAvB;;AACA,MAAMC,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;AACA,MAAMC,uBAAuB,GAAG,YAAY,8CAA5C;;AAEA,MAAMC,yBAAyB,GAAG,CAAC;AACIC,EAAAA,IAAI,EAAEC,YAAY,GAAGL,cADzB;AAEIM,EAAAA,OAFJ;AAGIC,EAAAA,IAHJ;AAIIC,EAAAA,MAAM,EAAEC,WAAW,GAAGR,gBAJ1B;AAKIS,EAAAA,kBAAkB,GAAGT,gBALzB;AAMIU,EAAAA,sBANJ;AAOIC,EAAAA,aAAa,GAAGV,uBAPpB;AAQIW,EAAAA,eARJ;AASIC,EAAAA,OAAO,EAAEC,qBAAqB,GAAG;AATrC,CAAD,KAUO;AAAA;;AACrC,QAAMD,OAAO,GAAGxB,SAAS,CAACf,MAAD,CAAzB;AACA,QAAM;AAAEyC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBX,OAA/B;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4BtD,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM2C,MAAM,GAAG9C,WAAW,CACtB0D,OAAO,IAAI;AACP,QAAI,OAAOX,WAAP,KAAuB,UAA3B,EAAuC;AACnCA,MAAAA,WAAW,CAACW,OAAD,CAAX;AACH;AACJ,GALqB,EAMtB,CAACX,WAAD,CANsB,CAA1B;AAQA,QAAMY,wBAAwB,GAAG3D,WAAW,CAAE4D,QAAD,IAAc;AACvDH,IAAAA,YAAY,CAACG,QAAD,CAAZ;AACAZ,IAAAA,kBAAkB,CAACY,QAAD,CAAlB;AACH,GAH2C,EAGzC,CAACZ,kBAAD,EAAqBS,YAArB,CAHyC,CAA5C;AAIA,QAAMI,KAAK,GAAG;AACVC,IAAAA,YAAY,EAAE5D,UAAU,CAACe,mBAAD,EAAsBD,wBAAtB;AADd,GAAd;AAGA,QAAM+C,aAAa,GAAG9D,OAAO,CACzB,OAAO;AACHqD,IAAAA,OAAO,EAAE;AAAEU,MAAAA,KAAK,EAAEV,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,KAAlB;AAAyBC,MAAAA,QAAQ,EAAEX,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEW;AAA5C,KADN;AAEHV,IAAAA,SAFG;AAGHJ,IAAAA,eAHG;AAIHE,IAAAA;AAJG,GAAP,CADyB,EAOzB,CAACC,OAAD,EAAUC,SAAV,EAAqBJ,eAArB,EAAsCE,qBAAtC,CAPyB,CAA7B;AAUA,QAAMX,IAAI,GAAGzC,OAAO,CAAC,MAAM0C,YAAP,EAAqB,CAACuB,IAAI,CAACC,SAAL,CAAexB,YAAf,CAAD,CAArB,CAApB;AAEA,QAAMyB,OAAO,GAAGnE,OAAO,CACnB,OAAO;AACHyC,IAAAA,IADG;AAEHc,IAAAA,SAFG;AAGHC,IAAAA,YAAY,EAAEE,wBAHX;AAIHb,IAAAA,MAJG;AAKHG,IAAAA,sBALG;AAMHC,IAAAA,aANG;AAOHL,IAAAA;AAPG,GAAP,CADmB,EAUnB,CAACH,IAAD,EAAOc,SAAP,EAAkBV,MAAlB,EAA0BD,IAA1B,EAAgCI,sBAAhC,EAAwDC,aAAxD,CAVmB,CAAvB;AAaA,QAAMmB,IAAI,GAAGpE,OAAO,CAAC,MAAOuD,SAAS,IAAIjC,KAAK,CAAC+C,IAApB,KAA6B1B,OAA7B,aAA6BA,OAA7B,uBAA6BA,OAAO,CAAEyB,IAAtC,CAAP,EAAmD,CAACzB,OAAD,EAAUY,SAAV,CAAnD,CAApB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACmB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAER,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEF,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAEO,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,oBAAoB,EAAExB,OAAO,CAACX,aADlC;AAEI,IAAA,sBAAsB,EAAEgB,sBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKKE,eALL,aAKKA,eALL,uBAKKA,eAAe,CAAEqB,WALtB,eAMI,oBAAC,KAAD;AAAO,IAAA,UAAU,2BAAE5B,OAAO,CAACX,aAAV,0DAAE,sBAAuBwC,UAA1C;AAAsD,IAAA,IAAI,EAAEJ,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOK,CAACzB,OAAO,CAACP,aAAT,iBAA0B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP/B,CADJ,CADJ,CADJ,CADJ;AAiBH,CAzED;;AA2EA,MAAMqC,6BAA6B,GAAG,CAAC;AACnChC,EAAAA,IADmC;AAEnCI,EAAAA,MAFmC;AAGnCG,EAAAA,sBAHmC;AAInCD,EAAAA,kBAJmC;AAKnCJ,EAAAA,OAAO,GAAG,EALyB;AAMnCC,EAAAA,IAAI,GAAG,UAN4B;AAOnCM,EAAAA,eAPmC;AAQnCC,EAAAA,OARmC;AASnCF,EAAAA,aATmC;AAUnCyB,EAAAA,IAAI,EAAEC;AAV6B,CAAD,KAWhC;AACF,QAAMC,aAAa,GAAG5E,OAAO,CACzB,MAAMO,SAAS,CAACC,SAAS,CAACoB,eAAD,CAAV,EAA6BqC,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACC,SAAL,CAAevB,OAAO,IAAI,EAA1B,CAAX,CAA7B,EAAwEtB,aAAxE,CADU,EAEzB,CAAC4C,IAAI,CAACC,SAAL,CAAevB,OAAf,CAAD,CAFyB,CAA7B;AAKA,QAAM;AAAEZ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4B4C,aAAlC;AACA,QAAME,UAAU,GAAG9E,OAAO,CAAC,MAAMS,UAAU,CAACuB,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAE+C,KAAhB,CAAjB,EAAyC,CAAC/C,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAE+C,KAAhB,CAAzC,CAA1B;AAEA,QAAMC,gBAAgB,GAAGhF,OAAO,CAC5B,OAAO,EAAE,IAAI,CAAA2E,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEjD,QAAZ,KAAwB,EAA5B,CAAF;AAAmC,QAAIA,QAAQ,CAACK,MAAD,CAAR,IAAoBL,QAAQ,CAACb,EAAjC;AAAnC,GAAP,CAD4B,EAE5B,CAAC8D,UAAD,EAAa5C,MAAb,CAF4B,CAAhC;AAKA,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE+C,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAE/C,MAAtB;AAA8B,IAAA,QAAQ,EAAEiD,gBAAxC;AAA0D,IAAA,aAAa,EAAEjD,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,yBAAD;AACI,IAAA,IAAI,EAAEU,IADV;AAEI,IAAA,IAAI,EAAEG,IAFV;AAGI,IAAA,MAAM,EAAEC,MAHZ;AAII,IAAA,sBAAsB,EAAEG,sBAJ5B;AAKI,IAAA,kBAAkB,EAAED,kBALxB;AAMI,IAAA,OAAO,EAAE6B,aANb;AAOI,IAAA,eAAe,EAAE1B,eAPrB;AAQI,IAAA,aAAa,EAAED,aARnB;AASI,IAAA,OAAO,EAAEE,OATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAiBH,CA1CD;;AA4CA,OAAO,MAAM8B,gBAAgB,GAAG9E,UAAU,CAACsE,6BAAD,EAAgC;AAAES,EAAAA,cAAc,EAAE;AAAlB,CAAhC,CAAnC","sourcesContent":["import React, { useCallback, useMemo, useReducer, useState } from 'react';\nimport { injectIntl, IntlProvider } from 'react-intl';\nimport { createUseStyles, ThemeProvider } from 'react-jss';\n\nimport mergeWith from 'lodash/mergeWith';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { buildTheme } from '../utils/styles/theme/theme';\nimport { Banner } from './banner/banner';\nimport { Cards } from './cards/cards';\n\nimport { styles } from './profile_styles';\n\nimport en from '../i18n/en.json';\nimport fr from '../i18n/fr.json';\n\nimport '../styles/lib/slick-carousel/slick-theme.css';\nimport '../styles/lib/slick-carousel/slick.css';\nimport { technologiesInitialState, technologiesReducer } from '../store/technologies/technologies_reducer';\nimport { DeveloperProfileContext, StaticDataContext, StoreContext } from '../utils/context/contexts';\nimport { Footer } from './footer/footer';\nimport { mergeOmitNull } from '../utils/data_utils';\nimport { SIDES } from './commons/profile_card/profile_card_side/side';\n\nif (!Intl.PluralRules) {\n    // eslint-disable-next-line global-require\n    require('@formatjs/intl-pluralrules/polyfill');\n    // eslint-disable-next-line global-require\n    require('@formatjs/intl-pluralrules/dist/locale-data/en');\n    // eslint-disable-next-line global-require\n    require('@formatjs/intl-pluralrules/dist/locale-data/fr');\n}\n\nconst messages = {\n    en,\n    fr\n};\nconst useStyles = createUseStyles(styles);\n\nconst DEFAULT_OPTIONS = Object.freeze({\n    locale: 'en',\n    customization: {\n        imageHeader: {\n            url: 'https://cdn.filestackcontent.com/8I2wVnCRTFxypXRYLRsp',\n            alt: 'Default Banner'\n        }\n    },\n    dismissFooter: false\n});\n\nconst DEFAULT_OBJECT = {};\nconst DEFAULT_FUNCTION = () => {};\nconst DEFAULT_UPLOAD_FUNCTION = async () => 'https://source.unsplash.com/random/4000x2000';\n\nconst DeveloperProfileComponent = ({\n                                       data: originalData = DEFAULT_OBJECT,\n                                       options,\n                                       mode,\n                                       onEdit: onEditProps = DEFAULT_FUNCTION,\n                                       onIsEditingChanged = DEFAULT_FUNCTION,\n                                       onCustomizationChanged,\n                                       onFilesUpload = DEFAULT_UPLOAD_FUNCTION,\n                                       additionalNodes,\n                                       classes: receivedGlobalClasses = {}\n                                   }) => {\n    const classes = useStyles(styles);\n    const { apiKeys, endpoints } = options;\n    const [isEditing, setIsEditing] = useState(false);\n    const onEdit = useCallback(\n        newData => {\n            if (typeof onEditProps === 'function') {\n                onEditProps(newData);\n            }\n        },\n        [onEditProps]\n    );\n    const setIsEditingWithCallback = useCallback((newValue) => {\n        setIsEditing(newValue);\n        onIsEditingChanged(newValue);\n    }, [onIsEditingChanged, setIsEditing]);\n    const store = {\n        technologies: useReducer(technologiesReducer, technologiesInitialState)\n    };\n    const staticContext = useMemo(\n        () => ({\n            apiKeys: { giphy: apiKeys?.giphy, unsplash: apiKeys?.unsplash },\n            endpoints,\n            additionalNodes,\n            receivedGlobalClasses\n        }),\n        [apiKeys, endpoints, additionalNodes, receivedGlobalClasses]\n    );\n\n    const data = useMemo(() => originalData, [JSON.stringify(originalData)]);\n\n    const context = useMemo(\n        () => ({\n            data,\n            isEditing,\n            setIsEditing: setIsEditingWithCallback,\n            onEdit,\n            onCustomizationChanged,\n            onFilesUpload,\n            mode\n        }),\n        [data, isEditing, onEdit, mode, onCustomizationChanged, onFilesUpload]\n    );\n\n    const side = useMemo(() => (isEditing && SIDES.BACK) || options?.side, [options, isEditing]);\n\n    return (\n        <div className={classes.container}>\n            <StaticDataContext.Provider value={staticContext}>\n                <StoreContext.Provider value={store}>\n                    <DeveloperProfileContext.Provider value={context}>\n                        <Banner\n                            customizationOptions={options.customization}\n                            onCustomizationChanged={onCustomizationChanged}\n                        />\n                        {additionalNodes?.beforeCards}\n                        <Cards cardsOrder={options.customization?.cardsOrder} side={side} />\n                        {!options.dismissFooter && <Footer />}\n                    </DeveloperProfileContext.Provider>\n                </StoreContext.Provider>\n            </StaticDataContext.Provider>\n        </div>\n    );\n};\n\nconst WithProvidersDeveloperProfile = ({\n    data,\n    onEdit,\n    onCustomizationChanged,\n    onIsEditingChanged,\n    options = {},\n    mode = 'readOnly',\n    additionalNodes,\n    classes,\n    onFilesUpload,\n    intl: parentIntl\n}) => {\n    const mergedOptions = useMemo(\n        () => mergeWith(cloneDeep(DEFAULT_OPTIONS), JSON.parse(JSON.stringify(options || {})), mergeOmitNull),\n        [JSON.stringify(options)]\n    );\n\n    const { locale, customization } = mergedOptions;\n    const builtTheme = useMemo(() => buildTheme(customization?.theme), [customization?.theme]);\n\n    const providerMessages = useMemo(\n        () => ({ ...(parentIntl?.messages || {}), ...(messages[locale] || messages.en) }),\n        [parentIntl, locale]\n    );\n\n    return (\n        <ThemeProvider theme={builtTheme}>\n            <IntlProvider locale={locale} messages={providerMessages} defaultLocale={locale}>\n                <DeveloperProfileComponent\n                    data={data}\n                    mode={mode}\n                    onEdit={onEdit}\n                    onCustomizationChanged={onCustomizationChanged}\n                    onIsEditingChanged={onIsEditingChanged}\n                    options={mergedOptions}\n                    additionalNodes={additionalNodes}\n                    onFilesUpload={onFilesUpload}\n                    classes={classes}\n                />\n            </IntlProvider>\n        </ThemeProvider>\n    );\n};\n\nexport const DeveloperProfile = injectIntl(WithProvidersDeveloperProfile, { enforceContext: false });\n"]},"metadata":{},"sourceType":"module"}