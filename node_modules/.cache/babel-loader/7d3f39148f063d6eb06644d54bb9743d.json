{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/experiences/experiences_front/experiences_front.jsx\";\nimport React, { Fragment, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\nimport { styles } from './experiences_front_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\nconst useStyles = createUseStyles(styles);\n\nconst ExperiencesFrontComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  const [variant] = useCardVariant();\n  const [side, setSide] = useCardSide();\n  const classes = useStyles({\n    variant\n  });\n  const hasWork = useMemo(() => existsAndNotEmpty(data === null || data === void 0 ? void 0 : data.work), [data]);\n  const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [side, setSide]);\n  const title = useMemo(() => {\n    var _data$work;\n\n    const builder = [];\n    const firstExperience = (_data$work = data.work) === null || _data$work === void 0 ? void 0 : _data$work[0];\n\n    if (firstExperience === null || firstExperience === void 0 ? void 0 : firstExperience.position) {\n      builder.push(firstExperience.position);\n    }\n\n    if (builder.length) {\n      builder.push( /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }\n      }));\n    }\n\n    if (firstExperience === null || firstExperience === void 0 ? void 0 : firstExperience.name) {\n      builder.push(`@${firstExperience.name}`);\n    } else if (firstExperience === null || firstExperience === void 0 ? void 0 : firstExperience.location) {\n      builder.push(`@${firstExperience.location}`);\n    } else if (firstExperience === null || firstExperience === void 0 ? void 0 : firstExperience.stillEmployed) {\n      if (moment.isMoment(firstExperience === null || firstExperience === void 0 ? void 0 : firstExperience.startDate)) {\n        builder.push( /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"Experience.front.title.since\",\n          defaultMessage: \"Since {year}\",\n          values: {\n            year: firstExperience.startDate.year()\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }));\n      } else {\n        builder.push( /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: \"Experience.front.title.stillEmployed\",\n          defaultMessage: \"Still employed\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }\n        }));\n      }\n    } else if (!['endDate', 'startDate'].some(key => !moment.isMoment(firstExperience === null || firstExperience === void 0 ? void 0 : firstExperience[key]))) {\n      const {\n        startDate\n      } = firstExperience;\n      const {\n        endDate\n      } = firstExperience;\n      const startYear = startDate.year();\n      const endYear = endDate.year();\n      const isSameYear = startYear === endYear;\n      builder.push( /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"Experience.front.title.fromTo\",\n        defaultMessage: \"From {start} to {end}\",\n        values: {\n          start: isSameYear ? startDate.format('MMMM') : startYear,\n          end: isSameYear ? `${endDate.format('MMMM')} ${endYear}` : endYear\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return builder.map((value, index) => /*#__PURE__*/React.createElement(Fragment, {\n      key: `builder_part_${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, value));\n  }, [data.work]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProfileCardPaddedFront, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CenterContentContainer, {\n    customClasses: {\n      container: classes.container\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({\n    hasWork,\n    title,\n    handleAddButtonClick,\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })))), hasWork && /*#__PURE__*/React.createElement(ProfileCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileCardButton, {\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Experiences.front.action\",\n    defaultMessage: \"See all experiences\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }))));\n};\n\nconst Content = ({\n  hasWork,\n  title,\n  handleAddButtonClick,\n  classes\n}) => {\n  const [isTypographyTruncated, setIsTypographyTruncated] = useState(true);\n  const typographyReference = useRef();\n  useEffect(() => {\n    const element = typographyReference.current;\n    setIsTypographyTruncated(false);\n\n    if ((element === null || element === void 0 ? void 0 : element.offsetHeight) > (element === null || element === void 0 ? void 0 : element.scrollHeight) - 1) {\n      setIsTypographyTruncated(false);\n    }\n  }, []);\n\n  if (hasWork) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.textsContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCardFrontTypography, {\n      ref: typographyReference,\n      classes: {\n        container: cn(classes.typography, isTypographyTruncated && classes.truncatedTypography)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, title));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noWork,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h3\",\n    customClasses: {\n      container: classes.noWorkTypography\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Experiences.front.noWork\",\n    defaultMessage: \"Vous n'avez pas encore ajout\\xE9 d'exp\\xE9riences !\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(NoDataButton, {\n    handleAddButtonClick: handleAddButtonClick,\n    classes: {\n      container: classes.addButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Experiences.noWork.buttonLabel\",\n    defaultMessage: \"Ajouter une exp\\xE9rience\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const ExperiencesFront = memo(ExperiencesFrontComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/experiences/experiences_front/experiences_front.jsx"],"names":["React","Fragment","memo","useCallback","useEffect","useMemo","useRef","useState","cn","createUseStyles","FormattedMessage","moment","Typography","ProfileCardPaddedFront","CenterContentContainer","ProfileCardActions","ProfileCardButton","ProfileCardFrontTypography","useCardVariant","useCardSide","SIDES","styles","existsAndNotEmpty","NoDataButton","useStyles","ExperiencesFrontComponent","data","handleAddButtonClick","variant","side","setSide","classes","hasWork","work","handleButtonClick","FRONT","BACK","title","builder","firstExperience","position","push","length","name","location","stillEmployed","isMoment","startDate","year","some","key","endDate","startYear","endYear","isSameYear","start","format","end","map","value","index","container","Content","isTypographyTruncated","setIsTypographyTruncated","typographyReference","element","current","offsetHeight","scrollHeight","textsContainer","typography","truncatedTypography","noWork","noWorkTypography","addButton","ExperiencesFront"],"mappings":"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","sourcesContent":["import React, { Fragment, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\n\nimport { Typography } from '@wld/ui';\nimport { ProfileCardPaddedFront } from '../../../../commons/profile_card/profile_card_padded_front/profile_card_padding_front';\nimport { CenterContentContainer } from '../../../../commons/center_content_container/center_content_container';\nimport { ProfileCardActions } from '../../../../commons/profile_card/profile_card_actions/profile_card_actions';\nimport { ProfileCardButton } from '../../../../commons/profile_card/profile_card_button/profile_card_button';\nimport { ProfileCardFrontTypography } from '../../../../commons/profile_card/profile_card_front_typography/profile_card_front_typography';\n\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { useCardSide } from '../../../../hooks/profile_card_hooks/use_card_side';\nimport { SIDES } from '../../../../commons/profile_card/profile_card_side/side';\n\nimport { styles } from './experiences_front_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoDataButton } from '../../../../commons/no_data_button/no_data_button';\n\nconst useStyles = createUseStyles(styles);\n\nconst ExperiencesFrontComponent = ({ data, handleAddButtonClick }) => {\n    const [variant] = useCardVariant();\n    const [side, setSide] = useCardSide();\n    const classes = useStyles({ variant });\n\n    const hasWork = useMemo(() => existsAndNotEmpty(data?.work), [data]);\n\n    const handleButtonClick = useCallback(() => setSide(side === SIDES.FRONT ? SIDES.BACK : SIDES.FRONT), [\n        side,\n        setSide\n    ]);\n\n    const title = useMemo(() => {\n        const builder = [];\n        const firstExperience = data.work?.[0];\n        if (firstExperience?.position) {\n            builder.push(firstExperience.position);\n        }\n        if (builder.length) {\n            builder.push(<br />);\n        }\n        if (firstExperience?.name) {\n            builder.push(`@${firstExperience.name}`);\n        } else if (firstExperience?.location) {\n            builder.push(`@${firstExperience.location}`);\n        } else if (firstExperience?.stillEmployed) {\n            if (moment.isMoment(firstExperience?.startDate)) {\n                builder.push(\n                    <FormattedMessage\n                        id=\"Experience.front.title.since\"\n                        defaultMessage=\"Since {year}\"\n                        values={{\n                            year: firstExperience.startDate.year()\n                        }}\n                    />\n                );\n            } else {\n                builder.push(\n                    <FormattedMessage id=\"Experience.front.title.stillEmployed\" defaultMessage=\"Still employed\" />\n                );\n            }\n        } else if (!['endDate', 'startDate'].some(key => !moment.isMoment(firstExperience?.[key]))) {\n            const { startDate } = firstExperience;\n            const { endDate } = firstExperience;\n            const startYear = startDate.year();\n            const endYear = endDate.year();\n            const isSameYear = startYear === endYear;\n            builder.push(\n                <FormattedMessage\n                    id=\"Experience.front.title.fromTo\"\n                    defaultMessage=\"From {start} to {end}\"\n                    values={{\n                        start: isSameYear ? startDate.format('MMMM') : startYear,\n                        end: isSameYear ? `${endDate.format('MMMM')} ${endYear}` : endYear\n                    }}\n                />\n            );\n        }\n        return builder.map((value, index) => (\n            <Fragment key={`builder_part_${index}`}>\n                {value}\n            </Fragment>\n        ));\n    }, [data.work]);\n\n    return (\n        <>\n            <ProfileCardPaddedFront>\n                <CenterContentContainer customClasses={{ container: classes.container }}>\n                    <Content {...{ hasWork, title, handleAddButtonClick, classes }} />\n                </CenterContentContainer>\n            </ProfileCardPaddedFront>\n            {hasWork && (\n                <ProfileCardActions>\n                    <ProfileCardButton onClick={handleButtonClick}>\n                        <FormattedMessage id=\"Experiences.front.action\" defaultMessage=\"See all experiences\" />\n                    </ProfileCardButton>\n                </ProfileCardActions>\n            )}\n        </>\n    );\n};\n\nconst Content = ({ hasWork, title, handleAddButtonClick, classes }) => {\n    const [isTypographyTruncated, setIsTypographyTruncated] = useState(true);\n    const typographyReference = useRef();\n\n    useEffect(() => {\n        const element = typographyReference.current;\n        setIsTypographyTruncated(false);\n        if (element?.offsetHeight > element?.scrollHeight - 1) {\n            setIsTypographyTruncated(false);\n        }\n    }, []);\n    if (hasWork) {\n        return (\n            <div className={classes.textsContainer}>\n                <ProfileCardFrontTypography\n                    ref={typographyReference}\n                    classes={{\n                        container: cn(classes.typography, isTypographyTruncated && classes.truncatedTypography)\n                    }}\n                >\n                    {title}\n                </ProfileCardFrontTypography>\n            </div>\n        );\n    }\n    return (\n        <div className={classes.noWork}>\n            <Typography variant=\"h3\" component=\"h3\" customClasses={{ container: classes.noWorkTypography }}>\n                <FormattedMessage\n                    id=\"Experiences.front.noWork\"\n                    defaultMessage=\"Vous n'avez pas encore ajouté d'expériences !\"\n                />\n            </Typography>\n            <NoDataButton\n                handleAddButtonClick={handleAddButtonClick}\n                classes={{\n                    container: classes.addButton\n                }}\n            >\n                <FormattedMessage id=\"Experiences.noWork.buttonLabel\" defaultMessage=\"Ajouter une expérience\" />\n            </NoDataButton>\n        </div>\n    );\n};\n\nexport const ExperiencesFront = memo(ExperiencesFrontComponent);\n"]},"metadata":{},"sourceType":"module"}