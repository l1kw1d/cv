{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/gifs/gifs_back/gifs_back.jsx\";\nimport React, { memo, useCallback, useMemo, useRef, useState } from 'react';\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport Slider from 'react-slick';\nimport { animated, useSpring, useTransition } from 'react-spring';\nimport { Typography } from '@wld/ui';\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../../../assets/icons/arrow-right.svg\";\nimport { GifsSidesCommons } from '../gifs_sides_commons/gifs_sides_commons';\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\nimport { GIFS_BACK_TRANSITIONS_SPRING_PROPS } from './gifs_back_spring_props';\nimport { styles } from './gifs_back_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoHobby } from './no_hobby/no_hobby';\nconst useStyles = createUseStyles(styles);\nconst SETTINGS = {\n  arrows: true,\n  dots: true,\n  infinite: true,\n  speed: 700,\n  autoplay: true,\n  autoplaySpeed: 4000,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst GifsBackComponent = ({\n  data,\n  handleAddButtonClick\n}) => {\n  var _data$interests;\n\n  const [variant] = useCardVariant();\n  const classes = useStyles({\n    variant\n  });\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const hasChanged = useRef();\n  const handleBeforeChange = useCallback((current, next) => {\n    if (!hasChanged.current) {\n      hasChanged.current = true;\n    }\n\n    setCurrentIndex(next);\n  }, [hasChanged.current]);\n  const sliderReference = useRef();\n  const pauseSlider = useCallback(() => {\n    var _sliderReference$curr;\n\n    return (_sliderReference$curr = sliderReference.current) === null || _sliderReference$curr === void 0 ? void 0 : _sliderReference$curr.slickPause();\n  }, []);\n  const resumeSlider = useCallback(() => {\n    var _sliderReference$curr2;\n\n    return (_sliderReference$curr2 = sliderReference.current) === null || _sliderReference$curr2 === void 0 ? void 0 : _sliderReference$curr2.slickPlay();\n  }, []);\n  return /*#__PURE__*/React.createElement(GifsSidesCommons, {\n    underLayer: /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.slidesContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, SETTINGS, {\n      ref: sliderReference,\n      beforeChange: handleBeforeChange,\n      prevArrow: /*#__PURE__*/React.createElement(Arrow, {\n        classes: classes,\n        arrowRole: \"prev\",\n        buttonProps: {\n          className: classes.previousButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }),\n      nextArrow: /*#__PURE__*/React.createElement(Arrow, {\n        classes: classes,\n        arrowRole: \"next\",\n        buttonProps: {\n          className: classes.nextButton\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), ((_data$interests = data.interests) !== null && _data$interests !== void 0 ? _data$interests : []).map(({\n      gifUrl,\n      name\n    }) => /*#__PURE__*/React.createElement(SlideItem, {\n      key: `gif_${gifUrl}_${name}`,\n      gifUrl: gifUrl,\n      name: name,\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({\n    data,\n    hasChanged,\n    currentIndex,\n    pauseSlider,\n    resumeSlider,\n    handleAddButtonClick,\n    classes\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst Content = ({\n  data,\n  pauseSlider,\n  hasChanged,\n  currentIndex,\n  resumeSlider,\n  handleAddButtonClick,\n  classes\n}) => {\n  var _data$interests$curre, _data$interests2;\n\n  const hasHobby = useMemo(() => existsAndNotEmpty(data === null || data === void 0 ? void 0 : data.interests), [data]);\n  const transitions = useTransition((_data$interests$curre = (_data$interests2 = data.interests) === null || _data$interests2 === void 0 ? void 0 : _data$interests2[currentIndex]) !== null && _data$interests$curre !== void 0 ? _data$interests$curre : {}, item => `gif_name_${item.name}`, { ...GIFS_BACK_TRANSITIONS_SPRING_PROPS,\n    immediate: !hasChanged.current\n  });\n\n  if (!hasHobby) {\n    return /*#__PURE__*/React.createElement(NoHobby, Object.assign({\n      handleAddButtonClick\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  return transitions.map(({\n    item,\n    key,\n    props\n  }) => (item === null || item === void 0 ? void 0 : item.name) && /*#__PURE__*/React.createElement(TransitioningItem, {\n    item: item,\n    key: key,\n    props: props,\n    classes: classes,\n    pauseSlider: pauseSlider,\n    resumeSlider: resumeSlider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst DEFAULT_ARROW_SPRING_PROPS = Object.freeze({\n  scale: 1\n});\nconst PRESSED_ARROW_SPRING_PROPS = Object.freeze({\n  scale: 0.9\n});\n\nconst Arrow = ({\n  classes,\n  onClick,\n  arrowRole\n}) => {\n  const [springProps, setSpringProps] = useSpring(() => DEFAULT_ARROW_SPRING_PROPS);\n  const handleMouseDown = useCallback(() => setSpringProps(PRESSED_ARROW_SPRING_PROPS), [setSpringProps]);\n  const handleMouseUp = useCallback(() => setSpringProps(DEFAULT_ARROW_SPRING_PROPS), [setSpringProps]);\n  return /*#__PURE__*/React.createElement(animated.button, {\n    onClick: onClick,\n    className: cn(classes.arrow, arrowRole === 'next' && classes.nextArrow, arrowRole === 'prev' && cn(classes.reverseArrow, classes.prevArrow)),\n    type: \"button\",\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onFocus: handleMouseDown,\n    onBlur: handleMouseUp,\n    style: {\n      transform: springProps.scale.to(value => `scale3d(${value}, ${value}, ${value})`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst SlideItem = ({\n  gifUrl,\n  name,\n  classes\n}) => {\n  if (!gifUrl) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.solidBackground,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"img\", {\n    key: `gifs_back_carousel_image_${gifUrl}_${name}`,\n    className: classes.image,\n    src: gifUrl,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }\n  });\n};\n\nconst TransitioningItem = ({\n  item,\n  props,\n  pauseSlider,\n  resumeSlider,\n  classes\n}) => {\n  if (!(item === null || item === void 0 ? void 0 : item.gifUrl)) {\n    return /*#__PURE__*/React.createElement(animated.div, {\n      className: classes.transitioningItemWithoutGif,\n      style: props,\n      onMouseEnter: pauseSlider,\n      onMouseLeave: resumeSlider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      customClasses: {\n        container: classes.slideNameWithoutGif\n      },\n      color: \"light\",\n      variant: \"h3\",\n      component: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, item.name));\n  }\n\n  return /*#__PURE__*/React.createElement(Typography, {\n    customClasses: {\n      container: classes.slideName\n    },\n    component: animated.div,\n    style: props,\n    color: \"light\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, item.name);\n};\n\nexport const GifsBack = memo(GifsBackComponent);","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/gifs/gifs_back/gifs_back.jsx"],"names":["React","memo","useCallback","useMemo","useRef","useState","cn","createUseStyles","Slider","animated","useSpring","useTransition","Typography","GifsSidesCommons","useCardVariant","GIFS_BACK_TRANSITIONS_SPRING_PROPS","styles","existsAndNotEmpty","NoHobby","useStyles","SETTINGS","arrows","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","GifsBackComponent","data","handleAddButtonClick","variant","classes","currentIndex","setCurrentIndex","hasChanged","handleBeforeChange","current","next","sliderReference","pauseSlider","slickPause","resumeSlider","slickPlay","slidesContainer","className","previousButton","nextButton","interests","map","gifUrl","name","Content","hasHobby","transitions","item","immediate","key","props","DEFAULT_ARROW_SPRING_PROPS","Object","freeze","scale","PRESSED_ARROW_SPRING_PROPS","Arrow","onClick","arrowRole","springProps","setSpringProps","handleMouseDown","handleMouseUp","arrow","nextArrow","reverseArrow","prevArrow","transform","to","value","SlideItem","solidBackground","image","TransitioningItem","transitioningItemWithoutGif","container","slideNameWithoutGif","slideName","div","GifsBack"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useRef, useState } from 'react';\n\nimport cn from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport Slider from 'react-slick';\nimport { animated, useSpring, useTransition } from 'react-spring';\n\nimport { Typography } from '@wld/ui';\n\nimport { ReactComponent as ArrowIcon } from '../../../../../assets/icons/arrow-right.svg';\n\nimport { GifsSidesCommons } from '../gifs_sides_commons/gifs_sides_commons';\n\nimport { useCardVariant } from '../../../../hooks/profile_card_hooks/use_card_variant';\n\nimport { GIFS_BACK_TRANSITIONS_SPRING_PROPS } from './gifs_back_spring_props';\n\nimport { styles } from './gifs_back_styles';\nimport { existsAndNotEmpty } from '../../../utils/exists_and_not_empty';\nimport { NoHobby } from './no_hobby/no_hobby';\n\nconst useStyles = createUseStyles(styles);\n\nconst SETTINGS = {\n    arrows: true,\n    dots: true,\n    infinite: true,\n    speed: 700,\n    autoplay: true,\n    autoplaySpeed: 4000,\n    slidesToShow: 1,\n    slidesToScroll: 1\n};\n\nconst GifsBackComponent = ({ data, handleAddButtonClick }) => {\n    const [variant] = useCardVariant();\n    const classes = useStyles({ variant });\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const hasChanged = useRef();\n    const handleBeforeChange = useCallback(\n        (current, next) => {\n            if (!hasChanged.current) {\n                hasChanged.current = true;\n            }\n            setCurrentIndex(next);\n        },\n        [hasChanged.current]\n    );\n\n    const sliderReference = useRef();\n\n    const pauseSlider = useCallback(() => sliderReference.current?.slickPause(), []);\n\n    const resumeSlider = useCallback(() => sliderReference.current?.slickPlay(), []);\n\n    return (\n        <GifsSidesCommons\n            underLayer={\n                <div className={classes.slidesContainer}>\n                    <Slider\n                        {...SETTINGS}\n                        ref={sliderReference}\n                        beforeChange={handleBeforeChange}\n                        prevArrow={\n                            <Arrow\n                                classes={classes}\n                                arrowRole=\"prev\"\n                                buttonProps={{ className: classes.previousButton }}\n                            />\n                        }\n                        nextArrow={\n                            <Arrow classes={classes} arrowRole=\"next\" buttonProps={{ className: classes.nextButton }} />\n                        }\n                    >\n                        {(data.interests ?? []).map(({ gifUrl, name }) => (\n                            <SlideItem key={`gif_${gifUrl}_${name}`} gifUrl={gifUrl} name={name} classes={classes} />\n                        ))}\n                    </Slider>\n                </div>\n            }\n        >\n            <Content\n                {...{ data, hasChanged, currentIndex, pauseSlider, resumeSlider, handleAddButtonClick, classes }}\n            />\n        </GifsSidesCommons>\n    );\n};\n\nconst Content = ({ data, pauseSlider, hasChanged, currentIndex, resumeSlider, handleAddButtonClick, classes }) => {\n    const hasHobby = useMemo(() => existsAndNotEmpty(data?.interests), [data]);\n\n    const transitions = useTransition(data.interests?.[currentIndex] ?? {}, item => `gif_name_${item.name}`, {\n        ...GIFS_BACK_TRANSITIONS_SPRING_PROPS,\n        immediate: !hasChanged.current\n    });\n\n    if (!hasHobby) {\n        return <NoHobby {...{ handleAddButtonClick }} />;\n    }\n    return transitions.map(\n        ({ item, key, props }) =>\n            item?.name && (\n                <TransitioningItem\n                    item={item}\n                    key={key}\n                    props={props}\n                    classes={classes}\n                    pauseSlider={pauseSlider}\n                    resumeSlider={resumeSlider}\n                />\n            )\n    );\n};\n\nconst DEFAULT_ARROW_SPRING_PROPS = Object.freeze({\n    scale: 1\n});\n\nconst PRESSED_ARROW_SPRING_PROPS = Object.freeze({\n    scale: 0.9\n});\n\nconst Arrow = ({ classes, onClick, arrowRole }) => {\n    const [springProps, setSpringProps] = useSpring(() => DEFAULT_ARROW_SPRING_PROPS);\n    const handleMouseDown = useCallback(() => setSpringProps(PRESSED_ARROW_SPRING_PROPS), [setSpringProps]);\n    const handleMouseUp = useCallback(() => setSpringProps(DEFAULT_ARROW_SPRING_PROPS), [setSpringProps]);\n\n    return (\n        <animated.button\n            onClick={onClick}\n            className={cn(\n                classes.arrow,\n                arrowRole === 'next' && classes.nextArrow,\n                arrowRole === 'prev' && cn(classes.reverseArrow, classes.prevArrow)\n            )}\n            type=\"button\"\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleMouseUp}\n            onFocus={handleMouseDown}\n            onBlur={handleMouseUp}\n            style={{\n                transform: springProps.scale.to(value => `scale3d(${value}, ${value}, ${value})`)\n            }}\n        >\n            <ArrowIcon />\n        </animated.button>\n    );\n};\n\nconst SlideItem = ({ gifUrl, name, classes }) => {\n    if (!gifUrl) {\n        return <div className={classes.solidBackground} />;\n    }\n    return <img key={`gifs_back_carousel_image_${gifUrl}_${name}`} className={classes.image} src={gifUrl} alt={name} />;\n};\n\nconst TransitioningItem = ({ item, props, pauseSlider, resumeSlider, classes }) => {\n    if (!item?.gifUrl) {\n        return (\n            <animated.div\n                className={classes.transitioningItemWithoutGif}\n                style={props}\n                onMouseEnter={pauseSlider}\n                onMouseLeave={resumeSlider}\n            >\n                <Typography\n                    customClasses={{\n                        container: classes.slideNameWithoutGif\n                    }}\n                    color=\"light\"\n                    variant=\"h3\"\n                    component=\"h4\"\n                >\n                    {item.name}\n                </Typography>\n            </animated.div>\n        );\n    }\n    return (\n        <Typography\n            customClasses={{ container: classes.slideName }}\n            component={animated.div}\n            style={props}\n            color=\"light\"\n            variant=\"h2\"\n        >\n            {item.name}\n        </Typography>\n    );\n};\n\nexport const GifsBack = memo(GifsBackComponent);\n"]},"metadata":{},"sourceType":"module"}