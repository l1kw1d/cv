{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/dream_job/dream_job_card.jsx\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { DreamJobFront } from './dream_job_front/dream_job_front';\nimport { DreamJobBack } from './dream_job_back/dream_job_back';\nimport { DreamJobCardEditDialog } from './dream_job_edit_dialog/dream_job_card_edit_dialog';\nimport { DreamJobValidationSchema, validateDreamjobComplete } from './data/validator';\nimport { mapDreamJobFromJsonResume, mapDreamJobToJsonResume } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst DreamJobCardComponent = ({\n  variant,\n  side\n}) => {\n  const [mode] = useMode();\n  const {\n    data,\n    isEditing,\n    onEdit\n  } = useContext(DeveloperProfileContext);\n  const mappedData = useMemo(() => mapDreamJobFromJsonResume(data), [data]);\n  const onDialogEdited = useCallback(editedData => {\n    onEdit(mapDreamJobToJsonResume(editedData));\n  }, [onEdit]);\n  const isComplete = useMemo(() => validateDreamjobComplete(mappedData), [mappedData]);\n\n  if (!isComplete && mode !== 'edit') {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ProfileCard, {\n    kind: \"dreamjob\",\n    isEditingProfile: isEditing,\n    isComplete: isComplete,\n    data: mappedData,\n    sides: {\n      front: DreamJobFront,\n      back: DreamJobBack\n    },\n    editDialog: {\n      component: DreamJobCardEditDialog,\n      validationSchema: DreamJobValidationSchema,\n      onEdit: onDialogEdited\n    },\n    variant: variant,\n    side: side,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  });\n};\n\nexport const DreamJobCard = DreamJobCardComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/dream_job/dream_job_card.jsx"],"names":["React","useCallback","useContext","useMemo","ProfileCard","DreamJobFront","DreamJobBack","DreamJobCardEditDialog","DreamJobValidationSchema","validateDreamjobComplete","mapDreamJobFromJsonResume","mapDreamJobToJsonResume","DeveloperProfileContext","useMode","DreamJobCardComponent","variant","side","mode","data","isEditing","onEdit","mappedData","onDialogEdited","editedData","isComplete","front","back","component","validationSchema","DreamJobCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,EAAyCC,OAAzC,QAAwD,OAAxD;AAEA,SAASC,WAAT,QAA4B,4CAA5B;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,sBAAT,QAAuC,oDAAvC;AACA,SAASC,wBAAT,EAAmCC,wBAAnC,QAAmE,kBAAnE;AAEA,SAASC,yBAAT,EAAoCC,uBAApC,QAAmE,gBAAnE;AACA,SAASC,uBAAT,QAAwC,oCAAxC;AACA,SAASC,OAAT,QAAwB,yBAAxB;;AAEA,MAAMC,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACjD,QAAM,CAACC,IAAD,IAASJ,OAAO,EAAtB;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA8BlB,UAAU,CAACU,uBAAD,CAA9C;AACA,QAAMS,UAAU,GAAGlB,OAAO,CAAC,MAAMO,yBAAyB,CAACQ,IAAD,CAAhC,EAAwC,CAACA,IAAD,CAAxC,CAA1B;AAEA,QAAMI,cAAc,GAAGrB,WAAW,CAC9BsB,UAAU,IAAI;AACVH,IAAAA,MAAM,CAACT,uBAAuB,CAACY,UAAD,CAAxB,CAAN;AACH,GAH6B,EAI9B,CAACH,MAAD,CAJ8B,CAAlC;AAOA,QAAMI,UAAU,GAAGrB,OAAO,CAAC,MAAMM,wBAAwB,CAACY,UAAD,CAA/B,EAA6C,CAACA,UAAD,CAA7C,CAA1B;;AAEA,MAAI,CAACG,UAAD,IAAeP,IAAI,KAAK,MAA5B,EAAoC;AAChC,WAAO,IAAP;AACH;;AAED,sBACI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,gBAAgB,EAAEE,SAFtB;AAGI,IAAA,UAAU,EAAEK,UAHhB;AAII,IAAA,IAAI,EAAEH,UAJV;AAKI,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAEpB,aADJ;AAEHqB,MAAAA,IAAI,EAAEpB;AAFH,KALX;AASI,IAAA,UAAU,EAAE;AACRqB,MAAAA,SAAS,EAAEpB,sBADH;AAERqB,MAAAA,gBAAgB,EAAEpB,wBAFV;AAGRY,MAAAA,MAAM,EAAEE;AAHA,KAThB;AAcI,IAAA,OAAO,EAAEP,OAdb;AAeI,IAAA,IAAI,EAAEC,IAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAmBH,CArCD;;AAuCA,OAAO,MAAMa,YAAY,GAAGf,qBAArB","sourcesContent":["import React, { useCallback, useContext, useMemo } from 'react';\n\nimport { ProfileCard } from '../../../commons/profile_card/profile_card';\nimport { DreamJobFront } from './dream_job_front/dream_job_front';\nimport { DreamJobBack } from './dream_job_back/dream_job_back';\nimport { DreamJobCardEditDialog } from './dream_job_edit_dialog/dream_job_card_edit_dialog';\nimport { DreamJobValidationSchema, validateDreamjobComplete } from './data/validator';\n\nimport { mapDreamJobFromJsonResume, mapDreamJobToJsonResume } from './data/mapping';\nimport { DeveloperProfileContext } from '../../../../utils/context/contexts';\nimport { useMode } from '../../../hooks/use_mode';\n\nconst DreamJobCardComponent = ({ variant, side }) => {\n    const [mode] = useMode();\n    const { data, isEditing, onEdit } = useContext(DeveloperProfileContext);\n    const mappedData = useMemo(() => mapDreamJobFromJsonResume(data), [data]);\n\n    const onDialogEdited = useCallback(\n        editedData => {\n            onEdit(mapDreamJobToJsonResume(editedData));\n        },\n        [onEdit]\n    );\n\n    const isComplete = useMemo(() => validateDreamjobComplete(mappedData), [mappedData]);\n\n    if (!isComplete && mode !== 'edit') {\n        return null;\n    }\n\n    return (\n        <ProfileCard\n            kind=\"dreamjob\"\n            isEditingProfile={isEditing}\n            isComplete={isComplete}\n            data={mappedData}\n            sides={{\n                front: DreamJobFront,\n                back: DreamJobBack\n            }}\n            editDialog={{\n                component: DreamJobCardEditDialog,\n                validationSchema: DreamJobValidationSchema,\n                onEdit: onDialogEdited\n            }}\n            variant={variant}\n            side={side}\n        />\n    );\n};\n\nexport const DreamJobCard = DreamJobCardComponent;\n"]},"metadata":{},"sourceType":"module"}