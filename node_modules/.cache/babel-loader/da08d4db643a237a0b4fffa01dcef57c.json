{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_link/project_dialog_content_link.jsx\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\nimport { TextField, Typography } from '@wld/ui';\nimport { useFormikContext } from 'formik';\nimport { styles } from './project_dialog_content_link_styles';\nconst useStyles = createUseStyles(styles);\n\nconst ProjectDialogContentLinkComponent = ({\n  link,\n  isEditing\n}) => {\n  const classes = useStyles({\n    isEditing\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    title: link,\n    isEditing: isEditing,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst Content = ({\n  link,\n  isEditing,\n  classes\n}) => {\n  if (isEditing) {\n    return /*#__PURE__*/React.createElement(EditingContent, {\n      title: link,\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultContent, {\n    title: link,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  });\n};\n\nconst DefaultContent = ({\n  link,\n  classes\n}) => /*#__PURE__*/React.createElement(Typography, {\n  variant: \"h2\",\n  component: \"h3\",\n  customClasses: {\n    container: classes.typography\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, link);\n\nconst EditingContent = ({\n  classes\n}) => {\n  const {\n    handleChange,\n    values,\n    errors\n  } = useFormikContext();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"label\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"Project.dialog.link.title\",\n    defaultMessage: \"Project's list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"flat\",\n    onChange: handleChange,\n    name: \"link\",\n    value: values.link,\n    customClasses: {\n      container: classes.textField\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), (errors === null || errors === void 0 ? void 0 : errors.link) && /*#__PURE__*/React.createElement(Typography, {\n    color: \"danger\",\n    variant: \"helper\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, errors.link));\n};\n\nexport const ProjectDialogContentLink = ProjectDialogContentLinkComponent;","map":{"version":3,"sources":["/root/Desktop/Good-fordev/site-perso/src/package/components/cards/cards_types/projects/project_dialog/project_dialog_content_link/project_dialog_content_link.jsx"],"names":["React","FormattedMessage","createUseStyles","TextField","Typography","useFormikContext","styles","useStyles","ProjectDialogContentLinkComponent","link","isEditing","classes","container","Content","DefaultContent","typography","EditingContent","handleChange","values","errors","textField","ProjectDialogContentLink"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { FormattedMessage } from 'react-intl';\nimport { createUseStyles } from 'react-jss';\n\nimport { TextField, Typography } from '@wld/ui';\nimport { useFormikContext } from 'formik';\n\nimport { styles } from './project_dialog_content_link_styles';\n\nconst useStyles = createUseStyles(styles);\n\nconst ProjectDialogContentLinkComponent = ({ link, isEditing }) => {\n    const classes = useStyles({ isEditing });\n    return (\n        <div className={classes.container}>\n            <Content title={link} isEditing={isEditing} classes={classes} />\n        </div>\n    );\n};\n\nconst Content = ({ link, isEditing, classes }) => {\n    if (isEditing) {\n        return <EditingContent title={link} classes={classes} />;\n    }\n    return <DefaultContent title={link} classes={classes} />;\n};\n\nconst DefaultContent = ({ link, classes }) => (\n    <Typography variant=\"h2\" component=\"h3\" customClasses={{ container: classes.typography }}>\n        {link}\n    </Typography>\n);\n\nconst EditingContent = ({ classes }) => {\n    const { handleChange, values, errors } = useFormikContext();\n\n    return (\n        <>\n            <Typography variant=\"label\" component=\"div\">\n                <FormattedMessage id=\"Project.dialog.link.title\" defaultMessage=\"Project's list\" />\n            </Typography>\n            <TextField\n                fullWidth\n                variant=\"flat\"\n                onChange={handleChange}\n                name=\"link\"\n                value={values.link}\n                customClasses={{\n                    container: classes.textField\n                }}\n            />\n            {errors?.link && (\n                <Typography color=\"danger\" variant=\"helper\" component=\"p\">\n                    {errors.link}\n                </Typography>\n            )}\n        </>\n    );\n};\n\nexport const ProjectDialogContentLink = ProjectDialogContentLinkComponent;\n"]},"metadata":{},"sourceType":"module"}